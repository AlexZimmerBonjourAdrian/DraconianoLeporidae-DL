// Compiled shader for Windows, Mac, Linux

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Sprites/Custom/SpriteShadows" {
Properties {
[PerRendererData]  _MainTex ("Sprite Texture", 2D) = "white" { }
 _Color ("Tint", Color) = (1.000000,1.000000,1.000000,1.000000)
[MaterialToggle]  PixelSnap ("Pixel snap", Float) = 0.000000
[HideInInspector]  _RendererColor ("RendererColor", Color) = (1.000000,1.000000,1.000000,1.000000)
[HideInInspector]  _Flip ("Flip", Vector) = (1.000000,1.000000,1.000000,1.000000)
[PerRendererData]  _AlphaTex ("External Alpha", 2D) = "white" { }
[PerRendererData]  _EnableExternalAlpha ("Enable External Alpha", Float) = 0.000000
 _NarutoIsOverrated ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.500000
}
SubShader { 
 Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" "CanUseSpriteAtlas"="true" "PreviewType"="Plane" }


 // Stats for Vertex shader:
 //        d3d11: 42 avg math (29..55)
 // Stats for Fragment shader:
 //        d3d11: 39 avg math (22..57), 4 avg texture (2..7), 3 avg branch (2..4)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="Transparent" "CanUseSpriteAtlas"="true" "PreviewType"="Plane" }
  ZWrite Off
  Cull Off
  Blend One OneMinusSrcAlpha
  ColorMask RGB
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords: DIRECTIONAL
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   2: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   6: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  12: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  13: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  19: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  20: mul r1.x, r0.y, r0.y
  21: mad r1.x, r0.x, r0.x, -r1.x
  22: mul r2.xyzw, r0.yzzx, r0.xyzz
  23: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  24: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  25: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  26: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  27: mov r0.w, l(1.000000)
  28: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  29: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  30: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  31: add r0.xyz, r1.xyzx, r2.xyzx
  32: max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  33: mov o6.xyzw, l(0,0,0,0)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 22 math, 3 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyzw, r0.xyzw, v4.xyzw
   2: mul r0.xyz, r1.wwww, r1.xyzx
   3: mad r0.w, r0.w, v4.w, -cb0[6].x
   4: lt r0.w, r0.w, l(0.000000)
   5: discard_nz r0.w
   6: eq r0.w, cb2[0].x, l(1.000000)
   7: if_nz r0.w
   8:   eq r0.w, cb2[0].y, l(1.000000)
   9:   mul r1.xyz, v3.yyyy, cb2[2].xyzx
  10:   mad r1.xyz, cb2[1].xyzx, v3.xxxx, r1.xyzx
  11:   mad r1.xyz, cb2[3].xyzx, v3.zzzz, r1.xyzx
  12:   add r1.xyz, r1.xyzx, cb2[4].xyzx
  13:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  14:   add r1.xyz, r1.xyzx, -cb2[6].xyzx
  15:   mul r2.yzw, r1.xxyz, cb2[5].xxyz
  16:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  17:   mad r1.x, cb2[0].z, l(0.500000), l(0.750000)
  18:   max r2.x, r0.w, r1.x
  19:   sample r2.xyzw, r2.xzwx, t1.xyzw, s0
  20: else 
  21:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  22: endif 
  23: dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
  24: mul r1.xyz, r0.wwww, cb0[2].xyzx
  25: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: mul r1.xyz, r0.xyzx, r1.xyzx
  28: mul r0.xyz, r0.xyzx, v5.xyzx
  29: mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  30: mov o0.w, r1.w
  31: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL LIGHTPROBE_SH
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   2: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   6: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  12: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  13: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  19: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  20: mul r1.x, r0.y, r0.y
  21: mad r1.x, r0.x, r0.x, -r1.x
  22: mul r2.xyzw, r0.yzzx, r0.xyzz
  23: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  24: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  25: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  26: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  27: mov r0.w, l(1.000000)
  28: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  29: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  30: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  31: add r0.xyz, r1.xyzx, r2.xyzx
  32: max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  33: mov o6.xyzw, l(0,0,0,0)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 22 math, 3 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyzw, r0.xyzw, v4.xyzw
   2: mul r0.xyz, r1.wwww, r1.xyzx
   3: mad r0.w, r0.w, v4.w, -cb0[6].x
   4: lt r0.w, r0.w, l(0.000000)
   5: discard_nz r0.w
   6: eq r0.w, cb2[0].x, l(1.000000)
   7: if_nz r0.w
   8:   eq r0.w, cb2[0].y, l(1.000000)
   9:   mul r1.xyz, v3.yyyy, cb2[2].xyzx
  10:   mad r1.xyz, cb2[1].xyzx, v3.xxxx, r1.xyzx
  11:   mad r1.xyz, cb2[3].xyzx, v3.zzzz, r1.xyzx
  12:   add r1.xyz, r1.xyzx, cb2[4].xyzx
  13:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  14:   add r1.xyz, r1.xyzx, -cb2[6].xyzx
  15:   mul r2.yzw, r1.xxyz, cb2[5].xxyz
  16:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  17:   mad r1.x, cb2[0].z, l(0.500000), l(0.750000)
  18:   max r2.x, r0.w, r1.x
  19:   sample r2.xyzw, r2.xzwx, t1.xyzw, s0
  20: else 
  21:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  22: endif 
  23: dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
  24: mul r1.xyz, r0.wwww, cb0[2].xyzx
  25: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: mul r1.xyz, r0.xyzx, r1.xyzx
  28: mul r0.xyz, r0.xyzx, v5.xyzx
  29: mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  30: mov o0.w, r1.w
  31: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL SHADOWS_SCREEN
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   2: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   6: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mov o0.xyzw, r1.xyzw
  11: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  12: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  13: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  14: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  15: dp3 r0.w, r0.xyzx, r0.xyzx
  16: rsq r0.w, r0.w
  17: mul r0.xyz, r0.wwww, r0.xyzx
  18: mov o2.xyz, r0.xyzx
  19: mul r2.xyzw, v7.xyzw, cb0[4].xyzw
  20: mul o4.xyzw, r2.xyzw, cb5[0].xyzw
  21: mul r0.w, r0.y, r0.y
  22: mad r0.w, r0.x, r0.x, -r0.w
  23: mul r2.xyzw, r0.yzzx, r0.xyzz
  24: dp4 r0.x, cb2[42].xyzw, r2.xyzw
  25: dp4 r0.y, cb2[43].xyzw, r2.xyzw
  26: dp4 r0.z, cb2[44].xyzw, r2.xyzw
  27: mad o5.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  28: mul r0.x, r1.y, cb1[5].x
  29: mul r0.w, r0.x, l(0.500000)
  30: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  31: mov o6.zw, r1.zzzw
  32: add o6.xy, r0.zzzz, r0.xwxx
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 55 math, 7 temp registers, 6 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, v4.xyzw
   2: mul r0.xyz, r1.wwww, r1.xyzx
   3: mad r0.w, r0.w, v4.w, -cb0[6].x
   4: lt r0.w, r0.w, l(0.000000)
   5: discard_nz r0.w
   6: add r1.xyz, -v3.xyzx, cb1[4].xyzx
   7: mov r2.x, cb4[9].z
   8: mov r2.y, cb4[10].z
   9: mov r2.z, cb4[11].z
  10: dp3 r0.w, r1.xyzx, r2.xyzx
  11: add r1.xyz, v3.xyzx, -cb3[25].xyzx
  12: dp3 r1.x, r1.xyzx, r1.xyzx
  13: sqrt r1.x, r1.x
  14: add r1.x, -r0.w, r1.x
  15: mad r0.w, cb3[25].w, r1.x, r0.w
  16: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  17: eq r1.x, cb5[0].x, l(1.000000)
  18: if_nz r1.x
  19:   eq r1.y, cb5[0].y, l(1.000000)
  20:   mul r2.xyz, v3.yyyy, cb5[2].xyzx
  21:   mad r2.xyz, cb5[1].xyzx, v3.xxxx, r2.xyzx
  22:   mad r2.xyz, cb5[3].xyzx, v3.zzzz, r2.xyzx
  23:   add r2.xyz, r2.xyzx, cb5[4].xyzx
  24:   movc r2.xyz, r1.yyyy, r2.xyzx, v3.xyzx
  25:   add r2.xyz, r2.xyzx, -cb5[6].xyzx
  26:   mul r2.yzw, r2.xxyz, cb5[5].xxyz
  27:   mad r1.y, r2.y, l(0.250000), l(0.750000)
  28:   mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
  29:   max r2.x, r1.z, r1.y
  30:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  31: else 
  32:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r1.y, r2.xyzw, cb2[46].xyzw
  35: div r2.xy, v6.xyxx, v6.wwww
  36: sample r2.xyzw, r2.xyxx, t1.xyzw, s1
  37: add r1.y, r1.y, -r2.x
  38: mad r0.w, r0.w, r1.y, r2.x
  39: mul r2.xyz, r0.wwww, cb0[2].xyzx
  40: if_nz r1.x
  41:   eq r0.w, cb5[0].y, l(1.000000)
  42:   mul r1.xyz, v3.yyyy, cb5[2].xyzx
  43:   mad r1.xyz, cb5[1].xyzx, v3.xxxx, r1.xyzx
  44:   mad r1.xyz, cb5[3].xyzx, v3.zzzz, r1.xyzx
  45:   add r1.xyz, r1.xyzx, cb5[4].xyzx
  46:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  47:   add r1.xyz, r1.xyzx, -cb5[6].xyzx
  48:   mul r3.yzw, r1.xxyz, cb5[5].xxyz
  49:   mul r0.w, r3.y, l(0.250000)
  50:   mul r1.x, cb5[0].z, l(0.500000)
  51:   mad r1.y, -cb5[0].z, l(0.500000), l(0.250000)
  52:   max r0.w, r0.w, r1.x
  53:   min r3.x, r1.y, r0.w
  54:   sample r4.xyzw, r3.xzwx, t2.xyzw, s0
  55:   add r1.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  56:   sample r5.xyzw, r1.xyzx, t2.xyzw, s0
  57:   add r1.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  58:   sample r3.xyzw, r1.xyzx, t2.xyzw, s0
  59:   mov r6.xyz, v2.xyzx
  60:   mov r6.w, l(1.000000)
  61:   dp4 r1.x, r4.xyzw, r6.xyzw
  62:   dp4 r1.y, r5.xyzw, r6.xyzw
  63:   dp4 r1.z, r3.xyzw, r6.xyzw
  64: else 
  65:   mov r3.xyz, v2.xyzx
  66:   mov r3.w, l(1.000000)
  67:   dp4 r1.x, cb2[39].xyzw, r3.xyzw
  68:   dp4 r1.y, cb2[40].xyzw, r3.xyzw
  69:   dp4 r1.z, cb2[41].xyzw, r3.xyzw
  70: endif 
  71: add r1.xyz, r1.xyzx, v5.xyzx
  72: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  73: dp3 r0.w, v2.xyzx, cb2[0].xyzx
  74: max r0.w, r0.w, l(0.000000)
  75: mul r2.xyz, r0.xyzx, r2.xyzx
  76: mul r0.xyz, r0.xyzx, r1.xyzx
  77: mad o0.xyz, r2.xyzx, r0.wwww, r0.xyzx
  78: mov o0.w, r1.w
  79: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   2: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   6: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mov o0.xyzw, r1.xyzw
  11: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  12: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  13: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  14: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  15: dp3 r0.w, r0.xyzx, r0.xyzx
  16: rsq r0.w, r0.w
  17: mul r0.xyz, r0.wwww, r0.xyzx
  18: mov o2.xyz, r0.xyzx
  19: mul r2.xyzw, v7.xyzw, cb0[4].xyzw
  20: mul o4.xyzw, r2.xyzw, cb5[0].xyzw
  21: mul r0.w, r0.y, r0.y
  22: mad r0.w, r0.x, r0.x, -r0.w
  23: mul r2.xyzw, r0.yzzx, r0.xyzz
  24: dp4 r0.x, cb2[42].xyzw, r2.xyzw
  25: dp4 r0.y, cb2[43].xyzw, r2.xyzw
  26: dp4 r0.z, cb2[44].xyzw, r2.xyzw
  27: mad o5.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  28: mul r0.x, r1.y, cb1[5].x
  29: mul r0.w, r0.x, l(0.500000)
  30: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  31: mov o6.zw, r1.zzzw
  32: add o6.xy, r0.zzzz, r0.xwxx
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 55 math, 7 temp registers, 6 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, v4.xyzw
   2: mul r0.xyz, r1.wwww, r1.xyzx
   3: mad r0.w, r0.w, v4.w, -cb0[6].x
   4: lt r0.w, r0.w, l(0.000000)
   5: discard_nz r0.w
   6: add r1.xyz, -v3.xyzx, cb1[4].xyzx
   7: mov r2.x, cb4[9].z
   8: mov r2.y, cb4[10].z
   9: mov r2.z, cb4[11].z
  10: dp3 r0.w, r1.xyzx, r2.xyzx
  11: add r1.xyz, v3.xyzx, -cb3[25].xyzx
  12: dp3 r1.x, r1.xyzx, r1.xyzx
  13: sqrt r1.x, r1.x
  14: add r1.x, -r0.w, r1.x
  15: mad r0.w, cb3[25].w, r1.x, r0.w
  16: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  17: eq r1.x, cb5[0].x, l(1.000000)
  18: if_nz r1.x
  19:   eq r1.y, cb5[0].y, l(1.000000)
  20:   mul r2.xyz, v3.yyyy, cb5[2].xyzx
  21:   mad r2.xyz, cb5[1].xyzx, v3.xxxx, r2.xyzx
  22:   mad r2.xyz, cb5[3].xyzx, v3.zzzz, r2.xyzx
  23:   add r2.xyz, r2.xyzx, cb5[4].xyzx
  24:   movc r2.xyz, r1.yyyy, r2.xyzx, v3.xyzx
  25:   add r2.xyz, r2.xyzx, -cb5[6].xyzx
  26:   mul r2.yzw, r2.xxyz, cb5[5].xxyz
  27:   mad r1.y, r2.y, l(0.250000), l(0.750000)
  28:   mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
  29:   max r2.x, r1.z, r1.y
  30:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  31: else 
  32:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r1.y, r2.xyzw, cb2[46].xyzw
  35: div r2.xy, v6.xyxx, v6.wwww
  36: sample r2.xyzw, r2.xyxx, t1.xyzw, s1
  37: add r1.y, r1.y, -r2.x
  38: mad r0.w, r0.w, r1.y, r2.x
  39: mul r2.xyz, r0.wwww, cb0[2].xyzx
  40: if_nz r1.x
  41:   eq r0.w, cb5[0].y, l(1.000000)
  42:   mul r1.xyz, v3.yyyy, cb5[2].xyzx
  43:   mad r1.xyz, cb5[1].xyzx, v3.xxxx, r1.xyzx
  44:   mad r1.xyz, cb5[3].xyzx, v3.zzzz, r1.xyzx
  45:   add r1.xyz, r1.xyzx, cb5[4].xyzx
  46:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  47:   add r1.xyz, r1.xyzx, -cb5[6].xyzx
  48:   mul r3.yzw, r1.xxyz, cb5[5].xxyz
  49:   mul r0.w, r3.y, l(0.250000)
  50:   mul r1.x, cb5[0].z, l(0.500000)
  51:   mad r1.y, -cb5[0].z, l(0.500000), l(0.250000)
  52:   max r0.w, r0.w, r1.x
  53:   min r3.x, r1.y, r0.w
  54:   sample r4.xyzw, r3.xzwx, t2.xyzw, s0
  55:   add r1.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  56:   sample r5.xyzw, r1.xyzx, t2.xyzw, s0
  57:   add r1.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  58:   sample r3.xyzw, r1.xyzx, t2.xyzw, s0
  59:   mov r6.xyz, v2.xyzx
  60:   mov r6.w, l(1.000000)
  61:   dp4 r1.x, r4.xyzw, r6.xyzw
  62:   dp4 r1.y, r5.xyzw, r6.xyzw
  63:   dp4 r1.z, r3.xyzw, r6.xyzw
  64: else 
  65:   mov r3.xyz, v2.xyzx
  66:   mov r3.w, l(1.000000)
  67:   dp4 r1.x, cb2[39].xyzw, r3.xyzw
  68:   dp4 r1.y, cb2[40].xyzw, r3.xyzw
  69:   dp4 r1.z, cb2[41].xyzw, r3.xyzw
  70: endif 
  71: add r1.xyz, r1.xyzx, v5.xyzx
  72: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  73: dp3 r0.w, v2.xyzx, cb2[0].xyzx
  74: max r0.w, r0.w, l(0.000000)
  75: mul r2.xyz, r0.xyzx, r2.xyzx
  76: mul r0.xyz, r0.xyzx, r1.xyzx
  77: mad o0.xyz, r2.xyzx, r0.wwww, r0.xyzx
  78: mov o0.w, r1.w
  79: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL PIXELSNAP_ON
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 22 math, 3 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyzw, r0.xyzw, v4.xyzw
   2: mul r0.xyz, r1.wwww, r1.xyzx
   3: mad r0.w, r0.w, v4.w, -cb0[6].x
   4: lt r0.w, r0.w, l(0.000000)
   5: discard_nz r0.w
   6: eq r0.w, cb2[0].x, l(1.000000)
   7: if_nz r0.w
   8:   eq r0.w, cb2[0].y, l(1.000000)
   9:   mul r1.xyz, v3.yyyy, cb2[2].xyzx
  10:   mad r1.xyz, cb2[1].xyzx, v3.xxxx, r1.xyzx
  11:   mad r1.xyz, cb2[3].xyzx, v3.zzzz, r1.xyzx
  12:   add r1.xyz, r1.xyzx, cb2[4].xyzx
  13:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  14:   add r1.xyz, r1.xyzx, -cb2[6].xyzx
  15:   mul r2.yzw, r1.xxyz, cb2[5].xxyz
  16:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  17:   mad r1.x, cb2[0].z, l(0.500000), l(0.750000)
  18:   max r2.x, r0.w, r1.x
  19:   sample r2.xyzw, r2.xzwx, t1.xyzw, s0
  20: else 
  21:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  22: endif 
  23: dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
  24: mul r1.xyz, r0.wwww, cb0[2].xyzx
  25: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: mul r1.xyz, r0.xyzx, r1.xyzx
  28: mul r0.xyz, r0.xyzx, v5.xyzx
  29: mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  30: mov o0.w, r1.w
  31: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL LIGHTPROBE_SH PIXELSNAP_ON
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 22 math, 3 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyzw, r0.xyzw, v4.xyzw
   2: mul r0.xyz, r1.wwww, r1.xyzx
   3: mad r0.w, r0.w, v4.w, -cb0[6].x
   4: lt r0.w, r0.w, l(0.000000)
   5: discard_nz r0.w
   6: eq r0.w, cb2[0].x, l(1.000000)
   7: if_nz r0.w
   8:   eq r0.w, cb2[0].y, l(1.000000)
   9:   mul r1.xyz, v3.yyyy, cb2[2].xyzx
  10:   mad r1.xyz, cb2[1].xyzx, v3.xxxx, r1.xyzx
  11:   mad r1.xyz, cb2[3].xyzx, v3.zzzz, r1.xyzx
  12:   add r1.xyz, r1.xyzx, cb2[4].xyzx
  13:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  14:   add r1.xyz, r1.xyzx, -cb2[6].xyzx
  15:   mul r2.yzw, r1.xxyz, cb2[5].xxyz
  16:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  17:   mad r1.x, cb2[0].z, l(0.500000), l(0.750000)
  18:   max r2.x, r0.w, r1.x
  19:   sample r2.xyzw, r2.xzwx, t1.xyzw, s0
  20: else 
  21:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  22: endif 
  23: dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
  24: mul r1.xyz, r0.wwww, cb0[2].xyzx
  25: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: mul r1.xyz, r0.xyzx, r1.xyzx
  28: mul r0.xyz, r0.xyzx, v5.xyzx
  29: mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  30: mov o0.w, r1.w
  31: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL PIXELSNAP_ON SHADOWS_SCREEN
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 55 math, 7 temp registers, 6 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, v4.xyzw
   2: mul r0.xyz, r1.wwww, r1.xyzx
   3: mad r0.w, r0.w, v4.w, -cb0[6].x
   4: lt r0.w, r0.w, l(0.000000)
   5: discard_nz r0.w
   6: add r1.xyz, -v3.xyzx, cb1[4].xyzx
   7: mov r2.x, cb4[9].z
   8: mov r2.y, cb4[10].z
   9: mov r2.z, cb4[11].z
  10: dp3 r0.w, r1.xyzx, r2.xyzx
  11: add r1.xyz, v3.xyzx, -cb3[25].xyzx
  12: dp3 r1.x, r1.xyzx, r1.xyzx
  13: sqrt r1.x, r1.x
  14: add r1.x, -r0.w, r1.x
  15: mad r0.w, cb3[25].w, r1.x, r0.w
  16: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  17: eq r1.x, cb5[0].x, l(1.000000)
  18: if_nz r1.x
  19:   eq r1.y, cb5[0].y, l(1.000000)
  20:   mul r2.xyz, v3.yyyy, cb5[2].xyzx
  21:   mad r2.xyz, cb5[1].xyzx, v3.xxxx, r2.xyzx
  22:   mad r2.xyz, cb5[3].xyzx, v3.zzzz, r2.xyzx
  23:   add r2.xyz, r2.xyzx, cb5[4].xyzx
  24:   movc r2.xyz, r1.yyyy, r2.xyzx, v3.xyzx
  25:   add r2.xyz, r2.xyzx, -cb5[6].xyzx
  26:   mul r2.yzw, r2.xxyz, cb5[5].xxyz
  27:   mad r1.y, r2.y, l(0.250000), l(0.750000)
  28:   mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
  29:   max r2.x, r1.z, r1.y
  30:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  31: else 
  32:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r1.y, r2.xyzw, cb2[46].xyzw
  35: div r2.xy, v6.xyxx, v6.wwww
  36: sample r2.xyzw, r2.xyxx, t1.xyzw, s1
  37: add r1.y, r1.y, -r2.x
  38: mad r0.w, r0.w, r1.y, r2.x
  39: mul r2.xyz, r0.wwww, cb0[2].xyzx
  40: if_nz r1.x
  41:   eq r0.w, cb5[0].y, l(1.000000)
  42:   mul r1.xyz, v3.yyyy, cb5[2].xyzx
  43:   mad r1.xyz, cb5[1].xyzx, v3.xxxx, r1.xyzx
  44:   mad r1.xyz, cb5[3].xyzx, v3.zzzz, r1.xyzx
  45:   add r1.xyz, r1.xyzx, cb5[4].xyzx
  46:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  47:   add r1.xyz, r1.xyzx, -cb5[6].xyzx
  48:   mul r3.yzw, r1.xxyz, cb5[5].xxyz
  49:   mul r0.w, r3.y, l(0.250000)
  50:   mul r1.x, cb5[0].z, l(0.500000)
  51:   mad r1.y, -cb5[0].z, l(0.500000), l(0.250000)
  52:   max r0.w, r0.w, r1.x
  53:   min r3.x, r1.y, r0.w
  54:   sample r4.xyzw, r3.xzwx, t2.xyzw, s0
  55:   add r1.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  56:   sample r5.xyzw, r1.xyzx, t2.xyzw, s0
  57:   add r1.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  58:   sample r3.xyzw, r1.xyzx, t2.xyzw, s0
  59:   mov r6.xyz, v2.xyzx
  60:   mov r6.w, l(1.000000)
  61:   dp4 r1.x, r4.xyzw, r6.xyzw
  62:   dp4 r1.y, r5.xyzw, r6.xyzw
  63:   dp4 r1.z, r3.xyzw, r6.xyzw
  64: else 
  65:   mov r3.xyz, v2.xyzx
  66:   mov r3.w, l(1.000000)
  67:   dp4 r1.x, cb2[39].xyzw, r3.xyzw
  68:   dp4 r1.y, cb2[40].xyzw, r3.xyzw
  69:   dp4 r1.z, cb2[41].xyzw, r3.xyzw
  70: endif 
  71: add r1.xyz, r1.xyzx, v5.xyzx
  72: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  73: dp3 r0.w, v2.xyzx, cb2[0].xyzx
  74: max r0.w, r0.w, l(0.000000)
  75: mul r2.xyz, r0.xyzx, r2.xyzx
  76: mul r0.xyz, r0.xyzx, r1.xyzx
  77: mad o0.xyz, r2.xyzx, r0.wwww, r0.xyzx
  78: mov o0.w, r1.w
  79: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL LIGHTPROBE_SH PIXELSNAP_ON SHADOWS_SCREEN
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 55 math, 7 temp registers, 6 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, v4.xyzw
   2: mul r0.xyz, r1.wwww, r1.xyzx
   3: mad r0.w, r0.w, v4.w, -cb0[6].x
   4: lt r0.w, r0.w, l(0.000000)
   5: discard_nz r0.w
   6: add r1.xyz, -v3.xyzx, cb1[4].xyzx
   7: mov r2.x, cb4[9].z
   8: mov r2.y, cb4[10].z
   9: mov r2.z, cb4[11].z
  10: dp3 r0.w, r1.xyzx, r2.xyzx
  11: add r1.xyz, v3.xyzx, -cb3[25].xyzx
  12: dp3 r1.x, r1.xyzx, r1.xyzx
  13: sqrt r1.x, r1.x
  14: add r1.x, -r0.w, r1.x
  15: mad r0.w, cb3[25].w, r1.x, r0.w
  16: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  17: eq r1.x, cb5[0].x, l(1.000000)
  18: if_nz r1.x
  19:   eq r1.y, cb5[0].y, l(1.000000)
  20:   mul r2.xyz, v3.yyyy, cb5[2].xyzx
  21:   mad r2.xyz, cb5[1].xyzx, v3.xxxx, r2.xyzx
  22:   mad r2.xyz, cb5[3].xyzx, v3.zzzz, r2.xyzx
  23:   add r2.xyz, r2.xyzx, cb5[4].xyzx
  24:   movc r2.xyz, r1.yyyy, r2.xyzx, v3.xyzx
  25:   add r2.xyz, r2.xyzx, -cb5[6].xyzx
  26:   mul r2.yzw, r2.xxyz, cb5[5].xxyz
  27:   mad r1.y, r2.y, l(0.250000), l(0.750000)
  28:   mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
  29:   max r2.x, r1.z, r1.y
  30:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  31: else 
  32:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r1.y, r2.xyzw, cb2[46].xyzw
  35: div r2.xy, v6.xyxx, v6.wwww
  36: sample r2.xyzw, r2.xyxx, t1.xyzw, s1
  37: add r1.y, r1.y, -r2.x
  38: mad r0.w, r0.w, r1.y, r2.x
  39: mul r2.xyz, r0.wwww, cb0[2].xyzx
  40: if_nz r1.x
  41:   eq r0.w, cb5[0].y, l(1.000000)
  42:   mul r1.xyz, v3.yyyy, cb5[2].xyzx
  43:   mad r1.xyz, cb5[1].xyzx, v3.xxxx, r1.xyzx
  44:   mad r1.xyz, cb5[3].xyzx, v3.zzzz, r1.xyzx
  45:   add r1.xyz, r1.xyzx, cb5[4].xyzx
  46:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  47:   add r1.xyz, r1.xyzx, -cb5[6].xyzx
  48:   mul r3.yzw, r1.xxyz, cb5[5].xxyz
  49:   mul r0.w, r3.y, l(0.250000)
  50:   mul r1.x, cb5[0].z, l(0.500000)
  51:   mad r1.y, -cb5[0].z, l(0.500000), l(0.250000)
  52:   max r0.w, r0.w, r1.x
  53:   min r3.x, r1.y, r0.w
  54:   sample r4.xyzw, r3.xzwx, t2.xyzw, s0
  55:   add r1.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  56:   sample r5.xyzw, r1.xyzx, t2.xyzw, s0
  57:   add r1.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  58:   sample r3.xyzw, r1.xyzx, t2.xyzw, s0
  59:   mov r6.xyz, v2.xyzx
  60:   mov r6.w, l(1.000000)
  61:   dp4 r1.x, r4.xyzw, r6.xyzw
  62:   dp4 r1.y, r5.xyzw, r6.xyzw
  63:   dp4 r1.z, r3.xyzw, r6.xyzw
  64: else 
  65:   mov r3.xyz, v2.xyzx
  66:   mov r3.w, l(1.000000)
  67:   dp4 r1.x, cb2[39].xyzw, r3.xyzw
  68:   dp4 r1.y, cb2[40].xyzw, r3.xyzw
  69:   dp4 r1.z, cb2[41].xyzw, r3.xyzw
  70: endif 
  71: add r1.xyz, r1.xyzx, v5.xyzx
  72: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  73: dp3 r0.w, v2.xyzx, cb2[0].xyzx
  74: max r0.w, r0.w, l(0.000000)
  75: mul r2.xyz, r0.xyzx, r2.xyzx
  76: mul r0.xyz, r0.xyzx, r1.xyzx
  77: mad o0.xyz, r2.xyzx, r0.wwww, r0.xyzx
  78: mov o0.w, r1.w
  79: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 24 math, 3 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   2: add r1.x, -r0.w, r1.x
   3: mad r0.w, cb3[1].z, r1.x, r0.w
   4: mul r1.xyzw, r0.xyzw, v4.xyzw
   5: mul r0.xyz, r1.wwww, r1.xyzx
   6: mad r0.w, r0.w, v4.w, -cb0[6].x
   7: lt r0.w, r0.w, l(0.000000)
   8: discard_nz r0.w
   9: eq r0.w, cb2[0].x, l(1.000000)
  10: if_nz r0.w
  11:   eq r0.w, cb2[0].y, l(1.000000)
  12:   mul r1.xyz, v3.yyyy, cb2[2].xyzx
  13:   mad r1.xyz, cb2[1].xyzx, v3.xxxx, r1.xyzx
  14:   mad r1.xyz, cb2[3].xyzx, v3.zzzz, r1.xyzx
  15:   add r1.xyz, r1.xyzx, cb2[4].xyzx
  16:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  17:   add r1.xyz, r1.xyzx, -cb2[6].xyzx
  18:   mul r2.yzw, r1.xxyz, cb2[5].xxyz
  19:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  20:   mad r1.x, cb2[0].z, l(0.500000), l(0.750000)
  21:   max r2.x, r0.w, r1.x
  22:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  23: else 
  24:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  25: endif 
  26: dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
  27: mul r1.xyz, r0.wwww, cb0[2].xyzx
  28: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  29: max r0.w, r0.w, l(0.000000)
  30: mul r1.xyz, r0.xyzx, r1.xyzx
  31: mul r0.xyz, r0.xyzx, v5.xyzx
  32: mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  33: mov o0.w, r1.w
  34: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 24 math, 3 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   2: add r1.x, -r0.w, r1.x
   3: mad r0.w, cb3[1].z, r1.x, r0.w
   4: mul r1.xyzw, r0.xyzw, v4.xyzw
   5: mul r0.xyz, r1.wwww, r1.xyzx
   6: mad r0.w, r0.w, v4.w, -cb0[6].x
   7: lt r0.w, r0.w, l(0.000000)
   8: discard_nz r0.w
   9: eq r0.w, cb2[0].x, l(1.000000)
  10: if_nz r0.w
  11:   eq r0.w, cb2[0].y, l(1.000000)
  12:   mul r1.xyz, v3.yyyy, cb2[2].xyzx
  13:   mad r1.xyz, cb2[1].xyzx, v3.xxxx, r1.xyzx
  14:   mad r1.xyz, cb2[3].xyzx, v3.zzzz, r1.xyzx
  15:   add r1.xyz, r1.xyzx, cb2[4].xyzx
  16:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  17:   add r1.xyz, r1.xyzx, -cb2[6].xyzx
  18:   mul r2.yzw, r1.xxyz, cb2[5].xxyz
  19:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  20:   mad r1.x, cb2[0].z, l(0.500000), l(0.750000)
  21:   max r2.x, r0.w, r1.x
  22:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  23: else 
  24:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  25: endif 
  26: dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
  27: mul r1.xyz, r0.wwww, cb0[2].xyzx
  28: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  29: max r0.w, r0.w, l(0.000000)
  30: mul r1.xyz, r0.xyzx, r1.xyzx
  31: mul r0.xyz, r0.xyzx, v5.xyzx
  32: mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  33: mov o0.w, r1.w
  34: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA SHADOWS_SCREEN
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 57 math, 7 temp registers, 7 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 6 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_constantbuffer CB6[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t1.xyzw, s3
   2: add r1.x, -r0.w, r1.x
   3: mad r0.w, cb6[1].z, r1.x, r0.w
   4: mul r1.xyzw, r0.xyzw, v4.xyzw
   5: mul r0.xyz, r1.wwww, r1.xyzx
   6: mad r0.w, r0.w, v4.w, -cb0[6].x
   7: lt r0.w, r0.w, l(0.000000)
   8: discard_nz r0.w
   9: add r1.xyz, -v3.xyzx, cb1[4].xyzx
  10: mov r2.x, cb4[9].z
  11: mov r2.y, cb4[10].z
  12: mov r2.z, cb4[11].z
  13: dp3 r0.w, r1.xyzx, r2.xyzx
  14: add r1.xyz, v3.xyzx, -cb3[25].xyzx
  15: dp3 r1.x, r1.xyzx, r1.xyzx
  16: sqrt r1.x, r1.x
  17: add r1.x, -r0.w, r1.x
  18: mad r0.w, cb3[25].w, r1.x, r0.w
  19: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  20: eq r1.x, cb5[0].x, l(1.000000)
  21: if_nz r1.x
  22:   eq r1.y, cb5[0].y, l(1.000000)
  23:   mul r2.xyz, v3.yyyy, cb5[2].xyzx
  24:   mad r2.xyz, cb5[1].xyzx, v3.xxxx, r2.xyzx
  25:   mad r2.xyz, cb5[3].xyzx, v3.zzzz, r2.xyzx
  26:   add r2.xyz, r2.xyzx, cb5[4].xyzx
  27:   movc r2.xyz, r1.yyyy, r2.xyzx, v3.xyzx
  28:   add r2.xyz, r2.xyzx, -cb5[6].xyzx
  29:   mul r2.yzw, r2.xxyz, cb5[5].xxyz
  30:   mad r1.y, r2.y, l(0.250000), l(0.750000)
  31:   mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
  32:   max r2.x, r1.z, r1.y
  33:   sample r2.xyzw, r2.xzwx, t3.xyzw, s0
  34: else 
  35:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  36: endif 
  37: dp4_sat r1.y, r2.xyzw, cb2[46].xyzw
  38: div r2.xy, v6.xyxx, v6.wwww
  39: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  40: add r1.y, r1.y, -r2.x
  41: mad r0.w, r0.w, r1.y, r2.x
  42: mul r2.xyz, r0.wwww, cb0[2].xyzx
  43: if_nz r1.x
  44:   eq r0.w, cb5[0].y, l(1.000000)
  45:   mul r1.xyz, v3.yyyy, cb5[2].xyzx
  46:   mad r1.xyz, cb5[1].xyzx, v3.xxxx, r1.xyzx
  47:   mad r1.xyz, cb5[3].xyzx, v3.zzzz, r1.xyzx
  48:   add r1.xyz, r1.xyzx, cb5[4].xyzx
  49:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  50:   add r1.xyz, r1.xyzx, -cb5[6].xyzx
  51:   mul r3.yzw, r1.xxyz, cb5[5].xxyz
  52:   mul r0.w, r3.y, l(0.250000)
  53:   mul r1.x, cb5[0].z, l(0.500000)
  54:   mad r1.y, -cb5[0].z, l(0.500000), l(0.250000)
  55:   max r0.w, r0.w, r1.x
  56:   min r3.x, r1.y, r0.w
  57:   sample r4.xyzw, r3.xzwx, t3.xyzw, s0
  58:   add r1.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  59:   sample r5.xyzw, r1.xyzx, t3.xyzw, s0
  60:   add r1.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  61:   sample r3.xyzw, r1.xyzx, t3.xyzw, s0
  62:   mov r6.xyz, v2.xyzx
  63:   mov r6.w, l(1.000000)
  64:   dp4 r1.x, r4.xyzw, r6.xyzw
  65:   dp4 r1.y, r5.xyzw, r6.xyzw
  66:   dp4 r1.z, r3.xyzw, r6.xyzw
  67: else 
  68:   mov r3.xyz, v2.xyzx
  69:   mov r3.w, l(1.000000)
  70:   dp4 r1.x, cb2[39].xyzw, r3.xyzw
  71:   dp4 r1.y, cb2[40].xyzw, r3.xyzw
  72:   dp4 r1.z, cb2[41].xyzw, r3.xyzw
  73: endif 
  74: add r1.xyz, r1.xyzx, v5.xyzx
  75: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  76: dp3 r0.w, v2.xyzx, cb2[0].xyzx
  77: max r0.w, r0.w, l(0.000000)
  78: mul r2.xyz, r0.xyzx, r2.xyzx
  79: mul r0.xyz, r0.xyzx, r1.xyzx
  80: mad o0.xyz, r2.xyzx, r0.wwww, r0.xyzx
  81: mov o0.w, r1.w
  82: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH SHADOWS_SCREEN
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 57 math, 7 temp registers, 7 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 6 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_constantbuffer CB6[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t1.xyzw, s3
   2: add r1.x, -r0.w, r1.x
   3: mad r0.w, cb6[1].z, r1.x, r0.w
   4: mul r1.xyzw, r0.xyzw, v4.xyzw
   5: mul r0.xyz, r1.wwww, r1.xyzx
   6: mad r0.w, r0.w, v4.w, -cb0[6].x
   7: lt r0.w, r0.w, l(0.000000)
   8: discard_nz r0.w
   9: add r1.xyz, -v3.xyzx, cb1[4].xyzx
  10: mov r2.x, cb4[9].z
  11: mov r2.y, cb4[10].z
  12: mov r2.z, cb4[11].z
  13: dp3 r0.w, r1.xyzx, r2.xyzx
  14: add r1.xyz, v3.xyzx, -cb3[25].xyzx
  15: dp3 r1.x, r1.xyzx, r1.xyzx
  16: sqrt r1.x, r1.x
  17: add r1.x, -r0.w, r1.x
  18: mad r0.w, cb3[25].w, r1.x, r0.w
  19: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  20: eq r1.x, cb5[0].x, l(1.000000)
  21: if_nz r1.x
  22:   eq r1.y, cb5[0].y, l(1.000000)
  23:   mul r2.xyz, v3.yyyy, cb5[2].xyzx
  24:   mad r2.xyz, cb5[1].xyzx, v3.xxxx, r2.xyzx
  25:   mad r2.xyz, cb5[3].xyzx, v3.zzzz, r2.xyzx
  26:   add r2.xyz, r2.xyzx, cb5[4].xyzx
  27:   movc r2.xyz, r1.yyyy, r2.xyzx, v3.xyzx
  28:   add r2.xyz, r2.xyzx, -cb5[6].xyzx
  29:   mul r2.yzw, r2.xxyz, cb5[5].xxyz
  30:   mad r1.y, r2.y, l(0.250000), l(0.750000)
  31:   mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
  32:   max r2.x, r1.z, r1.y
  33:   sample r2.xyzw, r2.xzwx, t3.xyzw, s0
  34: else 
  35:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  36: endif 
  37: dp4_sat r1.y, r2.xyzw, cb2[46].xyzw
  38: div r2.xy, v6.xyxx, v6.wwww
  39: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  40: add r1.y, r1.y, -r2.x
  41: mad r0.w, r0.w, r1.y, r2.x
  42: mul r2.xyz, r0.wwww, cb0[2].xyzx
  43: if_nz r1.x
  44:   eq r0.w, cb5[0].y, l(1.000000)
  45:   mul r1.xyz, v3.yyyy, cb5[2].xyzx
  46:   mad r1.xyz, cb5[1].xyzx, v3.xxxx, r1.xyzx
  47:   mad r1.xyz, cb5[3].xyzx, v3.zzzz, r1.xyzx
  48:   add r1.xyz, r1.xyzx, cb5[4].xyzx
  49:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  50:   add r1.xyz, r1.xyzx, -cb5[6].xyzx
  51:   mul r3.yzw, r1.xxyz, cb5[5].xxyz
  52:   mul r0.w, r3.y, l(0.250000)
  53:   mul r1.x, cb5[0].z, l(0.500000)
  54:   mad r1.y, -cb5[0].z, l(0.500000), l(0.250000)
  55:   max r0.w, r0.w, r1.x
  56:   min r3.x, r1.y, r0.w
  57:   sample r4.xyzw, r3.xzwx, t3.xyzw, s0
  58:   add r1.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  59:   sample r5.xyzw, r1.xyzx, t3.xyzw, s0
  60:   add r1.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  61:   sample r3.xyzw, r1.xyzx, t3.xyzw, s0
  62:   mov r6.xyz, v2.xyzx
  63:   mov r6.w, l(1.000000)
  64:   dp4 r1.x, r4.xyzw, r6.xyzw
  65:   dp4 r1.y, r5.xyzw, r6.xyzw
  66:   dp4 r1.z, r3.xyzw, r6.xyzw
  67: else 
  68:   mov r3.xyz, v2.xyzx
  69:   mov r3.w, l(1.000000)
  70:   dp4 r1.x, cb2[39].xyzw, r3.xyzw
  71:   dp4 r1.y, cb2[40].xyzw, r3.xyzw
  72:   dp4 r1.z, cb2[41].xyzw, r3.xyzw
  73: endif 
  74: add r1.xyz, r1.xyzx, v5.xyzx
  75: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  76: dp3 r0.w, v2.xyzx, cb2[0].xyzx
  77: max r0.w, r0.w, l(0.000000)
  78: mul r2.xyz, r0.xyzx, r2.xyzx
  79: mul r0.xyz, r0.xyzx, r1.xyzx
  80: mad o0.xyz, r2.xyzx, r0.wwww, r0.xyzx
  81: mov o0.w, r1.w
  82: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA PIXELSNAP_ON
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 24 math, 3 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   2: add r1.x, -r0.w, r1.x
   3: mad r0.w, cb3[1].z, r1.x, r0.w
   4: mul r1.xyzw, r0.xyzw, v4.xyzw
   5: mul r0.xyz, r1.wwww, r1.xyzx
   6: mad r0.w, r0.w, v4.w, -cb0[6].x
   7: lt r0.w, r0.w, l(0.000000)
   8: discard_nz r0.w
   9: eq r0.w, cb2[0].x, l(1.000000)
  10: if_nz r0.w
  11:   eq r0.w, cb2[0].y, l(1.000000)
  12:   mul r1.xyz, v3.yyyy, cb2[2].xyzx
  13:   mad r1.xyz, cb2[1].xyzx, v3.xxxx, r1.xyzx
  14:   mad r1.xyz, cb2[3].xyzx, v3.zzzz, r1.xyzx
  15:   add r1.xyz, r1.xyzx, cb2[4].xyzx
  16:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  17:   add r1.xyz, r1.xyzx, -cb2[6].xyzx
  18:   mul r2.yzw, r1.xxyz, cb2[5].xxyz
  19:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  20:   mad r1.x, cb2[0].z, l(0.500000), l(0.750000)
  21:   max r2.x, r0.w, r1.x
  22:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  23: else 
  24:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  25: endif 
  26: dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
  27: mul r1.xyz, r0.wwww, cb0[2].xyzx
  28: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  29: max r0.w, r0.w, l(0.000000)
  30: mul r1.xyz, r0.xyzx, r1.xyzx
  31: mul r0.xyz, r0.xyzx, v5.xyzx
  32: mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  33: mov o0.w, r1.w
  34: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH PIXELSNAP_ON
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 24 math, 3 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   2: add r1.x, -r0.w, r1.x
   3: mad r0.w, cb3[1].z, r1.x, r0.w
   4: mul r1.xyzw, r0.xyzw, v4.xyzw
   5: mul r0.xyz, r1.wwww, r1.xyzx
   6: mad r0.w, r0.w, v4.w, -cb0[6].x
   7: lt r0.w, r0.w, l(0.000000)
   8: discard_nz r0.w
   9: eq r0.w, cb2[0].x, l(1.000000)
  10: if_nz r0.w
  11:   eq r0.w, cb2[0].y, l(1.000000)
  12:   mul r1.xyz, v3.yyyy, cb2[2].xyzx
  13:   mad r1.xyz, cb2[1].xyzx, v3.xxxx, r1.xyzx
  14:   mad r1.xyz, cb2[3].xyzx, v3.zzzz, r1.xyzx
  15:   add r1.xyz, r1.xyzx, cb2[4].xyzx
  16:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  17:   add r1.xyz, r1.xyzx, -cb2[6].xyzx
  18:   mul r2.yzw, r1.xxyz, cb2[5].xxyz
  19:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  20:   mad r1.x, cb2[0].z, l(0.500000), l(0.750000)
  21:   max r2.x, r0.w, r1.x
  22:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  23: else 
  24:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  25: endif 
  26: dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
  27: mul r1.xyz, r0.wwww, cb0[2].xyzx
  28: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  29: max r0.w, r0.w, l(0.000000)
  30: mul r1.xyz, r0.xyzx, r1.xyzx
  31: mul r0.xyz, r0.xyzx, v5.xyzx
  32: mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  33: mov o0.w, r1.w
  34: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA PIXELSNAP_ON SHADOWS_SCREEN
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 57 math, 7 temp registers, 7 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 6 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_constantbuffer CB6[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t1.xyzw, s3
   2: add r1.x, -r0.w, r1.x
   3: mad r0.w, cb6[1].z, r1.x, r0.w
   4: mul r1.xyzw, r0.xyzw, v4.xyzw
   5: mul r0.xyz, r1.wwww, r1.xyzx
   6: mad r0.w, r0.w, v4.w, -cb0[6].x
   7: lt r0.w, r0.w, l(0.000000)
   8: discard_nz r0.w
   9: add r1.xyz, -v3.xyzx, cb1[4].xyzx
  10: mov r2.x, cb4[9].z
  11: mov r2.y, cb4[10].z
  12: mov r2.z, cb4[11].z
  13: dp3 r0.w, r1.xyzx, r2.xyzx
  14: add r1.xyz, v3.xyzx, -cb3[25].xyzx
  15: dp3 r1.x, r1.xyzx, r1.xyzx
  16: sqrt r1.x, r1.x
  17: add r1.x, -r0.w, r1.x
  18: mad r0.w, cb3[25].w, r1.x, r0.w
  19: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  20: eq r1.x, cb5[0].x, l(1.000000)
  21: if_nz r1.x
  22:   eq r1.y, cb5[0].y, l(1.000000)
  23:   mul r2.xyz, v3.yyyy, cb5[2].xyzx
  24:   mad r2.xyz, cb5[1].xyzx, v3.xxxx, r2.xyzx
  25:   mad r2.xyz, cb5[3].xyzx, v3.zzzz, r2.xyzx
  26:   add r2.xyz, r2.xyzx, cb5[4].xyzx
  27:   movc r2.xyz, r1.yyyy, r2.xyzx, v3.xyzx
  28:   add r2.xyz, r2.xyzx, -cb5[6].xyzx
  29:   mul r2.yzw, r2.xxyz, cb5[5].xxyz
  30:   mad r1.y, r2.y, l(0.250000), l(0.750000)
  31:   mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
  32:   max r2.x, r1.z, r1.y
  33:   sample r2.xyzw, r2.xzwx, t3.xyzw, s0
  34: else 
  35:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  36: endif 
  37: dp4_sat r1.y, r2.xyzw, cb2[46].xyzw
  38: div r2.xy, v6.xyxx, v6.wwww
  39: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  40: add r1.y, r1.y, -r2.x
  41: mad r0.w, r0.w, r1.y, r2.x
  42: mul r2.xyz, r0.wwww, cb0[2].xyzx
  43: if_nz r1.x
  44:   eq r0.w, cb5[0].y, l(1.000000)
  45:   mul r1.xyz, v3.yyyy, cb5[2].xyzx
  46:   mad r1.xyz, cb5[1].xyzx, v3.xxxx, r1.xyzx
  47:   mad r1.xyz, cb5[3].xyzx, v3.zzzz, r1.xyzx
  48:   add r1.xyz, r1.xyzx, cb5[4].xyzx
  49:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  50:   add r1.xyz, r1.xyzx, -cb5[6].xyzx
  51:   mul r3.yzw, r1.xxyz, cb5[5].xxyz
  52:   mul r0.w, r3.y, l(0.250000)
  53:   mul r1.x, cb5[0].z, l(0.500000)
  54:   mad r1.y, -cb5[0].z, l(0.500000), l(0.250000)
  55:   max r0.w, r0.w, r1.x
  56:   min r3.x, r1.y, r0.w
  57:   sample r4.xyzw, r3.xzwx, t3.xyzw, s0
  58:   add r1.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  59:   sample r5.xyzw, r1.xyzx, t3.xyzw, s0
  60:   add r1.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  61:   sample r3.xyzw, r1.xyzx, t3.xyzw, s0
  62:   mov r6.xyz, v2.xyzx
  63:   mov r6.w, l(1.000000)
  64:   dp4 r1.x, r4.xyzw, r6.xyzw
  65:   dp4 r1.y, r5.xyzw, r6.xyzw
  66:   dp4 r1.z, r3.xyzw, r6.xyzw
  67: else 
  68:   mov r3.xyz, v2.xyzx
  69:   mov r3.w, l(1.000000)
  70:   dp4 r1.x, cb2[39].xyzw, r3.xyzw
  71:   dp4 r1.y, cb2[40].xyzw, r3.xyzw
  72:   dp4 r1.z, cb2[41].xyzw, r3.xyzw
  73: endif 
  74: add r1.xyz, r1.xyzx, v5.xyzx
  75: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  76: dp3 r0.w, v2.xyzx, cb2[0].xyzx
  77: max r0.w, r0.w, l(0.000000)
  78: mul r2.xyz, r0.xyzx, r2.xyzx
  79: mul r0.xyz, r0.xyzx, r1.xyzx
  80: mad o0.xyz, r2.xyzx, r0.wwww, r0.xyzx
  81: mov o0.w, r1.w
  82: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH PIXELSNAP_ON SHADOWS_SCREEN
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 57 math, 7 temp registers, 7 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 6 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_constantbuffer CB6[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t1.xyzw, s3
   2: add r1.x, -r0.w, r1.x
   3: mad r0.w, cb6[1].z, r1.x, r0.w
   4: mul r1.xyzw, r0.xyzw, v4.xyzw
   5: mul r0.xyz, r1.wwww, r1.xyzx
   6: mad r0.w, r0.w, v4.w, -cb0[6].x
   7: lt r0.w, r0.w, l(0.000000)
   8: discard_nz r0.w
   9: add r1.xyz, -v3.xyzx, cb1[4].xyzx
  10: mov r2.x, cb4[9].z
  11: mov r2.y, cb4[10].z
  12: mov r2.z, cb4[11].z
  13: dp3 r0.w, r1.xyzx, r2.xyzx
  14: add r1.xyz, v3.xyzx, -cb3[25].xyzx
  15: dp3 r1.x, r1.xyzx, r1.xyzx
  16: sqrt r1.x, r1.x
  17: add r1.x, -r0.w, r1.x
  18: mad r0.w, cb3[25].w, r1.x, r0.w
  19: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  20: eq r1.x, cb5[0].x, l(1.000000)
  21: if_nz r1.x
  22:   eq r1.y, cb5[0].y, l(1.000000)
  23:   mul r2.xyz, v3.yyyy, cb5[2].xyzx
  24:   mad r2.xyz, cb5[1].xyzx, v3.xxxx, r2.xyzx
  25:   mad r2.xyz, cb5[3].xyzx, v3.zzzz, r2.xyzx
  26:   add r2.xyz, r2.xyzx, cb5[4].xyzx
  27:   movc r2.xyz, r1.yyyy, r2.xyzx, v3.xyzx
  28:   add r2.xyz, r2.xyzx, -cb5[6].xyzx
  29:   mul r2.yzw, r2.xxyz, cb5[5].xxyz
  30:   mad r1.y, r2.y, l(0.250000), l(0.750000)
  31:   mad r1.z, cb5[0].z, l(0.500000), l(0.750000)
  32:   max r2.x, r1.z, r1.y
  33:   sample r2.xyzw, r2.xzwx, t3.xyzw, s0
  34: else 
  35:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  36: endif 
  37: dp4_sat r1.y, r2.xyzw, cb2[46].xyzw
  38: div r2.xy, v6.xyxx, v6.wwww
  39: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  40: add r1.y, r1.y, -r2.x
  41: mad r0.w, r0.w, r1.y, r2.x
  42: mul r2.xyz, r0.wwww, cb0[2].xyzx
  43: if_nz r1.x
  44:   eq r0.w, cb5[0].y, l(1.000000)
  45:   mul r1.xyz, v3.yyyy, cb5[2].xyzx
  46:   mad r1.xyz, cb5[1].xyzx, v3.xxxx, r1.xyzx
  47:   mad r1.xyz, cb5[3].xyzx, v3.zzzz, r1.xyzx
  48:   add r1.xyz, r1.xyzx, cb5[4].xyzx
  49:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  50:   add r1.xyz, r1.xyzx, -cb5[6].xyzx
  51:   mul r3.yzw, r1.xxyz, cb5[5].xxyz
  52:   mul r0.w, r3.y, l(0.250000)
  53:   mul r1.x, cb5[0].z, l(0.500000)
  54:   mad r1.y, -cb5[0].z, l(0.500000), l(0.250000)
  55:   max r0.w, r0.w, r1.x
  56:   min r3.x, r1.y, r0.w
  57:   sample r4.xyzw, r3.xzwx, t3.xyzw, s0
  58:   add r1.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  59:   sample r5.xyzw, r1.xyzx, t3.xyzw, s0
  60:   add r1.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  61:   sample r3.xyzw, r1.xyzx, t3.xyzw, s0
  62:   mov r6.xyz, v2.xyzx
  63:   mov r6.w, l(1.000000)
  64:   dp4 r1.x, r4.xyzw, r6.xyzw
  65:   dp4 r1.y, r5.xyzw, r6.xyzw
  66:   dp4 r1.z, r3.xyzw, r6.xyzw
  67: else 
  68:   mov r3.xyz, v2.xyzx
  69:   mov r3.w, l(1.000000)
  70:   dp4 r1.x, cb2[39].xyzw, r3.xyzw
  71:   dp4 r1.y, cb2[40].xyzw, r3.xyzw
  72:   dp4 r1.z, cb2[41].xyzw, r3.xyzw
  73: endif 
  74: add r1.xyz, r1.xyzx, v5.xyzx
  75: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  76: dp3 r0.w, v2.xyzx, cb2[0].xyzx
  77: max r0.w, r0.w, l(0.000000)
  78: mul r2.xyz, r0.xyzx, r2.xyzx
  79: mul r0.xyz, r0.xyzx, r1.xyzx
  80: mad o0.xyz, r2.xyzx, r0.wwww, r0.xyzx
  81: mov o0.w, r1.w
  82: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   2: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   6: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  11: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  12: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mov o3.xyz, r0.xyzx
  18: mul r2.xyzw, v7.xyzw, cb0[4].xyzw
  19: mul o4.xyzw, r2.xyzw, cb4[0].xyzw
  20: mul r0.w, r1.y, r1.y
  21: mad r0.w, r1.x, r1.x, -r0.w
  22: mul r2.xyzw, r1.yzzx, r1.xyzz
  23: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  24: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  25: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  26: mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
  27: mov r1.w, l(1.000000)
  28: dp4 r3.x, cb1[39].xyzw, r1.xyzw
  29: dp4 r3.y, cb1[40].xyzw, r1.xyzw
  30: dp4 r3.z, cb1[41].xyzw, r1.xyzw
  31: add r2.xyz, r2.xyzx, r3.xyzx
  32: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  33: add r3.xyzw, -r0.yyyy, cb1[4].xyzw
  34: mul r4.xyzw, r1.yyyy, r3.xyzw
  35: mul r3.xyzw, r3.xyzw, r3.xyzw
  36: add r5.xyzw, -r0.xxxx, cb1[3].xyzw
  37: add r0.xyzw, -r0.zzzz, cb1[5].xyzw
  38: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  39: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  40: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  41: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  42: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  43: rsq r3.xyzw, r0.xyzw
  44: mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  45: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  46: mul r1.xyzw, r1.xyzw, r3.xyzw
  47: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: mul r0.xyzw, r0.xyzw, r1.xyzw
  49: mul r1.xyz, r0.yyyy, cb1[8].xyzx
  50: mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
  51: mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
  52: mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
  53: add o5.xyz, r2.xyzx, r0.xyzx
  54: mov o6.xyzw, l(0,0,0,0)
  55: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   2: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   6: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  11: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  12: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mov o3.xyz, r0.xyzx
  18: mul r2.xyzw, v7.xyzw, cb0[4].xyzw
  19: mul o4.xyzw, r2.xyzw, cb4[0].xyzw
  20: mul r0.w, r1.y, r1.y
  21: mad r0.w, r1.x, r1.x, -r0.w
  22: mul r2.xyzw, r1.yzzx, r1.xyzz
  23: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  24: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  25: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  26: mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
  27: mov r1.w, l(1.000000)
  28: dp4 r3.x, cb1[39].xyzw, r1.xyzw
  29: dp4 r3.y, cb1[40].xyzw, r1.xyzw
  30: dp4 r3.z, cb1[41].xyzw, r1.xyzw
  31: add r2.xyz, r2.xyzx, r3.xyzx
  32: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  33: add r3.xyzw, -r0.yyyy, cb1[4].xyzw
  34: mul r4.xyzw, r1.yyyy, r3.xyzw
  35: mul r3.xyzw, r3.xyzw, r3.xyzw
  36: add r5.xyzw, -r0.xxxx, cb1[3].xyzw
  37: add r0.xyzw, -r0.zzzz, cb1[5].xyzw
  38: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  39: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  40: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  41: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  42: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  43: rsq r3.xyzw, r0.xyzw
  44: mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  45: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  46: mul r1.xyzw, r1.xyzw, r3.xyzw
  47: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: mul r0.xyzw, r0.xyzw, r1.xyzw
  49: mul r1.xyz, r0.yyyy, cb1[8].xyzx
  50: mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
  51: mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
  52: mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
  53: add o5.xyz, r2.xyzx, r0.xyzx
  54: mov o6.xyzw, l(0,0,0,0)
  55: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 50 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   2: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   6: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r2.x, v2.xyzx, cb3[4].xyzx
  12: dp3 r2.y, v2.xyzx, cb3[5].xyzx
  13: dp3 r2.z, v2.xyzx, cb3[6].xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mul r2.xyz, r0.wwww, r2.xyzx
  17: mov o2.xyz, r2.xyzx
  18: mov o3.xyz, r0.xyzx
  19: mul r3.xyzw, v7.xyzw, cb0[4].xyzw
  20: mul o4.xyzw, r3.xyzw, cb5[0].xyzw
  21: add r3.xyzw, -r0.xxxx, cb2[3].xyzw
  22: add r4.xyzw, -r0.yyyy, cb2[4].xyzw
  23: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  24: mul r5.xyzw, r2.yyyy, r4.xyzw
  25: mul r4.xyzw, r4.xyzw, r4.xyzw
  26: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  27: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  28: mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
  29: mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
  30: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  31: rsq r4.xyzw, r0.xyzw
  32: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  33: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  34: mul r3.xyzw, r3.xyzw, r4.xyzw
  35: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: mul r0.xyzw, r0.xyzw, r3.xyzw
  37: mul r3.xyz, r0.yyyy, cb2[8].xyzx
  38: mad r3.xyz, cb2[7].xyzx, r0.xxxx, r3.xyzx
  39: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r3.xyzx
  40: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  41: mul r0.w, r2.y, r2.y
  42: mad r0.w, r2.x, r2.x, -r0.w
  43: mul r2.xyzw, r2.yzzx, r2.xyzz
  44: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  45: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  46: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  47: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  48: add o5.xyz, r0.xyzx, r2.xyzx
  49: mul r0.x, r1.y, cb1[5].x
  50: mul r0.w, r0.x, l(0.500000)
  51: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  52: mov o6.zw, r1.zzzw
  53: add o6.xy, r0.zzzz, r0.xwxx
  54: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 50 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   2: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   6: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r2.x, v2.xyzx, cb3[4].xyzx
  12: dp3 r2.y, v2.xyzx, cb3[5].xyzx
  13: dp3 r2.z, v2.xyzx, cb3[6].xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mul r2.xyz, r0.wwww, r2.xyzx
  17: mov o2.xyz, r2.xyzx
  18: mov o3.xyz, r0.xyzx
  19: mul r3.xyzw, v7.xyzw, cb0[4].xyzw
  20: mul o4.xyzw, r3.xyzw, cb5[0].xyzw
  21: add r3.xyzw, -r0.xxxx, cb2[3].xyzw
  22: add r4.xyzw, -r0.yyyy, cb2[4].xyzw
  23: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  24: mul r5.xyzw, r2.yyyy, r4.xyzw
  25: mul r4.xyzw, r4.xyzw, r4.xyzw
  26: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  27: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  28: mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
  29: mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
  30: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  31: rsq r4.xyzw, r0.xyzw
  32: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  33: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  34: mul r3.xyzw, r3.xyzw, r4.xyzw
  35: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: mul r0.xyzw, r0.xyzw, r3.xyzw
  37: mul r3.xyz, r0.yyyy, cb2[8].xyzx
  38: mad r3.xyz, cb2[7].xyzx, r0.xxxx, r3.xyzx
  39: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r3.xyzx
  40: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  41: mul r0.w, r2.y, r2.y
  42: mad r0.w, r2.x, r2.x, -r0.w
  43: mul r2.xyzw, r2.yzzx, r2.xyzz
  44: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  45: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  46: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  47: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  48: add o5.xyz, r0.xyzx, r2.xyzx
  49: mul r0.x, r1.y, cb1[5].x
  50: mul r0.w, r0.x, l(0.500000)
  51: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  52: mov o6.zw, r1.zzzw
  53: add o6.xy, r0.zzzz, r0.xwxx
  54: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul r0.xyz, r0.wwww, r0.xyzx
  21: mov o2.xyz, r0.xyzx
  22: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  23: mul o4.xyzw, r1.xyzw, cb5[0].xyzw
  24: mul r1.x, r0.y, r0.y
  25: mad r1.x, r0.x, r0.x, -r1.x
  26: mul r2.xyzw, r0.yzzx, r0.xyzz
  27: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  28: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  29: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  30: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  31: mov r0.w, l(1.000000)
  32: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  33: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  34: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  35: add r0.xyz, r1.xyzx, r2.xyzx
  36: max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  37: mov o6.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL LIGHTPROBE_SH PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul r0.xyz, r0.wwww, r0.xyzx
  21: mov o2.xyz, r0.xyzx
  22: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  23: mul o4.xyzw, r1.xyzw, cb5[0].xyzw
  24: mul r1.x, r0.y, r0.y
  25: mad r1.x, r0.x, r0.x, -r1.x
  26: mul r2.xyzw, r0.yzzx, r0.xyzz
  27: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  28: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  29: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  30: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  31: mov r0.w, l(1.000000)
  32: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  33: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  34: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  35: add r0.xyz, r1.xyzx, r2.xyzx
  36: max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  37: mov o6.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL PIXELSNAP_ON SHADOWS_SCREEN
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mov o0.xyzw, r1.xyzw
  15: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  16: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  17: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  18: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul r0.xyz, r0.wwww, r0.xyzx
  22: mov o2.xyz, r0.xyzx
  23: mul r2.xyzw, v7.xyzw, cb0[4].xyzw
  24: mul o4.xyzw, r2.xyzw, cb5[0].xyzw
  25: mul r0.w, r0.y, r0.y
  26: mad r0.w, r0.x, r0.x, -r0.w
  27: mul r2.xyzw, r0.yzzx, r0.xyzz
  28: dp4 r0.x, cb2[42].xyzw, r2.xyzw
  29: dp4 r0.y, cb2[43].xyzw, r2.xyzw
  30: dp4 r0.z, cb2[44].xyzw, r2.xyzw
  31: mad o5.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  32: mul r0.x, r1.y, cb1[5].x
  33: mul r0.w, r0.x, l(0.500000)
  34: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  35: mov o6.zw, r1.zzzw
  36: add o6.xy, r0.zzzz, r0.xwxx
  37: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL LIGHTPROBE_SH PIXELSNAP_ON SHADOWS_SCREEN
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mov o0.xyzw, r1.xyzw
  15: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  16: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  17: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  18: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul r0.xyz, r0.wwww, r0.xyzx
  22: mov o2.xyz, r0.xyzx
  23: mul r2.xyzw, v7.xyzw, cb0[4].xyzw
  24: mul o4.xyzw, r2.xyzw, cb5[0].xyzw
  25: mul r0.w, r0.y, r0.y
  26: mad r0.w, r0.x, r0.x, -r0.w
  27: mul r2.xyzw, r0.yzzx, r0.xyzz
  28: dp4 r0.x, cb2[42].xyzw, r2.xyzw
  29: dp4 r0.y, cb2[43].xyzw, r2.xyzw
  30: dp4 r0.z, cb2[44].xyzw, r2.xyzw
  31: mad o5.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  32: mul r0.x, r1.y, cb1[5].x
  33: mul r0.w, r0.x, l(0.500000)
  34: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  35: mov o6.zw, r1.zzzw
  36: add o6.xy, r0.zzzz, r0.xwxx
  37: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL PIXELSNAP_ON VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  14: dp3 r1.x, v2.xyzx, cb3[4].xyzx
  15: dp3 r1.y, v2.xyzx, cb3[5].xyzx
  16: dp3 r1.z, v2.xyzx, cb3[6].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul r1.xyz, r0.wwww, r1.xyzx
  20: mov o2.xyz, r1.xyzx
  21: mov o3.xyz, r0.xyzx
  22: mul r2.xyzw, v7.xyzw, cb0[4].xyzw
  23: mul o4.xyzw, r2.xyzw, cb5[0].xyzw
  24: mul r0.w, r1.y, r1.y
  25: mad r0.w, r1.x, r1.x, -r0.w
  26: mul r2.xyzw, r1.yzzx, r1.xyzz
  27: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  28: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  29: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  30: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  31: mov r1.w, l(1.000000)
  32: dp4 r3.x, cb2[39].xyzw, r1.xyzw
  33: dp4 r3.y, cb2[40].xyzw, r1.xyzw
  34: dp4 r3.z, cb2[41].xyzw, r1.xyzw
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  37: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  38: mul r4.xyzw, r1.yyyy, r3.xyzw
  39: mul r3.xyzw, r3.xyzw, r3.xyzw
  40: add r5.xyzw, -r0.xxxx, cb2[3].xyzw
  41: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  42: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  43: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  44: mad r3.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  45: mad r0.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  46: max r1.xyzw, r3.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  47: rsq r3.xyzw, r1.xyzw
  48: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  49: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  50: mul r0.xyzw, r0.xyzw, r3.xyzw
  51: max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: mul r0.xyzw, r1.xyzw, r0.xyzw
  53: mul r1.xyz, r0.yyyy, cb2[8].xyzx
  54: mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
  55: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
  56: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  57: add o5.xyz, r2.xyzx, r0.xyzx
  58: mov o6.xyzw, l(0,0,0,0)
  59: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL LIGHTPROBE_SH PIXELSNAP_ON VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  14: dp3 r1.x, v2.xyzx, cb3[4].xyzx
  15: dp3 r1.y, v2.xyzx, cb3[5].xyzx
  16: dp3 r1.z, v2.xyzx, cb3[6].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul r1.xyz, r0.wwww, r1.xyzx
  20: mov o2.xyz, r1.xyzx
  21: mov o3.xyz, r0.xyzx
  22: mul r2.xyzw, v7.xyzw, cb0[4].xyzw
  23: mul o4.xyzw, r2.xyzw, cb5[0].xyzw
  24: mul r0.w, r1.y, r1.y
  25: mad r0.w, r1.x, r1.x, -r0.w
  26: mul r2.xyzw, r1.yzzx, r1.xyzz
  27: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  28: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  29: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  30: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  31: mov r1.w, l(1.000000)
  32: dp4 r3.x, cb2[39].xyzw, r1.xyzw
  33: dp4 r3.y, cb2[40].xyzw, r1.xyzw
  34: dp4 r3.z, cb2[41].xyzw, r1.xyzw
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  37: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  38: mul r4.xyzw, r1.yyyy, r3.xyzw
  39: mul r3.xyzw, r3.xyzw, r3.xyzw
  40: add r5.xyzw, -r0.xxxx, cb2[3].xyzw
  41: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  42: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  43: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  44: mad r3.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  45: mad r0.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  46: max r1.xyzw, r3.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  47: rsq r3.xyzw, r1.xyzw
  48: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  49: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  50: mul r0.xyzw, r0.xyzw, r3.xyzw
  51: max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: mul r0.xyzw, r1.xyzw, r0.xyzw
  53: mul r1.xyz, r0.yyyy, cb2[8].xyzx
  54: mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
  55: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
  56: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  57: add o5.xyz, r2.xyzx, r0.xyzx
  58: mov o6.xyzw, l(0,0,0,0)
  59: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL PIXELSNAP_ON SHADOWS_SCREEN VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 54 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o0.xyzw, r1.xyzw
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r2.x, v2.xyzx, cb3[4].xyzx
  16: dp3 r2.y, v2.xyzx, cb3[5].xyzx
  17: dp3 r2.z, v2.xyzx, cb3[6].xyzx
  18: dp3 r0.w, r2.xyzx, r2.xyzx
  19: rsq r0.w, r0.w
  20: mul r2.xyz, r0.wwww, r2.xyzx
  21: mov o2.xyz, r2.xyzx
  22: mov o3.xyz, r0.xyzx
  23: mul r3.xyzw, v7.xyzw, cb0[4].xyzw
  24: mul o4.xyzw, r3.xyzw, cb5[0].xyzw
  25: add r3.xyzw, -r0.xxxx, cb2[3].xyzw
  26: add r4.xyzw, -r0.yyyy, cb2[4].xyzw
  27: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  28: mul r5.xyzw, r2.yyyy, r4.xyzw
  29: mul r4.xyzw, r4.xyzw, r4.xyzw
  30: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  31: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  32: mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
  33: mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
  34: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  35: rsq r4.xyzw, r0.xyzw
  36: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  37: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  38: mul r3.xyzw, r3.xyzw, r4.xyzw
  39: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  40: mul r0.xyzw, r0.xyzw, r3.xyzw
  41: mul r3.xyz, r0.yyyy, cb2[8].xyzx
  42: mad r3.xyz, cb2[7].xyzx, r0.xxxx, r3.xyzx
  43: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r3.xyzx
  44: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  45: mul r0.w, r2.y, r2.y
  46: mad r0.w, r2.x, r2.x, -r0.w
  47: mul r2.xyzw, r2.yzzx, r2.xyzz
  48: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  49: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  50: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  51: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  52: add o5.xyz, r0.xyzx, r2.xyzx
  53: mul r0.x, r1.y, cb1[5].x
  54: mul r0.w, r0.x, l(0.500000)
  55: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  56: mov o6.zw, r1.zzzw
  57: add o6.xy, r0.zzzz, r0.xwxx
  58: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL LIGHTPROBE_SH PIXELSNAP_ON SHADOWS_SCREEN VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 54 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o0.xyzw, r1.xyzw
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r2.x, v2.xyzx, cb3[4].xyzx
  16: dp3 r2.y, v2.xyzx, cb3[5].xyzx
  17: dp3 r2.z, v2.xyzx, cb3[6].xyzx
  18: dp3 r0.w, r2.xyzx, r2.xyzx
  19: rsq r0.w, r0.w
  20: mul r2.xyz, r0.wwww, r2.xyzx
  21: mov o2.xyz, r2.xyzx
  22: mov o3.xyz, r0.xyzx
  23: mul r3.xyzw, v7.xyzw, cb0[4].xyzw
  24: mul o4.xyzw, r3.xyzw, cb5[0].xyzw
  25: add r3.xyzw, -r0.xxxx, cb2[3].xyzw
  26: add r4.xyzw, -r0.yyyy, cb2[4].xyzw
  27: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  28: mul r5.xyzw, r2.yyyy, r4.xyzw
  29: mul r4.xyzw, r4.xyzw, r4.xyzw
  30: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  31: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  32: mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
  33: mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
  34: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  35: rsq r4.xyzw, r0.xyzw
  36: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  37: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  38: mul r3.xyzw, r3.xyzw, r4.xyzw
  39: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  40: mul r0.xyzw, r0.xyzw, r3.xyzw
  41: mul r3.xyz, r0.yyyy, cb2[8].xyzx
  42: mad r3.xyz, cb2[7].xyzx, r0.xxxx, r3.xyzx
  43: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r3.xyzx
  44: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  45: mul r0.w, r2.y, r2.y
  46: mad r0.w, r2.x, r2.x, -r0.w
  47: mul r2.xyzw, r2.yzzx, r2.xyzz
  48: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  49: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  50: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  51: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  52: add o5.xyz, r0.xyzx, r2.xyzx
  53: mul r0.x, r1.y, cb1[5].x
  54: mul r0.w, r0.x, l(0.500000)
  55: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  56: mov o6.zw, r1.zzzw
  57: add o6.xy, r0.zzzz, r0.xwxx
  58: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   2: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   6: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  12: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  13: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  19: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  20: mul r1.x, r0.y, r0.y
  21: mad r1.x, r0.x, r0.x, -r1.x
  22: mul r2.xyzw, r0.yzzx, r0.xyzz
  23: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  24: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  25: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  26: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  27: mov r0.w, l(1.000000)
  28: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  29: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  30: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  31: add r0.xyz, r1.xyzx, r2.xyzx
  32: max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  33: mov o6.xyzw, l(0,0,0,0)
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   2: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   6: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  12: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  13: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  19: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  20: mul r1.x, r0.y, r0.y
  21: mad r1.x, r0.x, r0.x, -r1.x
  22: mul r2.xyzw, r0.yzzx, r0.xyzz
  23: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  24: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  25: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  26: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  27: mov r0.w, l(1.000000)
  28: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  29: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  30: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  31: add r0.xyz, r1.xyzx, r2.xyzx
  32: max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  33: mov o6.xyzw, l(0,0,0,0)
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA SHADOWS_SCREEN
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   2: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   6: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mov o0.xyzw, r1.xyzw
  11: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  12: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  13: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  14: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  15: dp3 r0.w, r0.xyzx, r0.xyzx
  16: rsq r0.w, r0.w
  17: mul r0.xyz, r0.wwww, r0.xyzx
  18: mov o2.xyz, r0.xyzx
  19: mul r2.xyzw, v7.xyzw, cb0[4].xyzw
  20: mul o4.xyzw, r2.xyzw, cb5[0].xyzw
  21: mul r0.w, r0.y, r0.y
  22: mad r0.w, r0.x, r0.x, -r0.w
  23: mul r2.xyzw, r0.yzzx, r0.xyzz
  24: dp4 r0.x, cb2[42].xyzw, r2.xyzw
  25: dp4 r0.y, cb2[43].xyzw, r2.xyzw
  26: dp4 r0.z, cb2[44].xyzw, r2.xyzw
  27: mad o5.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  28: mul r0.x, r1.y, cb1[5].x
  29: mul r0.w, r0.x, l(0.500000)
  30: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  31: mov o6.zw, r1.zzzw
  32: add o6.xy, r0.zzzz, r0.xwxx
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH SHADOWS_SCREEN
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   2: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   6: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mov o0.xyzw, r1.xyzw
  11: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  12: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  13: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  14: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  15: dp3 r0.w, r0.xyzx, r0.xyzx
  16: rsq r0.w, r0.w
  17: mul r0.xyz, r0.wwww, r0.xyzx
  18: mov o2.xyz, r0.xyzx
  19: mul r2.xyzw, v7.xyzw, cb0[4].xyzw
  20: mul o4.xyzw, r2.xyzw, cb5[0].xyzw
  21: mul r0.w, r0.y, r0.y
  22: mad r0.w, r0.x, r0.x, -r0.w
  23: mul r2.xyzw, r0.yzzx, r0.xyzz
  24: dp4 r0.x, cb2[42].xyzw, r2.xyzw
  25: dp4 r0.y, cb2[43].xyzw, r2.xyzw
  26: dp4 r0.z, cb2[44].xyzw, r2.xyzw
  27: mad o5.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  28: mul r0.x, r1.y, cb1[5].x
  29: mul r0.w, r0.x, l(0.500000)
  30: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  31: mov o6.zw, r1.zzzw
  32: add o6.xy, r0.zzzz, r0.xwxx
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   2: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   6: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  11: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  12: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mov o3.xyz, r0.xyzx
  18: mul r2.xyzw, v7.xyzw, cb0[4].xyzw
  19: mul o4.xyzw, r2.xyzw, cb4[0].xyzw
  20: mul r0.w, r1.y, r1.y
  21: mad r0.w, r1.x, r1.x, -r0.w
  22: mul r2.xyzw, r1.yzzx, r1.xyzz
  23: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  24: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  25: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  26: mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
  27: mov r1.w, l(1.000000)
  28: dp4 r3.x, cb1[39].xyzw, r1.xyzw
  29: dp4 r3.y, cb1[40].xyzw, r1.xyzw
  30: dp4 r3.z, cb1[41].xyzw, r1.xyzw
  31: add r2.xyz, r2.xyzx, r3.xyzx
  32: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  33: add r3.xyzw, -r0.yyyy, cb1[4].xyzw
  34: mul r4.xyzw, r1.yyyy, r3.xyzw
  35: mul r3.xyzw, r3.xyzw, r3.xyzw
  36: add r5.xyzw, -r0.xxxx, cb1[3].xyzw
  37: add r0.xyzw, -r0.zzzz, cb1[5].xyzw
  38: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  39: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  40: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  41: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  42: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  43: rsq r3.xyzw, r0.xyzw
  44: mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  45: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  46: mul r1.xyzw, r1.xyzw, r3.xyzw
  47: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: mul r0.xyzw, r0.xyzw, r1.xyzw
  49: mul r1.xyz, r0.yyyy, cb1[8].xyzx
  50: mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
  51: mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
  52: mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
  53: add o5.xyz, r2.xyzx, r0.xyzx
  54: mov o6.xyzw, l(0,0,0,0)
  55: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   2: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   6: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  11: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  12: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o2.xyz, r1.xyzx
  17: mov o3.xyz, r0.xyzx
  18: mul r2.xyzw, v7.xyzw, cb0[4].xyzw
  19: mul o4.xyzw, r2.xyzw, cb4[0].xyzw
  20: mul r0.w, r1.y, r1.y
  21: mad r0.w, r1.x, r1.x, -r0.w
  22: mul r2.xyzw, r1.yzzx, r1.xyzz
  23: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  24: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  25: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  26: mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
  27: mov r1.w, l(1.000000)
  28: dp4 r3.x, cb1[39].xyzw, r1.xyzw
  29: dp4 r3.y, cb1[40].xyzw, r1.xyzw
  30: dp4 r3.z, cb1[41].xyzw, r1.xyzw
  31: add r2.xyz, r2.xyzx, r3.xyzx
  32: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  33: add r3.xyzw, -r0.yyyy, cb1[4].xyzw
  34: mul r4.xyzw, r1.yyyy, r3.xyzw
  35: mul r3.xyzw, r3.xyzw, r3.xyzw
  36: add r5.xyzw, -r0.xxxx, cb1[3].xyzw
  37: add r0.xyzw, -r0.zzzz, cb1[5].xyzw
  38: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  39: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  40: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  41: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  42: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  43: rsq r3.xyzw, r0.xyzw
  44: mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  45: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  46: mul r1.xyzw, r1.xyzw, r3.xyzw
  47: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: mul r0.xyzw, r0.xyzw, r1.xyzw
  49: mul r1.xyz, r0.yyyy, cb1[8].xyzx
  50: mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
  51: mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
  52: mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
  53: add o5.xyz, r2.xyzx, r0.xyzx
  54: mov o6.xyzw, l(0,0,0,0)
  55: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA SHADOWS_SCREEN VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 50 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   2: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   6: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r2.x, v2.xyzx, cb3[4].xyzx
  12: dp3 r2.y, v2.xyzx, cb3[5].xyzx
  13: dp3 r2.z, v2.xyzx, cb3[6].xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mul r2.xyz, r0.wwww, r2.xyzx
  17: mov o2.xyz, r2.xyzx
  18: mov o3.xyz, r0.xyzx
  19: mul r3.xyzw, v7.xyzw, cb0[4].xyzw
  20: mul o4.xyzw, r3.xyzw, cb5[0].xyzw
  21: add r3.xyzw, -r0.xxxx, cb2[3].xyzw
  22: add r4.xyzw, -r0.yyyy, cb2[4].xyzw
  23: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  24: mul r5.xyzw, r2.yyyy, r4.xyzw
  25: mul r4.xyzw, r4.xyzw, r4.xyzw
  26: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  27: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  28: mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
  29: mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
  30: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  31: rsq r4.xyzw, r0.xyzw
  32: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  33: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  34: mul r3.xyzw, r3.xyzw, r4.xyzw
  35: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: mul r0.xyzw, r0.xyzw, r3.xyzw
  37: mul r3.xyz, r0.yyyy, cb2[8].xyzx
  38: mad r3.xyz, cb2[7].xyzx, r0.xxxx, r3.xyzx
  39: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r3.xyzx
  40: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  41: mul r0.w, r2.y, r2.y
  42: mad r0.w, r2.x, r2.x, -r0.w
  43: mul r2.xyzw, r2.yzzx, r2.xyzz
  44: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  45: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  46: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  47: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  48: add o5.xyz, r0.xyzx, r2.xyzx
  49: mul r0.x, r1.y, cb1[5].x
  50: mul r0.w, r0.x, l(0.500000)
  51: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  52: mov o6.zw, r1.zzzw
  53: add o6.xy, r0.zzzz, r0.xwxx
  54: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 50 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   2: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   6: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r2.x, v2.xyzx, cb3[4].xyzx
  12: dp3 r2.y, v2.xyzx, cb3[5].xyzx
  13: dp3 r2.z, v2.xyzx, cb3[6].xyzx
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mul r2.xyz, r0.wwww, r2.xyzx
  17: mov o2.xyz, r2.xyzx
  18: mov o3.xyz, r0.xyzx
  19: mul r3.xyzw, v7.xyzw, cb0[4].xyzw
  20: mul o4.xyzw, r3.xyzw, cb5[0].xyzw
  21: add r3.xyzw, -r0.xxxx, cb2[3].xyzw
  22: add r4.xyzw, -r0.yyyy, cb2[4].xyzw
  23: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  24: mul r5.xyzw, r2.yyyy, r4.xyzw
  25: mul r4.xyzw, r4.xyzw, r4.xyzw
  26: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  27: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  28: mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
  29: mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
  30: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  31: rsq r4.xyzw, r0.xyzw
  32: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  33: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  34: mul r3.xyzw, r3.xyzw, r4.xyzw
  35: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  36: mul r0.xyzw, r0.xyzw, r3.xyzw
  37: mul r3.xyz, r0.yyyy, cb2[8].xyzx
  38: mad r3.xyz, cb2[7].xyzx, r0.xxxx, r3.xyzx
  39: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r3.xyzx
  40: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  41: mul r0.w, r2.y, r2.y
  42: mad r0.w, r2.x, r2.x, -r0.w
  43: mul r2.xyzw, r2.yzzx, r2.xyzz
  44: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  45: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  46: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  47: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  48: add o5.xyz, r0.xyzx, r2.xyzx
  49: mul r0.x, r1.y, cb1[5].x
  50: mul r0.w, r0.x, l(0.500000)
  51: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  52: mov o6.zw, r1.zzzw
  53: add o6.xy, r0.zzzz, r0.xwxx
  54: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul r0.xyz, r0.wwww, r0.xyzx
  21: mov o2.xyz, r0.xyzx
  22: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  23: mul o4.xyzw, r1.xyzw, cb5[0].xyzw
  24: mul r1.x, r0.y, r0.y
  25: mad r1.x, r0.x, r0.x, -r1.x
  26: mul r2.xyzw, r0.yzzx, r0.xyzz
  27: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  28: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  29: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  30: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  31: mov r0.w, l(1.000000)
  32: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  33: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  34: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  35: add r0.xyz, r1.xyzx, r2.xyzx
  36: max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  37: mov o6.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul r0.xyz, r0.wwww, r0.xyzx
  21: mov o2.xyz, r0.xyzx
  22: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  23: mul o4.xyzw, r1.xyzw, cb5[0].xyzw
  24: mul r1.x, r0.y, r0.y
  25: mad r1.x, r0.x, r0.x, -r1.x
  26: mul r2.xyzw, r0.yzzx, r0.xyzz
  27: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  28: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  29: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  30: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  31: mov r0.w, l(1.000000)
  32: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  33: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  34: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  35: add r0.xyz, r1.xyzx, r2.xyzx
  36: max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  37: mov o6.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA PIXELSNAP_ON SHADOWS_SCREEN
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mov o0.xyzw, r1.xyzw
  15: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  16: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  17: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  18: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul r0.xyz, r0.wwww, r0.xyzx
  22: mov o2.xyz, r0.xyzx
  23: mul r2.xyzw, v7.xyzw, cb0[4].xyzw
  24: mul o4.xyzw, r2.xyzw, cb5[0].xyzw
  25: mul r0.w, r0.y, r0.y
  26: mad r0.w, r0.x, r0.x, -r0.w
  27: mul r2.xyzw, r0.yzzx, r0.xyzz
  28: dp4 r0.x, cb2[42].xyzw, r2.xyzw
  29: dp4 r0.y, cb2[43].xyzw, r2.xyzw
  30: dp4 r0.z, cb2[44].xyzw, r2.xyzw
  31: mad o5.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  32: mul r0.x, r1.y, cb1[5].x
  33: mul r0.w, r0.x, l(0.500000)
  34: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  35: mov o6.zw, r1.zzzw
  36: add o6.xy, r0.zzzz, r0.xwxx
  37: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH PIXELSNAP_ON SHADOWS_SCREEN
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mov o0.xyzw, r1.xyzw
  15: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  16: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  17: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  18: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul r0.xyz, r0.wwww, r0.xyzx
  22: mov o2.xyz, r0.xyzx
  23: mul r2.xyzw, v7.xyzw, cb0[4].xyzw
  24: mul o4.xyzw, r2.xyzw, cb5[0].xyzw
  25: mul r0.w, r0.y, r0.y
  26: mad r0.w, r0.x, r0.x, -r0.w
  27: mul r2.xyzw, r0.yzzx, r0.xyzz
  28: dp4 r0.x, cb2[42].xyzw, r2.xyzw
  29: dp4 r0.y, cb2[43].xyzw, r2.xyzw
  30: dp4 r0.z, cb2[44].xyzw, r2.xyzw
  31: mad o5.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  32: mul r0.x, r1.y, cb1[5].x
  33: mul r0.w, r0.x, l(0.500000)
  34: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  35: mov o6.zw, r1.zzzw
  36: add o6.xy, r0.zzzz, r0.xwxx
  37: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA PIXELSNAP_ON VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  14: dp3 r1.x, v2.xyzx, cb3[4].xyzx
  15: dp3 r1.y, v2.xyzx, cb3[5].xyzx
  16: dp3 r1.z, v2.xyzx, cb3[6].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul r1.xyz, r0.wwww, r1.xyzx
  20: mov o2.xyz, r1.xyzx
  21: mov o3.xyz, r0.xyzx
  22: mul r2.xyzw, v7.xyzw, cb0[4].xyzw
  23: mul o4.xyzw, r2.xyzw, cb5[0].xyzw
  24: mul r0.w, r1.y, r1.y
  25: mad r0.w, r1.x, r1.x, -r0.w
  26: mul r2.xyzw, r1.yzzx, r1.xyzz
  27: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  28: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  29: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  30: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  31: mov r1.w, l(1.000000)
  32: dp4 r3.x, cb2[39].xyzw, r1.xyzw
  33: dp4 r3.y, cb2[40].xyzw, r1.xyzw
  34: dp4 r3.z, cb2[41].xyzw, r1.xyzw
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  37: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  38: mul r4.xyzw, r1.yyyy, r3.xyzw
  39: mul r3.xyzw, r3.xyzw, r3.xyzw
  40: add r5.xyzw, -r0.xxxx, cb2[3].xyzw
  41: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  42: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  43: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  44: mad r3.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  45: mad r0.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  46: max r1.xyzw, r3.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  47: rsq r3.xyzw, r1.xyzw
  48: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  49: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  50: mul r0.xyzw, r0.xyzw, r3.xyzw
  51: max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: mul r0.xyzw, r1.xyzw, r0.xyzw
  53: mul r1.xyz, r0.yyyy, cb2[8].xyzx
  54: mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
  55: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
  56: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  57: add o5.xyz, r2.xyzx, r0.xyzx
  58: mov o6.xyzw, l(0,0,0,0)
  59: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH PIXELSNAP_ON VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  14: dp3 r1.x, v2.xyzx, cb3[4].xyzx
  15: dp3 r1.y, v2.xyzx, cb3[5].xyzx
  16: dp3 r1.z, v2.xyzx, cb3[6].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul r1.xyz, r0.wwww, r1.xyzx
  20: mov o2.xyz, r1.xyzx
  21: mov o3.xyz, r0.xyzx
  22: mul r2.xyzw, v7.xyzw, cb0[4].xyzw
  23: mul o4.xyzw, r2.xyzw, cb5[0].xyzw
  24: mul r0.w, r1.y, r1.y
  25: mad r0.w, r1.x, r1.x, -r0.w
  26: mul r2.xyzw, r1.yzzx, r1.xyzz
  27: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  28: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  29: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  30: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  31: mov r1.w, l(1.000000)
  32: dp4 r3.x, cb2[39].xyzw, r1.xyzw
  33: dp4 r3.y, cb2[40].xyzw, r1.xyzw
  34: dp4 r3.z, cb2[41].xyzw, r1.xyzw
  35: add r2.xyz, r2.xyzx, r3.xyzx
  36: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  37: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  38: mul r4.xyzw, r1.yyyy, r3.xyzw
  39: mul r3.xyzw, r3.xyzw, r3.xyzw
  40: add r5.xyzw, -r0.xxxx, cb2[3].xyzw
  41: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  42: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  43: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  44: mad r3.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  45: mad r0.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  46: max r1.xyzw, r3.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  47: rsq r3.xyzw, r1.xyzw
  48: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  49: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  50: mul r0.xyzw, r0.xyzw, r3.xyzw
  51: max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: mul r0.xyzw, r1.xyzw, r0.xyzw
  53: mul r1.xyz, r0.yyyy, cb2[8].xyzx
  54: mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
  55: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
  56: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  57: add o5.xyz, r2.xyzx, r0.xyzx
  58: mov o6.xyzw, l(0,0,0,0)
  59: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA PIXELSNAP_ON SHADOWS_SCREEN VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 54 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o0.xyzw, r1.xyzw
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r2.x, v2.xyzx, cb3[4].xyzx
  16: dp3 r2.y, v2.xyzx, cb3[5].xyzx
  17: dp3 r2.z, v2.xyzx, cb3[6].xyzx
  18: dp3 r0.w, r2.xyzx, r2.xyzx
  19: rsq r0.w, r0.w
  20: mul r2.xyz, r0.wwww, r2.xyzx
  21: mov o2.xyz, r2.xyzx
  22: mov o3.xyz, r0.xyzx
  23: mul r3.xyzw, v7.xyzw, cb0[4].xyzw
  24: mul o4.xyzw, r3.xyzw, cb5[0].xyzw
  25: add r3.xyzw, -r0.xxxx, cb2[3].xyzw
  26: add r4.xyzw, -r0.yyyy, cb2[4].xyzw
  27: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  28: mul r5.xyzw, r2.yyyy, r4.xyzw
  29: mul r4.xyzw, r4.xyzw, r4.xyzw
  30: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  31: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  32: mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
  33: mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
  34: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  35: rsq r4.xyzw, r0.xyzw
  36: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  37: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  38: mul r3.xyzw, r3.xyzw, r4.xyzw
  39: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  40: mul r0.xyzw, r0.xyzw, r3.xyzw
  41: mul r3.xyz, r0.yyyy, cb2[8].xyzx
  42: mad r3.xyz, cb2[7].xyzx, r0.xxxx, r3.xyzx
  43: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r3.xyzx
  44: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  45: mul r0.w, r2.y, r2.y
  46: mad r0.w, r2.x, r2.x, -r0.w
  47: mul r2.xyzw, r2.yzzx, r2.xyzz
  48: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  49: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  50: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  51: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  52: add o5.xyz, r0.xyzx, r2.xyzx
  53: mul r0.x, r1.y, cb1[5].x
  54: mul r0.w, r0.x, l(0.500000)
  55: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  56: mov o6.zw, r1.zzzw
  57: add o6.xy, r0.zzzz, r0.xwxx
  58: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH PIXELSNAP_ON SHADOWS_SCREEN VERTEXLIGHT_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 54 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o0.xyzw, r1.xyzw
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r2.x, v2.xyzx, cb3[4].xyzx
  16: dp3 r2.y, v2.xyzx, cb3[5].xyzx
  17: dp3 r2.z, v2.xyzx, cb3[6].xyzx
  18: dp3 r0.w, r2.xyzx, r2.xyzx
  19: rsq r0.w, r0.w
  20: mul r2.xyz, r0.wwww, r2.xyzx
  21: mov o2.xyz, r2.xyzx
  22: mov o3.xyz, r0.xyzx
  23: mul r3.xyzw, v7.xyzw, cb0[4].xyzw
  24: mul o4.xyzw, r3.xyzw, cb5[0].xyzw
  25: add r3.xyzw, -r0.xxxx, cb2[3].xyzw
  26: add r4.xyzw, -r0.yyyy, cb2[4].xyzw
  27: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  28: mul r5.xyzw, r2.yyyy, r4.xyzw
  29: mul r4.xyzw, r4.xyzw, r4.xyzw
  30: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  31: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  32: mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
  33: mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
  34: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  35: rsq r4.xyzw, r0.xyzw
  36: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  37: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  38: mul r3.xyzw, r3.xyzw, r4.xyzw
  39: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  40: mul r0.xyzw, r0.xyzw, r3.xyzw
  41: mul r3.xyz, r0.yyyy, cb2[8].xyzx
  42: mad r3.xyz, cb2[7].xyzx, r0.xxxx, r3.xyzx
  43: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r3.xyzx
  44: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  45: mul r0.w, r2.y, r2.y
  46: mad r0.w, r2.x, r2.x, -r0.w
  47: mul r2.xyzw, r2.yzzx, r2.xyzz
  48: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  49: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  50: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  51: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  52: add o5.xyz, r0.xyzx, r2.xyzx
  53: mul r0.x, r1.y, cb1[5].x
  54: mul r0.w, r0.x, l(0.500000)
  55: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  56: mov o6.zw, r1.zzzw
  57: add o6.xy, r0.zzzz, r0.xwxx
  58: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

 }


 // Stats for Vertex shader:
 //        d3d11: 23 avg math (18..26)
 // Stats for Fragment shader:
 //        d3d11: 30 avg math (21..39), 3 avg texture (2..5), 2 branch
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" "CanUseSpriteAtlas"="true" "PreviewType"="Plane" }
  ZWrite Off
  Cull Off
  Blend One One
  ColorMask RGB
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords: POINT
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _Color at 128
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb3[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
   2: mad r0.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
   6: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
   9: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  10: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r1.w, r1.xyzx, r1.xyzx
  14: rsq r1.w, r1.w
  15: mul o2.xyz, r1.wwww, r1.xyzx
  16: mov o3.xyz, r0.xyzx
  17: mul r1.xyzw, v7.xyzw, cb0[8].xyzw
  18: mul o4.xyzw, r1.xyzw, cb3[0].xyzw
  19: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  20: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  21: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  22: mad o5.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  23: mov o6.xyzw, l(0,0,0,0)
  24: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 31 math, 4 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float       
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, -v3.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   5: mul r2.xyzw, r1.xyzw, v4.xyzw
   6: mul r1.xyz, r2.wwww, r2.xyzx
   7: mad r0.w, r1.w, v4.w, -cb0[10].x
   8: lt r0.w, r0.w, l(0.000000)
   9: discard_nz r0.w
  10: mul r2.xyz, v3.yyyy, cb0[5].xyzx
  11: mad r2.xyz, cb0[4].xyzx, v3.xxxx, r2.xyzx
  12: mad r2.xyz, cb0[6].xyzx, v3.zzzz, r2.xyzx
  13: add r2.xyz, r2.xyzx, cb0[7].xyzx
  14: eq r0.w, cb2[0].x, l(1.000000)
  15: if_nz r0.w
  16:   eq r0.w, cb2[0].y, l(1.000000)
  17:   mul r3.xyz, v3.yyyy, cb2[2].xyzx
  18:   mad r3.xyz, cb2[1].xyzx, v3.xxxx, r3.xyzx
  19:   mad r3.xyz, cb2[3].xyzx, v3.zzzz, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  21:   movc r3.xyz, r0.wwww, r3.xyzx, v3.xyzx
  22:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  23:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  24:   mad r0.w, r3.y, l(0.250000), l(0.750000)
  25:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  26:   max r3.x, r0.w, r1.w
  27:   sample r3.xyzw, r3.xzwx, t2.xyzw, s0
  28: else 
  29:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  30: endif 
  31: dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
  32: dp3 r1.w, r2.xyzx, r2.xyzx
  33: sample r3.xyzw, r1.wwww, t1.xyzw, s1
  34: mul r0.w, r0.w, r3.x
  35: mul r2.xyz, r0.wwww, cb0[2].xyzx
  36: dp3 r0.x, v2.xyzx, r0.xyzx
  37: max r0.x, r0.x, l(0.000000)
  38: mul r0.yzw, r1.xxyz, r2.xxyz
  39: mul o0.xyz, r0.xxxx, r0.yzwy
  40: mov o0.w, r2.w
  41: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 18 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb3[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
   2: mad r0.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
   6: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  12: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  13: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  18: mul o4.xyzw, r0.xyzw, cb3[0].xyzw
  19: mov o5.xyzw, l(0,0,0,0)
  20: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 3 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyzw, r0.xyzw, v4.xyzw
   2: mul r0.xyz, r1.wwww, r1.xyzx
   3: mad r0.w, r0.w, v4.w, -cb0[6].x
   4: lt r0.w, r0.w, l(0.000000)
   5: discard_nz r0.w
   6: eq r0.w, cb2[0].x, l(1.000000)
   7: if_nz r0.w
   8:   eq r0.w, cb2[0].y, l(1.000000)
   9:   mul r1.xyz, v3.yyyy, cb2[2].xyzx
  10:   mad r1.xyz, cb2[1].xyzx, v3.xxxx, r1.xyzx
  11:   mad r1.xyz, cb2[3].xyzx, v3.zzzz, r1.xyzx
  12:   add r1.xyz, r1.xyzx, cb2[4].xyzx
  13:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  14:   add r1.xyz, r1.xyzx, -cb2[6].xyzx
  15:   mul r2.yzw, r1.xxyz, cb2[5].xxyz
  16:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  17:   mad r1.x, cb2[0].z, l(0.500000), l(0.750000)
  18:   max r2.x, r0.w, r1.x
  19:   sample r2.xyzw, r2.xzwx, t1.xyzw, s0
  20: else 
  21:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  22: endif 
  23: dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
  24: mul r1.xyz, r0.wwww, cb0[2].xyzx
  25: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: mul r0.xyz, r0.xyzx, r1.xyzx
  28: mul o0.xyz, r0.wwww, r0.xyzx
  29: mov o0.w, r1.w
  30: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: SPOT
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _Color at 128
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb3[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
   2: mad r0.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
   6: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
   9: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  10: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r1.w, r1.xyzx, r1.xyzx
  14: rsq r1.w, r1.w
  15: mul o2.xyz, r1.wwww, r1.xyzx
  16: mov o3.xyz, r0.xyzx
  17: mul r1.xyzw, v7.xyzw, cb0[8].xyzw
  18: mul o4.xyzw, r1.xyzw, cb3[0].xyzw
  19: mul r1.xyzw, r0.yyyy, cb0[5].xyzw
  20: mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
  21: mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
  22: mad o5.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
  23: mov o6.xyzw, l(0,0,0,0)
  24: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 5 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 5
   0: add r0.xyz, -v3.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   5: mul r2.xyzw, r1.xyzw, v4.xyzw
   6: mul r1.xyz, r2.wwww, r2.xyzx
   7: mad r0.w, r1.w, v4.w, -cb0[10].x
   8: lt r0.w, r0.w, l(0.000000)
   9: discard_nz r0.w
  10: mul r3.xyzw, v3.yyyy, cb0[5].xyzw
  11: mad r3.xyzw, cb0[4].xyzw, v3.xxxx, r3.xyzw
  12: mad r3.xyzw, cb0[6].xyzw, v3.zzzz, r3.xyzw
  13: add r3.xyzw, r3.xyzw, cb0[7].xyzw
  14: eq r0.w, cb2[0].x, l(1.000000)
  15: if_nz r0.w
  16:   eq r0.w, cb2[0].y, l(1.000000)
  17:   mul r2.xyz, v3.yyyy, cb2[2].xyzx
  18:   mad r2.xyz, cb2[1].xyzx, v3.xxxx, r2.xyzx
  19:   mad r2.xyz, cb2[3].xyzx, v3.zzzz, r2.xyzx
  20:   add r2.xyz, r2.xyzx, cb2[4].xyzx
  21:   movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
  22:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  23:   mul r4.yzw, r2.xxyz, cb2[5].xxyz
  24:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  25:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  26:   max r4.x, r0.w, r1.w
  27:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  28: else 
  29:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  30: endif 
  31: dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
  32: lt r1.w, l(0.000000), r3.z
  33: and r1.w, r1.w, l(0x3f800000)
  34: div r2.xy, r3.xyxx, r3.wwww
  35: add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  36: sample r4.xyzw, r2.xyxx, t1.xyzw, s1
  37: mul r1.w, r1.w, r4.w
  38: dp3 r2.x, r3.xyzx, r3.xyzx
  39: sample r3.xyzw, r2.xxxx, t2.xyzw, s2
  40: mul r1.w, r1.w, r3.x
  41: mul r0.w, r0.w, r1.w
  42: mul r2.xyz, r0.wwww, cb0[2].xyzx
  43: dp3 r0.x, v2.xyzx, r0.xyzx
  44: max r0.x, r0.x, l(0.000000)
  45: mul r0.yzw, r1.xxyz, r2.xxyz
  46: mul o0.xyz, r0.xxxx, r0.yzwy
  47: mov o0.w, r2.w
  48: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: POINT_COOKIE
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _Color at 128
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb3[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
   2: mad r0.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
   6: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
   9: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  10: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r1.w, r1.xyzx, r1.xyzx
  14: rsq r1.w, r1.w
  15: mul o2.xyz, r1.wwww, r1.xyzx
  16: mov o3.xyz, r0.xyzx
  17: mul r1.xyzw, v7.xyzw, cb0[8].xyzw
  18: mul o4.xyzw, r1.xyzw, cb3[0].xyzw
  19: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  20: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  21: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  22: mad o5.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  23: mov o6.xyzw, l(0,0,0,0)
  24: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 5 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 2
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float       
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 5
   0: add r0.xyz, -v3.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   5: mul r2.xyzw, r1.xyzw, v4.xyzw
   6: mul r1.xyz, r2.wwww, r2.xyzx
   7: mad r0.w, r1.w, v4.w, -cb0[10].x
   8: lt r0.w, r0.w, l(0.000000)
   9: discard_nz r0.w
  10: mul r2.xyz, v3.yyyy, cb0[5].xyzx
  11: mad r2.xyz, cb0[4].xyzx, v3.xxxx, r2.xyzx
  12: mad r2.xyz, cb0[6].xyzx, v3.zzzz, r2.xyzx
  13: add r2.xyz, r2.xyzx, cb0[7].xyzx
  14: eq r0.w, cb2[0].x, l(1.000000)
  15: if_nz r0.w
  16:   eq r0.w, cb2[0].y, l(1.000000)
  17:   mul r3.xyz, v3.yyyy, cb2[2].xyzx
  18:   mad r3.xyz, cb2[1].xyzx, v3.xxxx, r3.xyzx
  19:   mad r3.xyz, cb2[3].xyzx, v3.zzzz, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  21:   movc r3.xyz, r0.wwww, r3.xyzx, v3.xyzx
  22:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  23:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  24:   mad r0.w, r3.y, l(0.250000), l(0.750000)
  25:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  26:   max r3.x, r0.w, r1.w
  27:   sample r3.xyzw, r3.xzwx, t3.xyzw, s0
  28: else 
  29:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  30: endif 
  31: dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
  32: dp3 r1.w, r2.xyzx, r2.xyzx
  33: sample r3.xyzw, r1.wwww, t1.xyzw, s2
  34: sample r4.xyzw, r2.xyzx, t2.xyzw, s1
  35: mul r1.w, r3.x, r4.w
  36: mul r0.w, r0.w, r1.w
  37: mul r2.xyz, r0.wwww, cb0[2].xyzx
  38: dp3 r0.x, v2.xyzx, r0.xyzx
  39: max r0.x, r0.x, l(0.000000)
  40: mul r0.yzw, r1.xxyz, r2.xxyz
  41: mul o0.xyz, r0.xxxx, r0.yzwy
  42: mov o0.w, r2.w
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL_COOKIE
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _Color at 128
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4     zw        1     NONE   float     zw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o1.zw
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb3[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
   2: mad r0.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
   6: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
   9: mul r1.xy, r0.yyyy, cb0[5].xyxx
  10: mad r1.xy, cb0[4].xyxx, r0.xxxx, r1.xyxx
  11: mad r1.xy, cb0[6].xyxx, r0.zzzz, r1.xyxx
  12: mad o1.zw, cb0[7].xxxy, r0.wwww, r1.xxxy
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  15: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul o2.xyz, r0.wwww, r0.xyzx
  21: mul r0.xyzw, v7.xyzw, cb0[8].xyzw
  22: mul o4.xyzw, r0.xyzw, cb3[0].xyzw
  23: mov o5.xyzw, l(0,0,0,0)
  24: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 26 math, 3 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4     zw        1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, v4.xyzw
   2: mul r0.xyz, r1.wwww, r1.xyzx
   3: mad r0.w, r0.w, v4.w, -cb0[10].x
   4: lt r0.w, r0.w, l(0.000000)
   5: discard_nz r0.w
   6: mul r1.xy, v3.yyyy, cb0[5].xyxx
   7: mad r1.xy, cb0[4].xyxx, v3.xxxx, r1.xyxx
   8: mad r1.xy, cb0[6].xyxx, v3.zzzz, r1.xyxx
   9: add r1.xy, r1.xyxx, cb0[7].xyxx
  10: eq r0.w, cb2[0].x, l(1.000000)
  11: if_nz r0.w
  12:   eq r0.w, cb2[0].y, l(1.000000)
  13:   mul r2.xyz, v3.yyyy, cb2[2].xyzx
  14:   mad r2.xyz, cb2[1].xyzx, v3.xxxx, r2.xyzx
  15:   mad r2.xyz, cb2[3].xyzx, v3.zzzz, r2.xyzx
  16:   add r2.xyz, r2.xyzx, cb2[4].xyzx
  17:   movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
  18:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  19:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  20:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  21:   mad r1.z, cb2[0].z, l(0.500000), l(0.750000)
  22:   max r2.x, r0.w, r1.z
  23:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  24: else 
  25:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
  28: sample r2.xyzw, r1.xyxx, t1.xyzw, s1
  29: mul r0.w, r0.w, r2.w
  30: mul r1.xyz, r0.wwww, cb0[2].xyzx
  31: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  32: max r0.w, r0.w, l(0.000000)
  33: mul r0.xyz, r0.xyzx, r1.xyzx
  34: mul o0.xyz, r0.wwww, r0.xyzx
  35: mov o0.w, r1.w
  36: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: PIXELSNAP_ON POINT
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _Color at 128
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   6: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  10: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  13: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  14: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  15: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  16: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mul r1.xyzw, v7.xyzw, cb0[8].xyzw
  22: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  23: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  24: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  25: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  26: mad o5.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 31 math, 4 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float       
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, -v3.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   5: mul r2.xyzw, r1.xyzw, v4.xyzw
   6: mul r1.xyz, r2.wwww, r2.xyzx
   7: mad r0.w, r1.w, v4.w, -cb0[10].x
   8: lt r0.w, r0.w, l(0.000000)
   9: discard_nz r0.w
  10: mul r2.xyz, v3.yyyy, cb0[5].xyzx
  11: mad r2.xyz, cb0[4].xyzx, v3.xxxx, r2.xyzx
  12: mad r2.xyz, cb0[6].xyzx, v3.zzzz, r2.xyzx
  13: add r2.xyz, r2.xyzx, cb0[7].xyzx
  14: eq r0.w, cb2[0].x, l(1.000000)
  15: if_nz r0.w
  16:   eq r0.w, cb2[0].y, l(1.000000)
  17:   mul r3.xyz, v3.yyyy, cb2[2].xyzx
  18:   mad r3.xyz, cb2[1].xyzx, v3.xxxx, r3.xyzx
  19:   mad r3.xyz, cb2[3].xyzx, v3.zzzz, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  21:   movc r3.xyz, r0.wwww, r3.xyzx, v3.xyzx
  22:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  23:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  24:   mad r0.w, r3.y, l(0.250000), l(0.750000)
  25:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  26:   max r3.x, r0.w, r1.w
  27:   sample r3.xyzw, r3.xzwx, t2.xyzw, s0
  28: else 
  29:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  30: endif 
  31: dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
  32: dp3 r1.w, r2.xyzx, r2.xyzx
  33: sample r3.xyzw, r1.wwww, t1.xyzw, s1
  34: mul r0.w, r0.w, r3.x
  35: mul r2.xyz, r0.wwww, cb0[2].xyzx
  36: dp3 r0.x, v2.xyzx, r0.xyzx
  37: max r0.x, r0.x, l(0.000000)
  38: mul r0.yzw, r1.xxyz, r2.xxyz
  39: mul o0.xyz, r0.xxxx, r0.yzwy
  40: mov o0.w, r2.w
  41: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   6: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  10: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul o2.xyz, r0.wwww, r0.xyzx
  21: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  22: mul o4.xyzw, r0.xyzw, cb4[0].xyzw
  23: mov o5.xyzw, l(0,0,0,0)
  24: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 21 math, 3 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyzw, r0.xyzw, v4.xyzw
   2: mul r0.xyz, r1.wwww, r1.xyzx
   3: mad r0.w, r0.w, v4.w, -cb0[6].x
   4: lt r0.w, r0.w, l(0.000000)
   5: discard_nz r0.w
   6: eq r0.w, cb2[0].x, l(1.000000)
   7: if_nz r0.w
   8:   eq r0.w, cb2[0].y, l(1.000000)
   9:   mul r1.xyz, v3.yyyy, cb2[2].xyzx
  10:   mad r1.xyz, cb2[1].xyzx, v3.xxxx, r1.xyzx
  11:   mad r1.xyz, cb2[3].xyzx, v3.zzzz, r1.xyzx
  12:   add r1.xyz, r1.xyzx, cb2[4].xyzx
  13:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  14:   add r1.xyz, r1.xyzx, -cb2[6].xyzx
  15:   mul r2.yzw, r1.xxyz, cb2[5].xxyz
  16:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  17:   mad r1.x, cb2[0].z, l(0.500000), l(0.750000)
  18:   max r2.x, r0.w, r1.x
  19:   sample r2.xyzw, r2.xzwx, t1.xyzw, s0
  20: else 
  21:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  22: endif 
  23: dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
  24: mul r1.xyz, r0.wwww, cb0[2].xyzx
  25: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  26: max r0.w, r0.w, l(0.000000)
  27: mul r0.xyz, r0.xyzx, r1.xyzx
  28: mul o0.xyz, r0.wwww, r0.xyzx
  29: mov o0.w, r1.w
  30: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: PIXELSNAP_ON SPOT
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _Color at 128
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   6: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  10: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  13: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  14: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  15: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  16: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mul r1.xyzw, v7.xyzw, cb0[8].xyzw
  22: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  23: mul r1.xyzw, r0.yyyy, cb0[5].xyzw
  24: mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
  25: mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
  26: mad o5.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 5 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 5
   0: add r0.xyz, -v3.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   5: mul r2.xyzw, r1.xyzw, v4.xyzw
   6: mul r1.xyz, r2.wwww, r2.xyzx
   7: mad r0.w, r1.w, v4.w, -cb0[10].x
   8: lt r0.w, r0.w, l(0.000000)
   9: discard_nz r0.w
  10: mul r3.xyzw, v3.yyyy, cb0[5].xyzw
  11: mad r3.xyzw, cb0[4].xyzw, v3.xxxx, r3.xyzw
  12: mad r3.xyzw, cb0[6].xyzw, v3.zzzz, r3.xyzw
  13: add r3.xyzw, r3.xyzw, cb0[7].xyzw
  14: eq r0.w, cb2[0].x, l(1.000000)
  15: if_nz r0.w
  16:   eq r0.w, cb2[0].y, l(1.000000)
  17:   mul r2.xyz, v3.yyyy, cb2[2].xyzx
  18:   mad r2.xyz, cb2[1].xyzx, v3.xxxx, r2.xyzx
  19:   mad r2.xyz, cb2[3].xyzx, v3.zzzz, r2.xyzx
  20:   add r2.xyz, r2.xyzx, cb2[4].xyzx
  21:   movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
  22:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  23:   mul r4.yzw, r2.xxyz, cb2[5].xxyz
  24:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  25:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  26:   max r4.x, r0.w, r1.w
  27:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  28: else 
  29:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  30: endif 
  31: dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
  32: lt r1.w, l(0.000000), r3.z
  33: and r1.w, r1.w, l(0x3f800000)
  34: div r2.xy, r3.xyxx, r3.wwww
  35: add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  36: sample r4.xyzw, r2.xyxx, t1.xyzw, s1
  37: mul r1.w, r1.w, r4.w
  38: dp3 r2.x, r3.xyzx, r3.xyzx
  39: sample r3.xyzw, r2.xxxx, t2.xyzw, s2
  40: mul r1.w, r1.w, r3.x
  41: mul r0.w, r0.w, r1.w
  42: mul r2.xyz, r0.wwww, cb0[2].xyzx
  43: dp3 r0.x, v2.xyzx, r0.xyzx
  44: max r0.x, r0.x, l(0.000000)
  45: mul r0.yzw, r1.xxyz, r2.xxyz
  46: mul o0.xyz, r0.xxxx, r0.yzwy
  47: mov o0.w, r2.w
  48: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: PIXELSNAP_ON POINT_COOKIE
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _Color at 128
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   6: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  10: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  13: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  14: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  15: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  16: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mul r1.xyzw, v7.xyzw, cb0[8].xyzw
  22: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  23: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  24: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  25: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  26: mad o5.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 5 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 2
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float       
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 5
   0: add r0.xyz, -v3.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   5: mul r2.xyzw, r1.xyzw, v4.xyzw
   6: mul r1.xyz, r2.wwww, r2.xyzx
   7: mad r0.w, r1.w, v4.w, -cb0[10].x
   8: lt r0.w, r0.w, l(0.000000)
   9: discard_nz r0.w
  10: mul r2.xyz, v3.yyyy, cb0[5].xyzx
  11: mad r2.xyz, cb0[4].xyzx, v3.xxxx, r2.xyzx
  12: mad r2.xyz, cb0[6].xyzx, v3.zzzz, r2.xyzx
  13: add r2.xyz, r2.xyzx, cb0[7].xyzx
  14: eq r0.w, cb2[0].x, l(1.000000)
  15: if_nz r0.w
  16:   eq r0.w, cb2[0].y, l(1.000000)
  17:   mul r3.xyz, v3.yyyy, cb2[2].xyzx
  18:   mad r3.xyz, cb2[1].xyzx, v3.xxxx, r3.xyzx
  19:   mad r3.xyz, cb2[3].xyzx, v3.zzzz, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  21:   movc r3.xyz, r0.wwww, r3.xyzx, v3.xyzx
  22:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  23:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  24:   mad r0.w, r3.y, l(0.250000), l(0.750000)
  25:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  26:   max r3.x, r0.w, r1.w
  27:   sample r3.xyzw, r3.xzwx, t3.xyzw, s0
  28: else 
  29:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  30: endif 
  31: dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
  32: dp3 r1.w, r2.xyzx, r2.xyzx
  33: sample r3.xyzw, r1.wwww, t1.xyzw, s2
  34: sample r4.xyzw, r2.xyzx, t2.xyzw, s1
  35: mul r1.w, r3.x, r4.w
  36: mul r0.w, r0.w, r1.w
  37: mul r2.xyz, r0.wwww, cb0[2].xyzx
  38: dp3 r0.x, v2.xyzx, r0.xyzx
  39: max r0.x, r0.x, l(0.000000)
  40: mul r0.yzw, r1.xxyz, r2.xxyz
  41: mul o0.xyz, r0.xxxx, r0.yzwy
  42: mov o0.w, r2.w
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL_COOKIE PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _Color at 128
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4     zw        1     NONE   float     zw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o1.zw
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   6: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  10: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  13: mul r1.xy, r0.yyyy, cb0[5].xyxx
  14: mad r1.xy, cb0[4].xyxx, r0.xxxx, r1.xyxx
  15: mad r1.xy, cb0[6].xyxx, r0.zzzz, r1.xyxx
  16: mad o1.zw, cb0[7].xxxy, r0.wwww, r1.xxxy
  17: mov o3.xyz, r0.xyzx
  18: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  19: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  20: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  21: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  22: dp3 r0.w, r0.xyzx, r0.xyzx
  23: rsq r0.w, r0.w
  24: mul o2.xyz, r0.wwww, r0.xyzx
  25: mul r0.xyzw, v7.xyzw, cb0[8].xyzw
  26: mul o4.xyzw, r0.xyzw, cb4[0].xyzw
  27: mov o5.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 26 math, 3 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4     zw        1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyzw, r0.xyzw, v4.xyzw
   2: mul r0.xyz, r1.wwww, r1.xyzx
   3: mad r0.w, r0.w, v4.w, -cb0[10].x
   4: lt r0.w, r0.w, l(0.000000)
   5: discard_nz r0.w
   6: mul r1.xy, v3.yyyy, cb0[5].xyxx
   7: mad r1.xy, cb0[4].xyxx, v3.xxxx, r1.xyxx
   8: mad r1.xy, cb0[6].xyxx, v3.zzzz, r1.xyxx
   9: add r1.xy, r1.xyxx, cb0[7].xyxx
  10: eq r0.w, cb2[0].x, l(1.000000)
  11: if_nz r0.w
  12:   eq r0.w, cb2[0].y, l(1.000000)
  13:   mul r2.xyz, v3.yyyy, cb2[2].xyzx
  14:   mad r2.xyz, cb2[1].xyzx, v3.xxxx, r2.xyzx
  15:   mad r2.xyz, cb2[3].xyzx, v3.zzzz, r2.xyzx
  16:   add r2.xyz, r2.xyzx, cb2[4].xyzx
  17:   movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
  18:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  19:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  20:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  21:   mad r1.z, cb2[0].z, l(0.500000), l(0.750000)
  22:   max r2.x, r0.w, r1.z
  23:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  24: else 
  25:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
  28: sample r2.xyzw, r1.xyxx, t1.xyzw, s1
  29: mul r0.w, r0.w, r2.w
  30: mul r1.xyz, r0.wwww, cb0[2].xyzx
  31: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  32: max r0.w, r0.w, l(0.000000)
  33: mul r0.xyz, r0.xyzx, r1.xyzx
  34: mul o0.xyz, r0.wwww, r0.xyzx
  35: mov o0.w, r1.w
  36: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA POINT
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _Color at 128
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb3[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
   2: mad r0.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
   6: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
   9: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  10: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r1.w, r1.xyzx, r1.xyzx
  14: rsq r1.w, r1.w
  15: mul o2.xyz, r1.wwww, r1.xyzx
  16: mov o3.xyz, r0.xyzx
  17: mul r1.xyzw, v7.xyzw, cb0[8].xyzw
  18: mul o4.xyzw, r1.xyzw, cb3[0].xyzw
  19: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  20: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  21: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  22: mad o5.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  23: mov o6.xyzw, l(0,0,0,0)
  24: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 33 math, 4 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float       
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, -v3.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   5: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
   6: add r0.w, -r1.w, r2.x
   7: mad r1.w, cb3[1].z, r0.w, r1.w
   8: mul r2.xyzw, r1.xyzw, v4.xyzw
   9: mul r1.xyz, r2.wwww, r2.xyzx
  10: mad r0.w, r1.w, v4.w, -cb0[10].x
  11: lt r0.w, r0.w, l(0.000000)
  12: discard_nz r0.w
  13: mul r2.xyz, v3.yyyy, cb0[5].xyzx
  14: mad r2.xyz, cb0[4].xyzx, v3.xxxx, r2.xyzx
  15: mad r2.xyz, cb0[6].xyzx, v3.zzzz, r2.xyzx
  16: add r2.xyz, r2.xyzx, cb0[7].xyzx
  17: eq r0.w, cb2[0].x, l(1.000000)
  18: if_nz r0.w
  19:   eq r0.w, cb2[0].y, l(1.000000)
  20:   mul r3.xyz, v3.yyyy, cb2[2].xyzx
  21:   mad r3.xyz, cb2[1].xyzx, v3.xxxx, r3.xyzx
  22:   mad r3.xyz, cb2[3].xyzx, v3.zzzz, r3.xyzx
  23:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  24:   movc r3.xyz, r0.wwww, r3.xyzx, v3.xyzx
  25:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  26:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  27:   mad r0.w, r3.y, l(0.250000), l(0.750000)
  28:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r3.x, r0.w, r1.w
  30:   sample r3.xyzw, r3.xzwx, t3.xyzw, s0
  31: else 
  32:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
  35: dp3 r1.w, r2.xyzx, r2.xyzx
  36: sample r3.xyzw, r1.wwww, t2.xyzw, s1
  37: mul r0.w, r0.w, r3.x
  38: mul r2.xyz, r0.wwww, cb0[2].xyzx
  39: dp3 r0.x, v2.xyzx, r0.xyzx
  40: max r0.x, r0.x, l(0.000000)
  41: mul r0.yzw, r1.xxyz, r2.xxyz
  42: mul o0.xyz, r0.xxxx, r0.yzwy
  43: mov o0.w, r2.w
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 18 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb3[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
   2: mad r0.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
   6: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  12: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  13: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  18: mul o4.xyzw, r0.xyzw, cb3[0].xyzw
  19: mov o5.xyzw, l(0,0,0,0)
  20: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 23 math, 3 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   2: add r1.x, -r0.w, r1.x
   3: mad r0.w, cb3[1].z, r1.x, r0.w
   4: mul r1.xyzw, r0.xyzw, v4.xyzw
   5: mul r0.xyz, r1.wwww, r1.xyzx
   6: mad r0.w, r0.w, v4.w, -cb0[6].x
   7: lt r0.w, r0.w, l(0.000000)
   8: discard_nz r0.w
   9: eq r0.w, cb2[0].x, l(1.000000)
  10: if_nz r0.w
  11:   eq r0.w, cb2[0].y, l(1.000000)
  12:   mul r1.xyz, v3.yyyy, cb2[2].xyzx
  13:   mad r1.xyz, cb2[1].xyzx, v3.xxxx, r1.xyzx
  14:   mad r1.xyz, cb2[3].xyzx, v3.zzzz, r1.xyzx
  15:   add r1.xyz, r1.xyzx, cb2[4].xyzx
  16:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  17:   add r1.xyz, r1.xyzx, -cb2[6].xyzx
  18:   mul r2.yzw, r1.xxyz, cb2[5].xxyz
  19:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  20:   mad r1.x, cb2[0].z, l(0.500000), l(0.750000)
  21:   max r2.x, r0.w, r1.x
  22:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  23: else 
  24:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  25: endif 
  26: dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
  27: mul r1.xyz, r0.wwww, cb0[2].xyzx
  28: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  29: max r0.w, r0.w, l(0.000000)
  30: mul r0.xyz, r0.xyzx, r1.xyzx
  31: mul o0.xyz, r0.wwww, r0.xyzx
  32: mov o0.w, r1.w
  33: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA SPOT
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _Color at 128
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb3[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
   2: mad r0.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
   6: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
   9: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  10: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r1.w, r1.xyzx, r1.xyzx
  14: rsq r1.w, r1.w
  15: mul o2.xyz, r1.wwww, r1.xyzx
  16: mov o3.xyz, r0.xyzx
  17: mul r1.xyzw, v7.xyzw, cb0[8].xyzw
  18: mul o4.xyzw, r1.xyzw, cb3[0].xyzw
  19: mul r1.xyzw, r0.yyyy, cb0[5].xyzw
  20: mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
  21: mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
  22: mad o5.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
  23: mov o6.xyzw, l(0,0,0,0)
  24: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 39 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 4
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 5
   0: add r0.xyz, -v3.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   5: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
   6: add r0.w, -r1.w, r2.x
   7: mad r1.w, cb3[1].z, r0.w, r1.w
   8: mul r2.xyzw, r1.xyzw, v4.xyzw
   9: mul r1.xyz, r2.wwww, r2.xyzx
  10: mad r0.w, r1.w, v4.w, -cb0[10].x
  11: lt r0.w, r0.w, l(0.000000)
  12: discard_nz r0.w
  13: mul r3.xyzw, v3.yyyy, cb0[5].xyzw
  14: mad r3.xyzw, cb0[4].xyzw, v3.xxxx, r3.xyzw
  15: mad r3.xyzw, cb0[6].xyzw, v3.zzzz, r3.xyzw
  16: add r3.xyzw, r3.xyzw, cb0[7].xyzw
  17: eq r0.w, cb2[0].x, l(1.000000)
  18: if_nz r0.w
  19:   eq r0.w, cb2[0].y, l(1.000000)
  20:   mul r2.xyz, v3.yyyy, cb2[2].xyzx
  21:   mad r2.xyz, cb2[1].xyzx, v3.xxxx, r2.xyzx
  22:   mad r2.xyz, cb2[3].xyzx, v3.zzzz, r2.xyzx
  23:   add r2.xyz, r2.xyzx, cb2[4].xyzx
  24:   movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
  25:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  26:   mul r4.yzw, r2.xxyz, cb2[5].xxyz
  27:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  28:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r4.x, r0.w, r1.w
  30:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  31: else 
  32:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
  35: lt r1.w, l(0.000000), r3.z
  36: and r1.w, r1.w, l(0x3f800000)
  37: div r2.xy, r3.xyxx, r3.wwww
  38: add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  39: sample r4.xyzw, r2.xyxx, t2.xyzw, s1
  40: mul r1.w, r1.w, r4.w
  41: dp3 r2.x, r3.xyzx, r3.xyzx
  42: sample r3.xyzw, r2.xxxx, t3.xyzw, s2
  43: mul r1.w, r1.w, r3.x
  44: mul r0.w, r0.w, r1.w
  45: mul r2.xyz, r0.wwww, cb0[2].xyzx
  46: dp3 r0.x, v2.xyzx, r0.xyzx
  47: max r0.x, r0.x, l(0.000000)
  48: mul r0.yzw, r1.xxyz, r2.xxyz
  49: mul o0.xyz, r0.xxxx, r0.yzwy
  50: mov o0.w, r2.w
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA POINT_COOKIE
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _Color at 128
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb3[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
   2: mad r0.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
   6: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
   9: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  10: dp3 r1.x, v2.xyzx, cb1[4].xyzx
  11: dp3 r1.y, v2.xyzx, cb1[5].xyzx
  12: dp3 r1.z, v2.xyzx, cb1[6].xyzx
  13: dp3 r1.w, r1.xyzx, r1.xyzx
  14: rsq r1.w, r1.w
  15: mul o2.xyz, r1.wwww, r1.xyzx
  16: mov o3.xyz, r0.xyzx
  17: mul r1.xyzw, v7.xyzw, cb0[8].xyzw
  18: mul o4.xyzw, r1.xyzw, cb3[0].xyzw
  19: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  20: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  21: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  22: mad o5.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  23: mov o6.xyzw, l(0,0,0,0)
  24: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 34 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 2
Set CUBE Texture "_LightTexture0" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float       
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 5
   0: add r0.xyz, -v3.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   5: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
   6: add r0.w, -r1.w, r2.x
   7: mad r1.w, cb3[1].z, r0.w, r1.w
   8: mul r2.xyzw, r1.xyzw, v4.xyzw
   9: mul r1.xyz, r2.wwww, r2.xyzx
  10: mad r0.w, r1.w, v4.w, -cb0[10].x
  11: lt r0.w, r0.w, l(0.000000)
  12: discard_nz r0.w
  13: mul r2.xyz, v3.yyyy, cb0[5].xyzx
  14: mad r2.xyz, cb0[4].xyzx, v3.xxxx, r2.xyzx
  15: mad r2.xyz, cb0[6].xyzx, v3.zzzz, r2.xyzx
  16: add r2.xyz, r2.xyzx, cb0[7].xyzx
  17: eq r0.w, cb2[0].x, l(1.000000)
  18: if_nz r0.w
  19:   eq r0.w, cb2[0].y, l(1.000000)
  20:   mul r3.xyz, v3.yyyy, cb2[2].xyzx
  21:   mad r3.xyz, cb2[1].xyzx, v3.xxxx, r3.xyzx
  22:   mad r3.xyz, cb2[3].xyzx, v3.zzzz, r3.xyzx
  23:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  24:   movc r3.xyz, r0.wwww, r3.xyzx, v3.xyzx
  25:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  26:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  27:   mad r0.w, r3.y, l(0.250000), l(0.750000)
  28:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r3.x, r0.w, r1.w
  30:   sample r3.xyzw, r3.xzwx, t4.xyzw, s0
  31: else 
  32:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
  35: dp3 r1.w, r2.xyzx, r2.xyzx
  36: sample r3.xyzw, r1.wwww, t2.xyzw, s2
  37: sample r4.xyzw, r2.xyzx, t3.xyzw, s1
  38: mul r1.w, r3.x, r4.w
  39: mul r0.w, r0.w, r1.w
  40: mul r2.xyz, r0.wwww, cb0[2].xyzx
  41: dp3 r0.x, v2.xyzx, r0.xyzx
  42: max r0.x, r0.x, l(0.000000)
  43: mul r0.yzw, r1.xxyz, r2.xxyz
  44: mul o0.xyz, r0.xxxx, r0.yzwy
  45: mov o0.w, r2.w
  46: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL_COOKIE ETC1_EXTERNAL_ALPHA
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _Color at 128
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4     zw        1     NONE   float     zw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o1.zw
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb3[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
   2: mad r0.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
   6: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
   9: mul r1.xy, r0.yyyy, cb0[5].xyxx
  10: mad r1.xy, cb0[4].xyxx, r0.xxxx, r1.xyxx
  11: mad r1.xy, cb0[6].xyxx, r0.zzzz, r1.xyxx
  12: mad o1.zw, cb0[7].xxxy, r0.wwww, r1.xxxy
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  15: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul o2.xyz, r0.wwww, r0.xyzx
  21: mul r0.xyzw, v7.xyzw, cb0[8].xyzw
  22: mul o4.xyzw, r0.xyzw, cb3[0].xyzw
  23: mov o5.xyzw, l(0,0,0,0)
  24: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 28 math, 3 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4     zw        1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t1.xyzw, s3
   2: add r1.x, -r0.w, r1.x
   3: mad r0.w, cb3[1].z, r1.x, r0.w
   4: mul r1.xyzw, r0.xyzw, v4.xyzw
   5: mul r0.xyz, r1.wwww, r1.xyzx
   6: mad r0.w, r0.w, v4.w, -cb0[10].x
   7: lt r0.w, r0.w, l(0.000000)
   8: discard_nz r0.w
   9: mul r1.xy, v3.yyyy, cb0[5].xyxx
  10: mad r1.xy, cb0[4].xyxx, v3.xxxx, r1.xyxx
  11: mad r1.xy, cb0[6].xyxx, v3.zzzz, r1.xyxx
  12: add r1.xy, r1.xyxx, cb0[7].xyxx
  13: eq r0.w, cb2[0].x, l(1.000000)
  14: if_nz r0.w
  15:   eq r0.w, cb2[0].y, l(1.000000)
  16:   mul r2.xyz, v3.yyyy, cb2[2].xyzx
  17:   mad r2.xyz, cb2[1].xyzx, v3.xxxx, r2.xyzx
  18:   mad r2.xyz, cb2[3].xyzx, v3.zzzz, r2.xyzx
  19:   add r2.xyz, r2.xyzx, cb2[4].xyzx
  20:   movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
  21:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  22:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  23:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  24:   mad r1.z, cb2[0].z, l(0.500000), l(0.750000)
  25:   max r2.x, r0.w, r1.z
  26:   sample r2.xyzw, r2.xzwx, t3.xyzw, s0
  27: else 
  28:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  29: endif 
  30: dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
  31: sample r2.xyzw, r1.xyxx, t2.xyzw, s1
  32: mul r0.w, r0.w, r2.w
  33: mul r1.xyz, r0.wwww, cb0[2].xyzx
  34: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  35: max r0.w, r0.w, l(0.000000)
  36: mul r0.xyz, r0.xyzx, r1.xyzx
  37: mul o0.xyz, r0.wwww, r0.xyzx
  38: mov o0.w, r1.w
  39: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA PIXELSNAP_ON POINT
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _Color at 128
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   6: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  10: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  13: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  14: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  15: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  16: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mul r1.xyzw, v7.xyzw, cb0[8].xyzw
  22: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  23: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  24: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  25: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  26: mad o5.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 33 math, 4 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float       
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 4
   0: add r0.xyz, -v3.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   5: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
   6: add r0.w, -r1.w, r2.x
   7: mad r1.w, cb3[1].z, r0.w, r1.w
   8: mul r2.xyzw, r1.xyzw, v4.xyzw
   9: mul r1.xyz, r2.wwww, r2.xyzx
  10: mad r0.w, r1.w, v4.w, -cb0[10].x
  11: lt r0.w, r0.w, l(0.000000)
  12: discard_nz r0.w
  13: mul r2.xyz, v3.yyyy, cb0[5].xyzx
  14: mad r2.xyz, cb0[4].xyzx, v3.xxxx, r2.xyzx
  15: mad r2.xyz, cb0[6].xyzx, v3.zzzz, r2.xyzx
  16: add r2.xyz, r2.xyzx, cb0[7].xyzx
  17: eq r0.w, cb2[0].x, l(1.000000)
  18: if_nz r0.w
  19:   eq r0.w, cb2[0].y, l(1.000000)
  20:   mul r3.xyz, v3.yyyy, cb2[2].xyzx
  21:   mad r3.xyz, cb2[1].xyzx, v3.xxxx, r3.xyzx
  22:   mad r3.xyz, cb2[3].xyzx, v3.zzzz, r3.xyzx
  23:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  24:   movc r3.xyz, r0.wwww, r3.xyzx, v3.xyzx
  25:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  26:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  27:   mad r0.w, r3.y, l(0.250000), l(0.750000)
  28:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r3.x, r0.w, r1.w
  30:   sample r3.xyzw, r3.xzwx, t3.xyzw, s0
  31: else 
  32:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
  35: dp3 r1.w, r2.xyzx, r2.xyzx
  36: sample r3.xyzw, r1.wwww, t2.xyzw, s1
  37: mul r0.w, r0.w, r3.x
  38: mul r2.xyz, r0.wwww, cb0[2].xyzx
  39: dp3 r0.x, v2.xyzx, r0.xyzx
  40: max r0.x, r0.x, l(0.000000)
  41: mul r0.yzw, r1.xxyz, r2.xxyz
  42: mul o0.xyz, r0.xxxx, r0.yzwy
  43: mov o0.w, r2.w
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL ETC1_EXTERNAL_ALPHA PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   6: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  10: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul o2.xyz, r0.wwww, r0.xyzx
  21: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  22: mul o4.xyzw, r0.xyzw, cb4[0].xyzw
  23: mov o5.xyzw, l(0,0,0,0)
  24: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 23 math, 3 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   2: add r1.x, -r0.w, r1.x
   3: mad r0.w, cb3[1].z, r1.x, r0.w
   4: mul r1.xyzw, r0.xyzw, v4.xyzw
   5: mul r0.xyz, r1.wwww, r1.xyzx
   6: mad r0.w, r0.w, v4.w, -cb0[6].x
   7: lt r0.w, r0.w, l(0.000000)
   8: discard_nz r0.w
   9: eq r0.w, cb2[0].x, l(1.000000)
  10: if_nz r0.w
  11:   eq r0.w, cb2[0].y, l(1.000000)
  12:   mul r1.xyz, v3.yyyy, cb2[2].xyzx
  13:   mad r1.xyz, cb2[1].xyzx, v3.xxxx, r1.xyzx
  14:   mad r1.xyz, cb2[3].xyzx, v3.zzzz, r1.xyzx
  15:   add r1.xyz, r1.xyzx, cb2[4].xyzx
  16:   movc r1.xyz, r0.wwww, r1.xyzx, v3.xyzx
  17:   add r1.xyz, r1.xyzx, -cb2[6].xyzx
  18:   mul r2.yzw, r1.xxyz, cb2[5].xxyz
  19:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  20:   mad r1.x, cb2[0].z, l(0.500000), l(0.750000)
  21:   max r2.x, r0.w, r1.x
  22:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  23: else 
  24:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  25: endif 
  26: dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
  27: mul r1.xyz, r0.wwww, cb0[2].xyzx
  28: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  29: max r0.w, r0.w, l(0.000000)
  30: mul r0.xyz, r0.xyzx, r1.xyzx
  31: mul o0.xyz, r0.wwww, r0.xyzx
  32: mov o0.w, r1.w
  33: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA PIXELSNAP_ON SPOT
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _Color at 128
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   6: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  10: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  13: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  14: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  15: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  16: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mul r1.xyzw, v7.xyzw, cb0[8].xyzw
  22: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  23: mul r1.xyzw, r0.yyyy, cb0[5].xyzw
  24: mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
  25: mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
  26: mad o5.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 39 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 4
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 5
   0: add r0.xyz, -v3.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   5: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
   6: add r0.w, -r1.w, r2.x
   7: mad r1.w, cb3[1].z, r0.w, r1.w
   8: mul r2.xyzw, r1.xyzw, v4.xyzw
   9: mul r1.xyz, r2.wwww, r2.xyzx
  10: mad r0.w, r1.w, v4.w, -cb0[10].x
  11: lt r0.w, r0.w, l(0.000000)
  12: discard_nz r0.w
  13: mul r3.xyzw, v3.yyyy, cb0[5].xyzw
  14: mad r3.xyzw, cb0[4].xyzw, v3.xxxx, r3.xyzw
  15: mad r3.xyzw, cb0[6].xyzw, v3.zzzz, r3.xyzw
  16: add r3.xyzw, r3.xyzw, cb0[7].xyzw
  17: eq r0.w, cb2[0].x, l(1.000000)
  18: if_nz r0.w
  19:   eq r0.w, cb2[0].y, l(1.000000)
  20:   mul r2.xyz, v3.yyyy, cb2[2].xyzx
  21:   mad r2.xyz, cb2[1].xyzx, v3.xxxx, r2.xyzx
  22:   mad r2.xyz, cb2[3].xyzx, v3.zzzz, r2.xyzx
  23:   add r2.xyz, r2.xyzx, cb2[4].xyzx
  24:   movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
  25:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  26:   mul r4.yzw, r2.xxyz, cb2[5].xxyz
  27:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  28:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r4.x, r0.w, r1.w
  30:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  31: else 
  32:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
  35: lt r1.w, l(0.000000), r3.z
  36: and r1.w, r1.w, l(0x3f800000)
  37: div r2.xy, r3.xyxx, r3.wwww
  38: add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  39: sample r4.xyzw, r2.xyxx, t2.xyzw, s1
  40: mul r1.w, r1.w, r4.w
  41: dp3 r2.x, r3.xyzx, r3.xyzx
  42: sample r3.xyzw, r2.xxxx, t3.xyzw, s2
  43: mul r1.w, r1.w, r3.x
  44: mul r0.w, r0.w, r1.w
  45: mul r2.xyz, r0.wwww, cb0[2].xyzx
  46: dp3 r0.x, v2.xyzx, r0.xyzx
  47: max r0.x, r0.x, l(0.000000)
  48: mul r0.yzw, r1.xxyz, r2.xxyz
  49: mul o0.xyz, r0.xxxx, r0.yzwy
  50: mov o0.w, r2.w
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA PIXELSNAP_ON POINT_COOKIE
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _Color at 128
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   6: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  10: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  13: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  14: dp3 r1.x, v2.xyzx, cb2[4].xyzx
  15: dp3 r1.y, v2.xyzx, cb2[5].xyzx
  16: dp3 r1.z, v2.xyzx, cb2[6].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mul r1.xyzw, v7.xyzw, cb0[8].xyzw
  22: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  23: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  24: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  25: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  26: mad o5.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 34 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 2
Set CUBE Texture "_LightTexture0" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float       
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 5
   0: add r0.xyz, -v3.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   5: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
   6: add r0.w, -r1.w, r2.x
   7: mad r1.w, cb3[1].z, r0.w, r1.w
   8: mul r2.xyzw, r1.xyzw, v4.xyzw
   9: mul r1.xyz, r2.wwww, r2.xyzx
  10: mad r0.w, r1.w, v4.w, -cb0[10].x
  11: lt r0.w, r0.w, l(0.000000)
  12: discard_nz r0.w
  13: mul r2.xyz, v3.yyyy, cb0[5].xyzx
  14: mad r2.xyz, cb0[4].xyzx, v3.xxxx, r2.xyzx
  15: mad r2.xyz, cb0[6].xyzx, v3.zzzz, r2.xyzx
  16: add r2.xyz, r2.xyzx, cb0[7].xyzx
  17: eq r0.w, cb2[0].x, l(1.000000)
  18: if_nz r0.w
  19:   eq r0.w, cb2[0].y, l(1.000000)
  20:   mul r3.xyz, v3.yyyy, cb2[2].xyzx
  21:   mad r3.xyz, cb2[1].xyzx, v3.xxxx, r3.xyzx
  22:   mad r3.xyz, cb2[3].xyzx, v3.zzzz, r3.xyzx
  23:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  24:   movc r3.xyz, r0.wwww, r3.xyzx, v3.xyzx
  25:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  26:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  27:   mad r0.w, r3.y, l(0.250000), l(0.750000)
  28:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r3.x, r0.w, r1.w
  30:   sample r3.xyzw, r3.xzwx, t4.xyzw, s0
  31: else 
  32:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r0.w, r3.xyzw, cb1[46].xyzw
  35: dp3 r1.w, r2.xyzx, r2.xyzx
  36: sample r3.xyzw, r1.wwww, t2.xyzw, s2
  37: sample r4.xyzw, r2.xyzx, t3.xyzw, s1
  38: mul r1.w, r3.x, r4.w
  39: mul r0.w, r0.w, r1.w
  40: mul r2.xyz, r0.wwww, cb0[2].xyzx
  41: dp3 r0.x, v2.xyzx, r0.xyzx
  42: max r0.x, r0.x, l(0.000000)
  43: mul r0.yzw, r1.xxyz, r2.xxyz
  44: mul o0.xyz, r0.xxxx, r0.yzwy
  45: mov o0.w, r2.w
  46: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: DIRECTIONAL_COOKIE ETC1_EXTERNAL_ALPHA PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _Color at 128
  Vector4 _MainTex_ST at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4     zw        1     NONE   float     zw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o1.zw
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   6: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  10: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  13: mul r1.xy, r0.yyyy, cb0[5].xyxx
  14: mad r1.xy, cb0[4].xyxx, r0.xxxx, r1.xyxx
  15: mad r1.xy, cb0[6].xyxx, r0.zzzz, r1.xyxx
  16: mad o1.zw, cb0[7].xxxy, r0.wwww, r1.xxxy
  17: mov o3.xyz, r0.xyzx
  18: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  19: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  20: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  21: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  22: dp3 r0.w, r0.xyzx, r0.xyzx
  23: rsq r0.w, r0.w
  24: mul o2.xyz, r0.wwww, r0.xyzx
  25: mul r0.xyzw, v7.xyzw, cb0[8].xyzw
  26: mul o4.xyzw, r0.xyzw, cb4[0].xyzw
  27: mov o5.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 28 math, 3 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_AlphaTex" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Float _NarutoIsOverrated at 160
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4     zw        1     NONE   float       
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t1.xyzw, s3
   2: add r1.x, -r0.w, r1.x
   3: mad r0.w, cb3[1].z, r1.x, r0.w
   4: mul r1.xyzw, r0.xyzw, v4.xyzw
   5: mul r0.xyz, r1.wwww, r1.xyzx
   6: mad r0.w, r0.w, v4.w, -cb0[10].x
   7: lt r0.w, r0.w, l(0.000000)
   8: discard_nz r0.w
   9: mul r1.xy, v3.yyyy, cb0[5].xyxx
  10: mad r1.xy, cb0[4].xyxx, v3.xxxx, r1.xyxx
  11: mad r1.xy, cb0[6].xyxx, v3.zzzz, r1.xyxx
  12: add r1.xy, r1.xyxx, cb0[7].xyxx
  13: eq r0.w, cb2[0].x, l(1.000000)
  14: if_nz r0.w
  15:   eq r0.w, cb2[0].y, l(1.000000)
  16:   mul r2.xyz, v3.yyyy, cb2[2].xyzx
  17:   mad r2.xyz, cb2[1].xyzx, v3.xxxx, r2.xyzx
  18:   mad r2.xyz, cb2[3].xyzx, v3.zzzz, r2.xyzx
  19:   add r2.xyz, r2.xyzx, cb2[4].xyzx
  20:   movc r2.xyz, r0.wwww, r2.xyzx, v3.xyzx
  21:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  22:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  23:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  24:   mad r1.z, cb2[0].z, l(0.500000), l(0.750000)
  25:   max r2.x, r0.w, r1.z
  26:   sample r2.xyzw, r2.xzwx, t3.xyzw, s0
  27: else 
  28:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  29: endif 
  30: dp4_sat r0.w, r2.xyzw, cb1[46].xyzw
  31: sample r2.xyzw, r1.xyxx, t2.xyzw, s1
  32: mul r0.w, r0.w, r2.w
  33: mul r1.xyz, r0.wwww, cb0[2].xyzx
  34: dp3 r0.w, v2.xyzx, cb1[0].xyzx
  35: max r0.w, r0.w, l(0.000000)
  36: mul r0.xyz, r0.xyzx, r1.xyzx
  37: mul o0.xyz, r0.wwww, r0.xyzx
  38: mov o0.w, r1.w
  39: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 20 avg math (18..22)
 // Stats for Fragment shader:
 //        d3d11: 4 avg math (3..5), 1 avg texture (1..2)
 Pass {
  Name "PREPASS"
  Tags { "LIGHTMODE"="PREPASSBASE" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" "CanUseSpriteAtlas"="true" "PreviewType"="Plane" }
  ZWrite Off
  Cull Off
  Blend One OneMinusSrcAlpha
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 18 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb3[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
   2: mad r0.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
   6: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  12: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  13: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  18: mul o4.xyzw, r0.xyzw, cb3[0].xyzw
  19: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 3 math, 1 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Float _NarutoIsOverrated at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.w
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.x, r0.w, v4.w, -cb0[6].x
   2: lt r0.x, r0.x, l(0.000000)
   3: discard_nz r0.x
   4: mad o0.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mov o0.w, l(0)
   6: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   6: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  10: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul o2.xyz, r0.wwww, r0.xyzx
  21: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  22: mul o4.xyzw, r0.xyzw, cb4[0].xyzw
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 3 math, 1 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Float _NarutoIsOverrated at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.w
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.x, r0.w, v4.w, -cb0[6].x
   2: lt r0.x, r0.x, l(0.000000)
   3: discard_nz r0.x
   4: mad o0.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
   5: mov o0.w, l(0)
   6: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 18 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 3 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb3[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
   2: mad r0.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
   6: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r0.x, v2.xyzx, cb1[4].xyzx
  12: dp3 r0.y, v2.xyzx, cb1[5].xyzx
  13: dp3 r0.z, v2.xyzx, cb1[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r0.xyzx
  17: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  18: mul o4.xyzw, r0.xyzw, cb3[0].xyzw
  19: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 5 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.w
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r0.x, cb1[1].z, r0.x, r1.w
   4: mad r0.x, r0.x, v4.w, -cb0[6].x
   5: lt r0.x, r0.x, l(0.000000)
   6: discard_nz r0.x
   7: mad o0.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
   8: mov o0.w, l(0)
   9: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   6: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  10: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul o2.xyz, r0.wwww, r0.xyzx
  21: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  22: mul o4.xyzw, r0.xyzw, cb4[0].xyzw
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 5 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.w
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r0.x, cb1[1].z, r0.x, r1.w
   4: mad r0.x, r0.x, v4.w, -cb0[6].x
   5: lt r0.x, r0.x, l(0.000000)
   6: discard_nz r0.x
   7: mad o0.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
   8: mov o0.w, l(0)
   9: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 35 avg math (33..37)
 // Stats for Fragment shader:
 //        d3d11: 8 avg math (7..10), 2 avg texture (2..3)
 Pass {
  Name "PREPASS"
  Tags { "LIGHTMODE"="PREPASSFINAL" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" "CanUseSpriteAtlas"="true" "PreviewType"="Plane" }
  ZWrite Off
  Cull Off
  Blend One OneMinusSrcAlpha
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   2: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   6: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   9: mov o2.xyz, r0.xyzx
  10: mov o0.xyzw, r1.xyzw
  11: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  12: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  13: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  14: mul r0.x, r1.y, cb1[5].x
  15: mul r0.w, r0.x, l(0.500000)
  16: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  17: mov o4.zw, r1.zzzw
  18: add o4.xy, r0.zzzz, r0.xwxx
  19: mov o5.xyzw, l(0,0,0,0)
  20: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  21: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  22: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  23: dp3 r0.w, r0.xyzx, r0.xyzx
  24: rsq r0.w, r0.w
  25: mul r0.xyz, r0.wwww, r0.xyzx
  26: mul r1.x, r0.y, r0.y
  27: mad r1.x, r0.x, r0.x, -r1.x
  28: mul r2.xyzw, r0.yzzx, r0.xyzz
  29: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  30: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  31: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  32: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  33: mov r0.w, l(1.000000)
  34: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  35: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  36: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  37: add o6.xyz, r1.xyzx, r2.xyzx
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 8 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightBuffer" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r1.x, r0.w, v3.w, -cb0[7].x
   2: mul r0.xyzw, r0.xyzw, v3.xyzw
   3: lt r1.x, r1.x, l(0.000000)
   4: discard_nz r1.x
   5: div r1.xy, v4.xyxx, v4.wwww
   6: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
   7: log r1.xyz, r1.xyzx
   8: add r1.xyz, -r1.xyzx, v6.xyzx
   9: mul r0.xyz, r0.wwww, r0.xyzx
  10: mov o0.w, r0.w
  11: mul o0.xyz, r1.xyzx, r0.xyzx
  12: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: LIGHTPROBE_SH
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   2: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   6: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   9: mov o2.xyz, r0.xyzx
  10: mov o0.xyzw, r1.xyzw
  11: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  12: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  13: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  14: mul r0.x, r1.y, cb1[5].x
  15: mul r0.w, r0.x, l(0.500000)
  16: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  17: mov o4.zw, r1.zzzw
  18: add o4.xy, r0.zzzz, r0.xwxx
  19: mov o5.xyzw, l(0,0,0,0)
  20: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  21: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  22: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  23: dp3 r0.w, r0.xyzx, r0.xyzx
  24: rsq r0.w, r0.w
  25: mul r0.xyz, r0.wwww, r0.xyzx
  26: mul r1.x, r0.y, r0.y
  27: mad r1.x, r0.x, r0.x, -r1.x
  28: mul r2.xyzw, r0.yzzx, r0.xyzz
  29: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  30: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  31: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  32: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  33: mov r0.w, l(1.000000)
  34: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  35: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  36: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  37: add o6.xyz, r1.xyzx, r2.xyzx
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 8 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightBuffer" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r1.x, r0.w, v3.w, -cb0[7].x
   2: mul r0.xyzw, r0.xyzw, v3.xyzw
   3: lt r1.x, r1.x, l(0.000000)
   4: discard_nz r1.x
   5: div r1.xy, v4.xyxx, v4.wwww
   6: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
   7: log r1.xyz, r1.xyzx
   8: add r1.xyz, -r1.xyzx, v6.xyzx
   9: mul r0.xyz, r0.wwww, r0.xyzx
  10: mov o0.w, r0.w
  11: mul o0.xyz, r1.xyzx, r0.xyzx
  12: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   2: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   6: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   9: mov o2.xyz, r0.xyzx
  10: mov o0.xyzw, r1.xyzw
  11: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  12: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  13: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  14: mul r0.x, r1.y, cb1[5].x
  15: mul r0.w, r0.x, l(0.500000)
  16: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  17: mov o4.zw, r1.zzzw
  18: add o4.xy, r0.zzzz, r0.xwxx
  19: mov o5.xyzw, l(0,0,0,0)
  20: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  21: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  22: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  23: dp3 r0.w, r0.xyzx, r0.xyzx
  24: rsq r0.w, r0.w
  25: mul r0.xyz, r0.wwww, r0.xyzx
  26: mul r1.x, r0.y, r0.y
  27: mad r1.x, r0.x, r0.x, -r1.x
  28: mul r2.xyzw, r0.yzzx, r0.xyzz
  29: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  30: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  31: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  32: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  33: mov r0.w, l(1.000000)
  34: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  35: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  36: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  37: add o6.xyz, r1.xyzx, r2.xyzx
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 7 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightBuffer" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r1.x, r0.w, v3.w, -cb0[7].x
   2: mul r0.xyzw, r0.xyzw, v3.xyzw
   3: lt r1.x, r1.x, l(0.000000)
   4: discard_nz r1.x
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mov o0.w, r0.w
   7: div r1.xy, v4.xyxx, v4.wwww
   8: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
   9: add r1.xyz, r1.xyzx, v6.xyzx
  10: mul o0.xyz, r0.xyzx, r1.xyzx
  11: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: LIGHTPROBE_SH UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   2: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   6: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   9: mov o2.xyz, r0.xyzx
  10: mov o0.xyzw, r1.xyzw
  11: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  12: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  13: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  14: mul r0.x, r1.y, cb1[5].x
  15: mul r0.w, r0.x, l(0.500000)
  16: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  17: mov o4.zw, r1.zzzw
  18: add o4.xy, r0.zzzz, r0.xwxx
  19: mov o5.xyzw, l(0,0,0,0)
  20: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  21: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  22: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  23: dp3 r0.w, r0.xyzx, r0.xyzx
  24: rsq r0.w, r0.w
  25: mul r0.xyz, r0.wwww, r0.xyzx
  26: mul r1.x, r0.y, r0.y
  27: mad r1.x, r0.x, r0.x, -r1.x
  28: mul r2.xyzw, r0.yzzx, r0.xyzz
  29: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  30: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  31: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  32: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  33: mov r0.w, l(1.000000)
  34: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  35: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  36: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  37: add o6.xyz, r1.xyzx, r2.xyzx
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 7 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightBuffer" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r1.x, r0.w, v3.w, -cb0[7].x
   2: mul r0.xyzw, r0.xyzw, v3.xyzw
   3: lt r1.x, r1.x, l(0.000000)
   4: discard_nz r1.x
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mov o0.w, r0.w
   7: div r1.xy, v4.xyxx, v4.wwww
   8: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
   9: add r1.xyz, r1.xyzx, v6.xyzx
  10: mul o0.xyz, r0.xyzx, r1.xyzx
  11: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 37 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o2.xyz, r0.xyzx
  14: mov o0.xyzw, r1.xyzw
  15: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  16: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  17: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  18: mul r0.x, r1.y, cb1[5].x
  19: mul r0.w, r0.x, l(0.500000)
  20: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  21: mov o4.zw, r1.zzzw
  22: add o4.xy, r0.zzzz, r0.xwxx
  23: mov o5.xyzw, l(0,0,0,0)
  24: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  25: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  26: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mul r1.x, r0.y, r0.y
  31: mad r1.x, r0.x, r0.x, -r1.x
  32: mul r2.xyzw, r0.yzzx, r0.xyzz
  33: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  34: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  35: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  36: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  37: mov r0.w, l(1.000000)
  38: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  39: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  40: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  41: add o6.xyz, r1.xyzx, r2.xyzx
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 8 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightBuffer" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r1.x, r0.w, v3.w, -cb0[7].x
   2: mul r0.xyzw, r0.xyzw, v3.xyzw
   3: lt r1.x, r1.x, l(0.000000)
   4: discard_nz r1.x
   5: div r1.xy, v4.xyxx, v4.wwww
   6: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
   7: log r1.xyz, r1.xyzx
   8: add r1.xyz, -r1.xyzx, v6.xyzx
   9: mul r0.xyz, r0.wwww, r0.xyzx
  10: mov o0.w, r0.w
  11: mul o0.xyz, r1.xyzx, r0.xyzx
  12: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: LIGHTPROBE_SH PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 37 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o2.xyz, r0.xyzx
  14: mov o0.xyzw, r1.xyzw
  15: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  16: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  17: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  18: mul r0.x, r1.y, cb1[5].x
  19: mul r0.w, r0.x, l(0.500000)
  20: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  21: mov o4.zw, r1.zzzw
  22: add o4.xy, r0.zzzz, r0.xwxx
  23: mov o5.xyzw, l(0,0,0,0)
  24: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  25: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  26: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mul r1.x, r0.y, r0.y
  31: mad r1.x, r0.x, r0.x, -r1.x
  32: mul r2.xyzw, r0.yzzx, r0.xyzz
  33: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  34: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  35: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  36: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  37: mov r0.w, l(1.000000)
  38: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  39: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  40: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  41: add o6.xyz, r1.xyzx, r2.xyzx
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 8 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightBuffer" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r1.x, r0.w, v3.w, -cb0[7].x
   2: mul r0.xyzw, r0.xyzw, v3.xyzw
   3: lt r1.x, r1.x, l(0.000000)
   4: discard_nz r1.x
   5: div r1.xy, v4.xyxx, v4.wwww
   6: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
   7: log r1.xyz, r1.xyzx
   8: add r1.xyz, -r1.xyzx, v6.xyzx
   9: mul r0.xyz, r0.wwww, r0.xyzx
  10: mov o0.w, r0.w
  11: mul o0.xyz, r1.xyzx, r0.xyzx
  12: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: PIXELSNAP_ON UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 37 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o2.xyz, r0.xyzx
  14: mov o0.xyzw, r1.xyzw
  15: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  16: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  17: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  18: mul r0.x, r1.y, cb1[5].x
  19: mul r0.w, r0.x, l(0.500000)
  20: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  21: mov o4.zw, r1.zzzw
  22: add o4.xy, r0.zzzz, r0.xwxx
  23: mov o5.xyzw, l(0,0,0,0)
  24: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  25: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  26: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mul r1.x, r0.y, r0.y
  31: mad r1.x, r0.x, r0.x, -r1.x
  32: mul r2.xyzw, r0.yzzx, r0.xyzz
  33: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  34: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  35: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  36: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  37: mov r0.w, l(1.000000)
  38: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  39: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  40: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  41: add o6.xyz, r1.xyzx, r2.xyzx
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 7 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightBuffer" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r1.x, r0.w, v3.w, -cb0[7].x
   2: mul r0.xyzw, r0.xyzw, v3.xyzw
   3: lt r1.x, r1.x, l(0.000000)
   4: discard_nz r1.x
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mov o0.w, r0.w
   7: div r1.xy, v4.xyxx, v4.wwww
   8: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
   9: add r1.xyz, r1.xyzx, v6.xyzx
  10: mul o0.xyz, r0.xyzx, r1.xyzx
  11: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: LIGHTPROBE_SH PIXELSNAP_ON UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 37 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o2.xyz, r0.xyzx
  14: mov o0.xyzw, r1.xyzw
  15: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  16: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  17: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  18: mul r0.x, r1.y, cb1[5].x
  19: mul r0.w, r0.x, l(0.500000)
  20: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  21: mov o4.zw, r1.zzzw
  22: add o4.xy, r0.zzzz, r0.xwxx
  23: mov o5.xyzw, l(0,0,0,0)
  24: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  25: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  26: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mul r1.x, r0.y, r0.y
  31: mad r1.x, r0.x, r0.x, -r1.x
  32: mul r2.xyzw, r0.yzzx, r0.xyzz
  33: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  34: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  35: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  36: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  37: mov r0.w, l(1.000000)
  38: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  39: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  40: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  41: add o6.xyz, r1.xyzx, r2.xyzx
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 7 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightBuffer" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r1.x, r0.w, v3.w, -cb0[7].x
   2: mul r0.xyzw, r0.xyzw, v3.xyzw
   3: lt r1.x, r1.x, l(0.000000)
   4: discard_nz r1.x
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mov o0.w, r0.w
   7: div r1.xy, v4.xyxx, v4.wwww
   8: sample r1.xyzw, r1.xyxx, t1.xyzw, s1
   9: add r1.xyz, r1.xyzx, v6.xyzx
  10: mul o0.xyz, r0.xyzx, r1.xyzx
  11: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   2: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   6: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   9: mov o2.xyz, r0.xyzx
  10: mov o0.xyzw, r1.xyzw
  11: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  12: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  13: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  14: mul r0.x, r1.y, cb1[5].x
  15: mul r0.w, r0.x, l(0.500000)
  16: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  17: mov o4.zw, r1.zzzw
  18: add o4.xy, r0.zzzz, r0.xwxx
  19: mov o5.xyzw, l(0,0,0,0)
  20: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  21: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  22: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  23: dp3 r0.w, r0.xyzx, r0.xyzx
  24: rsq r0.w, r0.w
  25: mul r0.xyz, r0.wwww, r0.xyzx
  26: mul r1.x, r0.y, r0.y
  27: mad r1.x, r0.x, r0.x, -r1.x
  28: mul r2.xyzw, r0.yzzx, r0.xyzz
  29: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  30: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  31: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  32: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  33: mov r0.w, l(1.000000)
  34: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  35: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  36: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  37: add o6.xyz, r1.xyzx, r2.xyzx
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 10 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1
Set 2D Texture "_LightBuffer" to slot 2

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r1.w, cb1[1].z, r0.x, r1.w
   4: mul r0.xyzw, r1.xyzw, v3.xyzw
   5: mad r1.x, r1.w, v3.w, -cb0[7].x
   6: lt r1.x, r1.x, l(0.000000)
   7: discard_nz r1.x
   8: mul r0.xyz, r0.wwww, r0.xyzx
   9: mov o0.w, r0.w
  10: div r1.xy, v4.xyxx, v4.wwww
  11: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  12: log r1.xyz, r1.xyzx
  13: add r1.xyz, -r1.xyzx, v6.xyzx
  14: mul o0.xyz, r0.xyzx, r1.xyzx
  15: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   2: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   6: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   9: mov o2.xyz, r0.xyzx
  10: mov o0.xyzw, r1.xyzw
  11: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  12: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  13: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  14: mul r0.x, r1.y, cb1[5].x
  15: mul r0.w, r0.x, l(0.500000)
  16: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  17: mov o4.zw, r1.zzzw
  18: add o4.xy, r0.zzzz, r0.xwxx
  19: mov o5.xyzw, l(0,0,0,0)
  20: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  21: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  22: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  23: dp3 r0.w, r0.xyzx, r0.xyzx
  24: rsq r0.w, r0.w
  25: mul r0.xyz, r0.wwww, r0.xyzx
  26: mul r1.x, r0.y, r0.y
  27: mad r1.x, r0.x, r0.x, -r1.x
  28: mul r2.xyzw, r0.yzzx, r0.xyzz
  29: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  30: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  31: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  32: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  33: mov r0.w, l(1.000000)
  34: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  35: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  36: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  37: add o6.xyz, r1.xyzx, r2.xyzx
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 10 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1
Set 2D Texture "_LightBuffer" to slot 2

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r1.w, cb1[1].z, r0.x, r1.w
   4: mul r0.xyzw, r1.xyzw, v3.xyzw
   5: mad r1.x, r1.w, v3.w, -cb0[7].x
   6: lt r1.x, r1.x, l(0.000000)
   7: discard_nz r1.x
   8: mul r0.xyz, r0.wwww, r0.xyzx
   9: mov o0.w, r0.w
  10: div r1.xy, v4.xyxx, v4.wwww
  11: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  12: log r1.xyz, r1.xyzx
  13: add r1.xyz, -r1.xyzx, v6.xyzx
  14: mul o0.xyz, r0.xyzx, r1.xyzx
  15: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   2: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   6: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   9: mov o2.xyz, r0.xyzx
  10: mov o0.xyzw, r1.xyzw
  11: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  12: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  13: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  14: mul r0.x, r1.y, cb1[5].x
  15: mul r0.w, r0.x, l(0.500000)
  16: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  17: mov o4.zw, r1.zzzw
  18: add o4.xy, r0.zzzz, r0.xwxx
  19: mov o5.xyzw, l(0,0,0,0)
  20: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  21: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  22: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  23: dp3 r0.w, r0.xyzx, r0.xyzx
  24: rsq r0.w, r0.w
  25: mul r0.xyz, r0.wwww, r0.xyzx
  26: mul r1.x, r0.y, r0.y
  27: mad r1.x, r0.x, r0.x, -r1.x
  28: mul r2.xyzw, r0.yzzx, r0.xyzz
  29: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  30: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  31: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  32: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  33: mov r0.w, l(1.000000)
  34: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  35: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  36: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  37: add o6.xyz, r1.xyzx, r2.xyzx
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 9 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1
Set 2D Texture "_LightBuffer" to slot 2

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r1.w, cb1[1].z, r0.x, r1.w
   4: mul r0.xyzw, r1.xyzw, v3.xyzw
   5: mad r1.x, r1.w, v3.w, -cb0[7].x
   6: lt r1.x, r1.x, l(0.000000)
   7: discard_nz r1.x
   8: mul r0.xyz, r0.wwww, r0.xyzx
   9: mov o0.w, r0.w
  10: div r1.xy, v4.xyxx, v4.wwww
  11: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  12: add r1.xyz, r1.xyzx, v6.xyzx
  13: mul o0.xyz, r0.xyzx, r1.xyzx
  14: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   2: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   6: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   9: mov o2.xyz, r0.xyzx
  10: mov o0.xyzw, r1.xyzw
  11: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  12: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  13: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  14: mul r0.x, r1.y, cb1[5].x
  15: mul r0.w, r0.x, l(0.500000)
  16: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  17: mov o4.zw, r1.zzzw
  18: add o4.xy, r0.zzzz, r0.xwxx
  19: mov o5.xyzw, l(0,0,0,0)
  20: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  21: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  22: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  23: dp3 r0.w, r0.xyzx, r0.xyzx
  24: rsq r0.w, r0.w
  25: mul r0.xyz, r0.wwww, r0.xyzx
  26: mul r1.x, r0.y, r0.y
  27: mad r1.x, r0.x, r0.x, -r1.x
  28: mul r2.xyzw, r0.yzzx, r0.xyzz
  29: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  30: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  31: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  32: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  33: mov r0.w, l(1.000000)
  34: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  35: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  36: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  37: add o6.xyz, r1.xyzx, r2.xyzx
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 9 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1
Set 2D Texture "_LightBuffer" to slot 2

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r1.w, cb1[1].z, r0.x, r1.w
   4: mul r0.xyzw, r1.xyzw, v3.xyzw
   5: mad r1.x, r1.w, v3.w, -cb0[7].x
   6: lt r1.x, r1.x, l(0.000000)
   7: discard_nz r1.x
   8: mul r0.xyz, r0.wwww, r0.xyzx
   9: mov o0.w, r0.w
  10: div r1.xy, v4.xyxx, v4.wwww
  11: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  12: add r1.xyz, r1.xyzx, v6.xyzx
  13: mul o0.xyz, r0.xyzx, r1.xyzx
  14: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 37 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o2.xyz, r0.xyzx
  14: mov o0.xyzw, r1.xyzw
  15: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  16: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  17: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  18: mul r0.x, r1.y, cb1[5].x
  19: mul r0.w, r0.x, l(0.500000)
  20: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  21: mov o4.zw, r1.zzzw
  22: add o4.xy, r0.zzzz, r0.xwxx
  23: mov o5.xyzw, l(0,0,0,0)
  24: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  25: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  26: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mul r1.x, r0.y, r0.y
  31: mad r1.x, r0.x, r0.x, -r1.x
  32: mul r2.xyzw, r0.yzzx, r0.xyzz
  33: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  34: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  35: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  36: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  37: mov r0.w, l(1.000000)
  38: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  39: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  40: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  41: add o6.xyz, r1.xyzx, r2.xyzx
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 10 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1
Set 2D Texture "_LightBuffer" to slot 2

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r1.w, cb1[1].z, r0.x, r1.w
   4: mul r0.xyzw, r1.xyzw, v3.xyzw
   5: mad r1.x, r1.w, v3.w, -cb0[7].x
   6: lt r1.x, r1.x, l(0.000000)
   7: discard_nz r1.x
   8: mul r0.xyz, r0.wwww, r0.xyzx
   9: mov o0.w, r0.w
  10: div r1.xy, v4.xyxx, v4.wwww
  11: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  12: log r1.xyz, r1.xyzx
  13: add r1.xyz, -r1.xyzx, v6.xyzx
  14: mul o0.xyz, r0.xyzx, r1.xyzx
  15: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 37 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o2.xyz, r0.xyzx
  14: mov o0.xyzw, r1.xyzw
  15: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  16: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  17: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  18: mul r0.x, r1.y, cb1[5].x
  19: mul r0.w, r0.x, l(0.500000)
  20: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  21: mov o4.zw, r1.zzzw
  22: add o4.xy, r0.zzzz, r0.xwxx
  23: mov o5.xyzw, l(0,0,0,0)
  24: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  25: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  26: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mul r1.x, r0.y, r0.y
  31: mad r1.x, r0.x, r0.x, -r1.x
  32: mul r2.xyzw, r0.yzzx, r0.xyzz
  33: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  34: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  35: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  36: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  37: mov r0.w, l(1.000000)
  38: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  39: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  40: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  41: add o6.xyz, r1.xyzx, r2.xyzx
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 10 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1
Set 2D Texture "_LightBuffer" to slot 2

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r1.w, cb1[1].z, r0.x, r1.w
   4: mul r0.xyzw, r1.xyzw, v3.xyzw
   5: mad r1.x, r1.w, v3.w, -cb0[7].x
   6: lt r1.x, r1.x, l(0.000000)
   7: discard_nz r1.x
   8: mul r0.xyz, r0.wwww, r0.xyzx
   9: mov o0.w, r0.w
  10: div r1.xy, v4.xyxx, v4.wwww
  11: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  12: log r1.xyz, r1.xyzx
  13: add r1.xyz, -r1.xyzx, v6.xyzx
  14: mul o0.xyz, r0.xyzx, r1.xyzx
  15: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA PIXELSNAP_ON UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 37 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o2.xyz, r0.xyzx
  14: mov o0.xyzw, r1.xyzw
  15: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  16: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  17: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  18: mul r0.x, r1.y, cb1[5].x
  19: mul r0.w, r0.x, l(0.500000)
  20: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  21: mov o4.zw, r1.zzzw
  22: add o4.xy, r0.zzzz, r0.xwxx
  23: mov o5.xyzw, l(0,0,0,0)
  24: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  25: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  26: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mul r1.x, r0.y, r0.y
  31: mad r1.x, r0.x, r0.x, -r1.x
  32: mul r2.xyzw, r0.yzzx, r0.xyzz
  33: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  34: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  35: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  36: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  37: mov r0.w, l(1.000000)
  38: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  39: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  40: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  41: add o6.xyz, r1.xyzx, r2.xyzx
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 9 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1
Set 2D Texture "_LightBuffer" to slot 2

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r1.w, cb1[1].z, r0.x, r1.w
   4: mul r0.xyzw, r1.xyzw, v3.xyzw
   5: mad r1.x, r1.w, v3.w, -cb0[7].x
   6: lt r1.x, r1.x, l(0.000000)
   7: discard_nz r1.x
   8: mul r0.xyz, r0.wwww, r0.xyzx
   9: mov o0.w, r0.w
  10: div r1.xy, v4.xyxx, v4.wwww
  11: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  12: add r1.xyz, r1.xyzx, v6.xyzx
  13: mul o0.xyz, r0.xyzx, r1.xyzx
  14: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH PIXELSNAP_ON UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 37 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o2.xyz, r0.xyzx
  14: mov o0.xyzw, r1.xyzw
  15: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  16: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  17: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  18: mul r0.x, r1.y, cb1[5].x
  19: mul r0.w, r0.x, l(0.500000)
  20: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  21: mov o4.zw, r1.zzzw
  22: add o4.xy, r0.zzzz, r0.xwxx
  23: mov o5.xyzw, l(0,0,0,0)
  24: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  25: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  26: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mul r1.x, r0.y, r0.y
  31: mad r1.x, r0.x, r0.x, -r1.x
  32: mul r2.xyzw, r0.yzzx, r0.xyzz
  33: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  34: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  35: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  36: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  37: mov r0.w, l(1.000000)
  38: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  39: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  40: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  41: add o6.xyz, r1.xyzx, r2.xyzx
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 9 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1
Set 2D Texture "_LightBuffer" to slot 2

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r1.w, cb1[1].z, r0.x, r1.w
   4: mul r0.xyzw, r1.xyzw, v3.xyzw
   5: mad r1.x, r1.w, v3.w, -cb0[7].x
   6: lt r1.x, r1.x, l(0.000000)
   7: discard_nz r1.x
   8: mul r0.xyz, r0.wwww, r0.xyzx
   9: mov o0.w, r0.w
  10: div r1.xy, v4.xyxx, v4.wwww
  11: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  12: add r1.xyz, r1.xyzx, v6.xyzx
  13: mul o0.xyz, r0.xyzx, r1.xyzx
  14: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 32 avg math (30..34)
 // Stats for Fragment shader:
 //        d3d11: 7 avg math (6..9), 1 avg texture (1..2)
 Pass {
  Name "DEFERRED"
  Tags { "LIGHTMODE"="DEFERRED" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" "CanUseSpriteAtlas"="true" "PreviewType"="Plane" }
  ZWrite Off
  Cull Off
  Blend One OneMinusSrcAlpha
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   2: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   6: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  12: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  13: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  19: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  20: mov o5.xyzw, l(0,0,0,0)
  21: mul r1.x, r0.y, r0.y
  22: mad r1.x, r0.x, r0.x, -r1.x
  23: mul r2.xyzw, r0.yzzx, r0.xyzz
  24: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  25: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  26: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  27: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  28: mov r0.w, l(1.000000)
  29: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  30: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  31: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  32: add r0.xyz, r1.xyzx, r2.xyzx
  33: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 7 math, 2 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r1.x, r0.w, v4.w, -cb0[7].x
   2: mul r0.xyzw, r0.xyzw, v4.xyzw
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: lt r0.w, r1.x, l(0.000000)
   5: discard_nz r0.w
   6: mov o0.xyz, r0.xyzx
   7: mul r0.xyz, r0.xyzx, v6.xyzx
   8: exp o3.xyz, -r0.xyzx
   9: mov o0.w, l(1.000000)
  10: mov o1.xyzw, l(0,0,0,0)
  11: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  12: mov o2.w, l(1.000000)
  13: mov o3.w, l(1.000000)
  14: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: LIGHTPROBE_SH
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   2: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   6: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  12: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  13: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  19: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  20: mov o5.xyzw, l(0,0,0,0)
  21: mul r1.x, r0.y, r0.y
  22: mad r1.x, r0.x, r0.x, -r1.x
  23: mul r2.xyzw, r0.yzzx, r0.xyzz
  24: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  25: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  26: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  27: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  28: mov r0.w, l(1.000000)
  29: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  30: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  31: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  32: add r0.xyz, r1.xyzx, r2.xyzx
  33: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 7 math, 2 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r1.x, r0.w, v4.w, -cb0[7].x
   2: mul r0.xyzw, r0.xyzw, v4.xyzw
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: lt r0.w, r1.x, l(0.000000)
   5: discard_nz r0.w
   6: mov o0.xyz, r0.xyzx
   7: mul r0.xyz, r0.xyzx, v6.xyzx
   8: exp o3.xyz, -r0.xyzx
   9: mov o0.w, l(1.000000)
  10: mov o1.xyzw, l(0,0,0,0)
  11: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  12: mov o2.w, l(1.000000)
  13: mov o3.w, l(1.000000)
  14: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   2: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   6: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  12: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  13: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  19: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  20: mov o5.xyzw, l(0,0,0,0)
  21: mul r1.x, r0.y, r0.y
  22: mad r1.x, r0.x, r0.x, -r1.x
  23: mul r2.xyzw, r0.yzzx, r0.xyzz
  24: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  25: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  26: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  27: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  28: mov r0.w, l(1.000000)
  29: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  30: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  31: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  32: add r0.xyz, r1.xyzx, r2.xyzx
  33: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 6 math, 2 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r1.x, r0.w, v4.w, -cb0[7].x
   2: mul r0.xyzw, r0.xyzw, v4.xyzw
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: lt r0.w, r1.x, l(0.000000)
   5: discard_nz r0.w
   6: mov o0.xyz, r0.xyzx
   7: mul o3.xyz, r0.xyzx, v6.xyzx
   8: mov o0.w, l(1.000000)
   9: mov o1.xyzw, l(0,0,0,0)
  10: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  11: mov o2.w, l(1.000000)
  12: mov o3.w, l(1.000000)
  13: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: LIGHTPROBE_SH UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   2: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   6: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  12: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  13: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  19: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  20: mov o5.xyzw, l(0,0,0,0)
  21: mul r1.x, r0.y, r0.y
  22: mad r1.x, r0.x, r0.x, -r1.x
  23: mul r2.xyzw, r0.yzzx, r0.xyzz
  24: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  25: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  26: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  27: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  28: mov r0.w, l(1.000000)
  29: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  30: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  31: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  32: add r0.xyz, r1.xyzx, r2.xyzx
  33: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 6 math, 2 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r1.x, r0.w, v4.w, -cb0[7].x
   2: mul r0.xyzw, r0.xyzw, v4.xyzw
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: lt r0.w, r1.x, l(0.000000)
   5: discard_nz r0.w
   6: mov o0.xyz, r0.xyzx
   7: mul o3.xyz, r0.xyzx, v6.xyzx
   8: mov o0.w, l(1.000000)
   9: mov o1.xyzw, l(0,0,0,0)
  10: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  11: mov o2.w, l(1.000000)
  12: mov o3.w, l(1.000000)
  13: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul r0.xyz, r0.wwww, r0.xyzx
  21: mov o2.xyz, r0.xyzx
  22: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  23: mul o4.xyzw, r1.xyzw, cb5[0].xyzw
  24: mov o5.xyzw, l(0,0,0,0)
  25: mul r1.x, r0.y, r0.y
  26: mad r1.x, r0.x, r0.x, -r1.x
  27: mul r2.xyzw, r0.yzzx, r0.xyzz
  28: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  29: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  30: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  31: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  32: mov r0.w, l(1.000000)
  33: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  34: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  35: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  36: add r0.xyz, r1.xyzx, r2.xyzx
  37: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 7 math, 2 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r1.x, r0.w, v4.w, -cb0[7].x
   2: mul r0.xyzw, r0.xyzw, v4.xyzw
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: lt r0.w, r1.x, l(0.000000)
   5: discard_nz r0.w
   6: mov o0.xyz, r0.xyzx
   7: mul r0.xyz, r0.xyzx, v6.xyzx
   8: exp o3.xyz, -r0.xyzx
   9: mov o0.w, l(1.000000)
  10: mov o1.xyzw, l(0,0,0,0)
  11: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  12: mov o2.w, l(1.000000)
  13: mov o3.w, l(1.000000)
  14: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: LIGHTPROBE_SH PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul r0.xyz, r0.wwww, r0.xyzx
  21: mov o2.xyz, r0.xyzx
  22: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  23: mul o4.xyzw, r1.xyzw, cb5[0].xyzw
  24: mov o5.xyzw, l(0,0,0,0)
  25: mul r1.x, r0.y, r0.y
  26: mad r1.x, r0.x, r0.x, -r1.x
  27: mul r2.xyzw, r0.yzzx, r0.xyzz
  28: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  29: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  30: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  31: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  32: mov r0.w, l(1.000000)
  33: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  34: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  35: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  36: add r0.xyz, r1.xyzx, r2.xyzx
  37: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 7 math, 2 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r1.x, r0.w, v4.w, -cb0[7].x
   2: mul r0.xyzw, r0.xyzw, v4.xyzw
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: lt r0.w, r1.x, l(0.000000)
   5: discard_nz r0.w
   6: mov o0.xyz, r0.xyzx
   7: mul r0.xyz, r0.xyzx, v6.xyzx
   8: exp o3.xyz, -r0.xyzx
   9: mov o0.w, l(1.000000)
  10: mov o1.xyzw, l(0,0,0,0)
  11: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  12: mov o2.w, l(1.000000)
  13: mov o3.w, l(1.000000)
  14: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: PIXELSNAP_ON UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul r0.xyz, r0.wwww, r0.xyzx
  21: mov o2.xyz, r0.xyzx
  22: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  23: mul o4.xyzw, r1.xyzw, cb5[0].xyzw
  24: mov o5.xyzw, l(0,0,0,0)
  25: mul r1.x, r0.y, r0.y
  26: mad r1.x, r0.x, r0.x, -r1.x
  27: mul r2.xyzw, r0.yzzx, r0.xyzz
  28: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  29: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  30: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  31: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  32: mov r0.w, l(1.000000)
  33: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  34: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  35: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  36: add r0.xyz, r1.xyzx, r2.xyzx
  37: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 6 math, 2 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r1.x, r0.w, v4.w, -cb0[7].x
   2: mul r0.xyzw, r0.xyzw, v4.xyzw
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: lt r0.w, r1.x, l(0.000000)
   5: discard_nz r0.w
   6: mov o0.xyz, r0.xyzx
   7: mul o3.xyz, r0.xyzx, v6.xyzx
   8: mov o0.w, l(1.000000)
   9: mov o1.xyzw, l(0,0,0,0)
  10: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  11: mov o2.w, l(1.000000)
  12: mov o3.w, l(1.000000)
  13: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: LIGHTPROBE_SH PIXELSNAP_ON UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul r0.xyz, r0.wwww, r0.xyzx
  21: mov o2.xyz, r0.xyzx
  22: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  23: mul o4.xyzw, r1.xyzw, cb5[0].xyzw
  24: mov o5.xyzw, l(0,0,0,0)
  25: mul r1.x, r0.y, r0.y
  26: mad r1.x, r0.x, r0.x, -r1.x
  27: mul r2.xyzw, r0.yzzx, r0.xyzz
  28: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  29: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  30: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  31: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  32: mov r0.w, l(1.000000)
  33: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  34: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  35: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  36: add r0.xyz, r1.xyzx, r2.xyzx
  37: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 6 math, 2 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r1.x, r0.w, v4.w, -cb0[7].x
   2: mul r0.xyzw, r0.xyzw, v4.xyzw
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: lt r0.w, r1.x, l(0.000000)
   5: discard_nz r0.w
   6: mov o0.xyz, r0.xyzx
   7: mul o3.xyz, r0.xyzx, v6.xyzx
   8: mov o0.w, l(1.000000)
   9: mov o1.xyzw, l(0,0,0,0)
  10: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  11: mov o2.w, l(1.000000)
  12: mov o3.w, l(1.000000)
  13: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   2: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   6: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  12: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  13: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  19: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  20: mov o5.xyzw, l(0,0,0,0)
  21: mul r1.x, r0.y, r0.y
  22: mad r1.x, r0.x, r0.x, -r1.x
  23: mul r2.xyzw, r0.yzzx, r0.xyzz
  24: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  25: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  26: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  27: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  28: mov r0.w, l(1.000000)
  29: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  30: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  31: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  32: add r0.xyz, r1.xyzx, r2.xyzx
  33: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 9 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r1.w, cb1[1].z, r0.x, r1.w
   4: mul r0.xyzw, r1.xyzw, v4.xyzw
   5: mad r1.x, r1.w, v4.w, -cb0[7].x
   6: lt r1.x, r1.x, l(0.000000)
   7: discard_nz r1.x
   8: mul r0.xyz, r0.wwww, r0.xyzx
   9: mov o0.xyz, r0.xyzx
  10: mul r0.xyz, r0.xyzx, v6.xyzx
  11: exp o3.xyz, -r0.xyzx
  12: mov o0.w, l(1.000000)
  13: mov o1.xyzw, l(0,0,0,0)
  14: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  15: mov o2.w, l(1.000000)
  16: mov o3.w, l(1.000000)
  17: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   2: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   6: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  12: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  13: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  19: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  20: mov o5.xyzw, l(0,0,0,0)
  21: mul r1.x, r0.y, r0.y
  22: mad r1.x, r0.x, r0.x, -r1.x
  23: mul r2.xyzw, r0.yzzx, r0.xyzz
  24: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  25: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  26: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  27: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  28: mov r0.w, l(1.000000)
  29: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  30: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  31: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  32: add r0.xyz, r1.xyzx, r2.xyzx
  33: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 9 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r1.w, cb1[1].z, r0.x, r1.w
   4: mul r0.xyzw, r1.xyzw, v4.xyzw
   5: mad r1.x, r1.w, v4.w, -cb0[7].x
   6: lt r1.x, r1.x, l(0.000000)
   7: discard_nz r1.x
   8: mul r0.xyz, r0.wwww, r0.xyzx
   9: mov o0.xyz, r0.xyzx
  10: mul r0.xyz, r0.xyzx, v6.xyzx
  11: exp o3.xyz, -r0.xyzx
  12: mov o0.w, l(1.000000)
  13: mov o1.xyzw, l(0,0,0,0)
  14: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  15: mov o2.w, l(1.000000)
  16: mov o3.w, l(1.000000)
  17: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   2: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   6: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  12: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  13: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  19: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  20: mov o5.xyzw, l(0,0,0,0)
  21: mul r1.x, r0.y, r0.y
  22: mad r1.x, r0.x, r0.x, -r1.x
  23: mul r2.xyzw, r0.yzzx, r0.xyzz
  24: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  25: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  26: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  27: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  28: mov r0.w, l(1.000000)
  29: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  30: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  31: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  32: add r0.xyz, r1.xyzx, r2.xyzx
  33: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 8 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r1.w, cb1[1].z, r0.x, r1.w
   4: mul r0.xyzw, r1.xyzw, v4.xyzw
   5: mad r1.x, r1.w, v4.w, -cb0[7].x
   6: lt r1.x, r1.x, l(0.000000)
   7: discard_nz r1.x
   8: mul r0.xyz, r0.wwww, r0.xyzx
   9: mov o0.xyz, r0.xyzx
  10: mul o3.xyz, r0.xyzx, v6.xyzx
  11: mov o0.w, l(1.000000)
  12: mov o1.xyzw, l(0,0,0,0)
  13: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  14: mov o2.w, l(1.000000)
  15: mov o3.w, l(1.000000)
  16: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 4 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb4[1].xyxx
   1: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
   2: mad r0.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
   3: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   4: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   5: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   6: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   7: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   9: mov o3.xyz, r0.xyzx
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: dp3 r0.x, v2.xyzx, cb2[4].xyzx
  12: dp3 r0.y, v2.xyzx, cb2[5].xyzx
  13: dp3 r0.z, v2.xyzx, cb2[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  19: mul o4.xyzw, r1.xyzw, cb4[0].xyzw
  20: mov o5.xyzw, l(0,0,0,0)
  21: mul r1.x, r0.y, r0.y
  22: mad r1.x, r0.x, r0.x, -r1.x
  23: mul r2.xyzw, r0.yzzx, r0.xyzz
  24: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  25: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  26: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  27: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  28: mov r0.w, l(1.000000)
  29: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  30: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  31: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  32: add r0.xyz, r1.xyzx, r2.xyzx
  33: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 8 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r1.w, cb1[1].z, r0.x, r1.w
   4: mul r0.xyzw, r1.xyzw, v4.xyzw
   5: mad r1.x, r1.w, v4.w, -cb0[7].x
   6: lt r1.x, r1.x, l(0.000000)
   7: discard_nz r1.x
   8: mul r0.xyz, r0.wwww, r0.xyzx
   9: mov o0.xyz, r0.xyzx
  10: mul o3.xyz, r0.xyzx, v6.xyzx
  11: mov o0.w, l(1.000000)
  12: mov o1.xyzw, l(0,0,0,0)
  13: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  14: mov o2.w, l(1.000000)
  15: mov o3.w, l(1.000000)
  16: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul r0.xyz, r0.wwww, r0.xyzx
  21: mov o2.xyz, r0.xyzx
  22: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  23: mul o4.xyzw, r1.xyzw, cb5[0].xyzw
  24: mov o5.xyzw, l(0,0,0,0)
  25: mul r1.x, r0.y, r0.y
  26: mad r1.x, r0.x, r0.x, -r1.x
  27: mul r2.xyzw, r0.yzzx, r0.xyzz
  28: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  29: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  30: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  31: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  32: mov r0.w, l(1.000000)
  33: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  34: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  35: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  36: add r0.xyz, r1.xyzx, r2.xyzx
  37: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 9 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r1.w, cb1[1].z, r0.x, r1.w
   4: mul r0.xyzw, r1.xyzw, v4.xyzw
   5: mad r1.x, r1.w, v4.w, -cb0[7].x
   6: lt r1.x, r1.x, l(0.000000)
   7: discard_nz r1.x
   8: mul r0.xyz, r0.wwww, r0.xyzx
   9: mov o0.xyz, r0.xyzx
  10: mul r0.xyz, r0.xyzx, v6.xyzx
  11: exp o3.xyz, -r0.xyzx
  12: mov o0.w, l(1.000000)
  13: mov o1.xyzw, l(0,0,0,0)
  14: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  15: mov o2.w, l(1.000000)
  16: mov o3.w, l(1.000000)
  17: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH PIXELSNAP_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul r0.xyz, r0.wwww, r0.xyzx
  21: mov o2.xyz, r0.xyzx
  22: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  23: mul o4.xyzw, r1.xyzw, cb5[0].xyzw
  24: mov o5.xyzw, l(0,0,0,0)
  25: mul r1.x, r0.y, r0.y
  26: mad r1.x, r0.x, r0.x, -r1.x
  27: mul r2.xyzw, r0.yzzx, r0.xyzz
  28: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  29: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  30: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  31: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  32: mov r0.w, l(1.000000)
  33: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  34: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  35: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  36: add r0.xyz, r1.xyzx, r2.xyzx
  37: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 9 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r1.w, cb1[1].z, r0.x, r1.w
   4: mul r0.xyzw, r1.xyzw, v4.xyzw
   5: mad r1.x, r1.w, v4.w, -cb0[7].x
   6: lt r1.x, r1.x, l(0.000000)
   7: discard_nz r1.x
   8: mul r0.xyz, r0.wwww, r0.xyzx
   9: mov o0.xyz, r0.xyzx
  10: mul r0.xyz, r0.xyzx, v6.xyzx
  11: exp o3.xyz, -r0.xyzx
  12: mov o0.w, l(1.000000)
  13: mov o1.xyzw, l(0,0,0,0)
  14: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  15: mov o2.w, l(1.000000)
  16: mov o3.w, l(1.000000)
  17: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA PIXELSNAP_ON UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul r0.xyz, r0.wwww, r0.xyzx
  21: mov o2.xyz, r0.xyzx
  22: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  23: mul o4.xyzw, r1.xyzw, cb5[0].xyzw
  24: mov o5.xyzw, l(0,0,0,0)
  25: mul r1.x, r0.y, r0.y
  26: mad r1.x, r0.x, r0.x, -r1.x
  27: mul r2.xyzw, r0.yzzx, r0.xyzz
  28: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  29: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  30: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  31: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  32: mov r0.w, l(1.000000)
  33: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  34: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  35: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  36: add r0.xyz, r1.xyzx, r2.xyzx
  37: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 8 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r1.w, cb1[1].z, r0.x, r1.w
   4: mul r0.xyzw, r1.xyzw, v4.xyzw
   5: mad r1.x, r1.w, v4.w, -cb0[7].x
   6: lt r1.x, r1.x, l(0.000000)
   7: discard_nz r1.x
   8: mul r0.xyz, r0.wwww, r0.xyzx
   9: mov o0.xyz, r0.xyzx
  10: mul o3.xyz, r0.xyzx, v6.xyzx
  11: mov o0.w, l(1.000000)
  12: mov o1.xyzw, l(0,0,0,0)
  13: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  14: mov o2.w, l(1.000000)
  15: mov o3.w, l(1.000000)
  16: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA LIGHTPROBE_SH PIXELSNAP_ON UNITY_HDR_ON
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xy, v0.xyxx, cb5[1].xyxx
   1: mul r0.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   2: mul r0.xy, r0.zwzz, r0.xyxx
   3: round_ne r0.xy, r0.xyxx
   4: div r0.xy, r0.xyxx, r0.zwzz
   5: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
   6: mad r0.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
   7: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  10: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  13: mov o3.xyz, r0.xyzx
  14: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  15: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  16: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  17: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: rsq r0.w, r0.w
  20: mul r0.xyz, r0.wwww, r0.xyzx
  21: mov o2.xyz, r0.xyzx
  22: mul r1.xyzw, v7.xyzw, cb0[4].xyzw
  23: mul o4.xyzw, r1.xyzw, cb5[0].xyzw
  24: mov o5.xyzw, l(0,0,0,0)
  25: mul r1.x, r0.y, r0.y
  26: mad r1.x, r0.x, r0.x, -r1.x
  27: mul r2.xyzw, r0.yzzx, r0.xyzz
  28: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  29: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  30: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  31: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  32: mov r0.w, l(1.000000)
  33: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  34: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  35: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  36: add r0.xyz, r1.xyzx, r2.xyzx
  37: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 8 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Float _NarutoIsOverrated at 112
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r1.w, cb1[1].z, r0.x, r1.w
   4: mul r0.xyzw, r1.xyzw, v4.xyzw
   5: mad r1.x, r1.w, v4.w, -cb0[7].x
   6: lt r1.x, r1.x, l(0.000000)
   7: discard_nz r1.x
   8: mul r0.xyz, r0.wwww, r0.xyzx
   9: mov o0.xyz, r0.xyzx
  10: mul o3.xyz, r0.xyzx, v6.xyzx
  11: mov o0.w, l(1.000000)
  12: mov o1.xyzw, l(0,0,0,0)
  13: mad o2.xyz, v2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  14: mov o2.w, l(1.000000)
  15: mov o3.w, l(1.000000)
  16: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 39 avg math (35..43)
 // Stats for Fragment shader:
 //        d3d11: 3 avg math (2..4), 1 avg texture (1..2)
 Pass {
  Name "ShadowCaster"
  Tags { "LIGHTMODE"="SHADOWCASTER" "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "SHADOWSUPPORT"="true" "RenderType"="Transparent" "CanUseSpriteAtlas"="true" "PreviewType"="Plane" }
  Cull Off
  Blend One OneMinusSrcAlpha
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords: SHADOWS_DEPTH
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[6], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_temps 4
   0: dp3 r0.x, v2.xyzx, cb3[4].xyzx
   1: dp3 r0.y, v2.xyzx, cb3[5].xyzx
   2: dp3 r0.z, v2.xyzx, cb3[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xy, v0.xyxx, cb5[1].xyxx
   7: mul r2.xyzw, r1.yyyy, cb3[1].xyzw
   8: mad r2.xyzw, cb3[0].xyzw, r1.xxxx, r2.xyzw
   9: mad r2.xyzw, cb3[2].xyzw, v0.zzzz, r2.xyzw
  10: add r2.xyzw, r2.xyzw, cb3[3].xyzw
  11: mad r3.xyz, -r2.xyzx, cb1[0].wwww, cb1[0].xyzx
  12: dp3 r0.w, r3.xyzx, r3.xyzx
  13: rsq r0.w, r0.w
  14: mul r3.xyz, r0.wwww, r3.xyzx
  15: dp3 r0.w, r0.xyzx, r3.xyzx
  16: mad r0.w, -r0.w, r0.w, l(1.000000)
  17: sqrt r0.w, r0.w
  18: mul r0.w, r0.w, cb2[5].z
  19: mad r0.xyz, -r0.xyzx, r0.wwww, r2.xyzx
  20: ne r0.w, cb2[5].z, l(0.000000)
  21: movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
  22: mul r3.xyzw, r0.yyyy, cb4[18].xyzw
  23: mad r3.xyzw, cb4[17].xyzw, r0.xxxx, r3.xyzw
  24: mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r3.xyzw
  25: mad r0.xyzw, cb4[20].xyzw, r2.wwww, r0.xyzw
  26: div r1.z, cb2[5].x, r0.w
  27: min r1.z, r1.z, l(0.000000)
  28: max r1.z, r1.z, l(-1.000000)
  29: add r0.z, r0.z, r1.z
  30: min r1.z, r0.w, r0.z
  31: mov o0.xyw, r0.xyxw
  32: add r0.x, -r0.z, r1.z
  33: mad o0.z, cb2[5].y, r0.x, r0.z
  34: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  35: mul r0.xyz, r1.yyyy, cb3[1].xyzx
  36: mad r0.xyz, cb3[0].xyzx, r1.xxxx, r0.xyzx
  37: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  38: add o2.xyz, r0.xyzx, cb3[3].xyzx
  39: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  40: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 2 math, 1 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Float _NarutoIsOverrated at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float       
// TEXCOORD                 3   xyzw        3     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.x, r0.w, v3.w, -cb0[6].x
   2: lt r0.x, r0.x, l(0.000000)
   3: discard_nz r0.x
   4: mov o0.xyzw, l(0,0,0,0)
   5: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: SHADOWS_CUBE
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[6], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_temps 4
   0: dp3 r0.x, v2.xyzx, cb3[4].xyzx
   1: dp3 r0.y, v2.xyzx, cb3[5].xyzx
   2: dp3 r0.z, v2.xyzx, cb3[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xy, v0.xyxx, cb5[1].xyxx
   7: mul r2.xyzw, r1.yyyy, cb3[1].xyzw
   8: mad r2.xyzw, cb3[0].xyzw, r1.xxxx, r2.xyzw
   9: mad r2.xyzw, cb3[2].xyzw, v0.zzzz, r2.xyzw
  10: add r2.xyzw, r2.xyzw, cb3[3].xyzw
  11: mad r3.xyz, -r2.xyzx, cb1[0].wwww, cb1[0].xyzx
  12: dp3 r0.w, r3.xyzx, r3.xyzx
  13: rsq r0.w, r0.w
  14: mul r3.xyz, r0.wwww, r3.xyzx
  15: dp3 r0.w, r0.xyzx, r3.xyzx
  16: mad r0.w, -r0.w, r0.w, l(1.000000)
  17: sqrt r0.w, r0.w
  18: mul r0.w, r0.w, cb2[5].z
  19: mad r0.xyz, -r0.xyzx, r0.wwww, r2.xyzx
  20: ne r0.w, cb2[5].z, l(0.000000)
  21: movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
  22: mul r3.xyzw, r0.yyyy, cb4[18].xyzw
  23: mad r3.xyzw, cb4[17].xyzw, r0.xxxx, r3.xyzw
  24: mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r3.xyzw
  25: mad r0.xyzw, cb4[20].xyzw, r2.wwww, r0.xyzw
  26: min r1.z, r0.w, r0.z
  27: add r1.z, -r0.z, r1.z
  28: mad o0.z, cb2[5].y, r1.z, r0.z
  29: mov o0.xyw, r0.xyxw
  30: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  31: mul r0.xyz, r1.yyyy, cb3[1].xyzx
  32: mad r0.xyz, cb3[0].xyzx, r1.xxxx, r0.xyzx
  33: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  34: add o2.xyz, r0.xyzx, cb3[3].xyzx
  35: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  36: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  37: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 2 math, 1 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Float _NarutoIsOverrated at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float       
// TEXCOORD                 3   xyzw        3     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.x, r0.w, v3.w, -cb0[6].x
   2: lt r0.x, r0.x, l(0.000000)
   3: discard_nz r0.x
   4: mov o0.xyzw, l(0,0,0,0)
   5: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: PIXELSNAP_ON SHADOWS_DEPTH
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 43 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 4 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 5 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 6 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[6], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_constantbuffer CB5[21], immediateIndexed
      dcl_constantbuffer CB6[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_temps 4
   0: dp3 r0.x, v2.xyzx, cb4[4].xyzx
   1: dp3 r0.y, v2.xyzx, cb4[5].xyzx
   2: dp3 r0.z, v2.xyzx, cb4[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xy, v0.xyxx, cb6[1].xyxx
   7: mul r1.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   8: mul r1.xy, r1.zwzz, r1.xyxx
   9: round_ne r1.xy, r1.xyxx
  10: div r1.xy, r1.xyxx, r1.zwzz
  11: mul r2.xyzw, r1.yyyy, cb4[1].xyzw
  12: mad r2.xyzw, cb4[0].xyzw, r1.xxxx, r2.xyzw
  13: mad r2.xyzw, cb4[2].xyzw, v0.zzzz, r2.xyzw
  14: add r2.xyzw, r2.xyzw, cb4[3].xyzw
  15: mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  16: dp3 r0.w, r3.xyzx, r3.xyzx
  17: rsq r0.w, r0.w
  18: mul r3.xyz, r0.wwww, r3.xyzx
  19: dp3 r0.w, r0.xyzx, r3.xyzx
  20: mad r0.w, -r0.w, r0.w, l(1.000000)
  21: sqrt r0.w, r0.w
  22: mul r0.w, r0.w, cb3[5].z
  23: mad r0.xyz, -r0.xyzx, r0.wwww, r2.xyzx
  24: ne r0.w, cb3[5].z, l(0.000000)
  25: movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
  26: mul r3.xyzw, r0.yyyy, cb5[18].xyzw
  27: mad r3.xyzw, cb5[17].xyzw, r0.xxxx, r3.xyzw
  28: mad r0.xyzw, cb5[19].xyzw, r0.zzzz, r3.xyzw
  29: mad r0.xyzw, cb5[20].xyzw, r2.wwww, r0.xyzw
  30: div r1.z, cb3[5].x, r0.w
  31: min r1.z, r1.z, l(0.000000)
  32: max r1.z, r1.z, l(-1.000000)
  33: add r0.z, r0.z, r1.z
  34: min r1.z, r0.w, r0.z
  35: mov o0.xyw, r0.xyxw
  36: add r0.x, -r0.z, r1.z
  37: mad o0.z, cb3[5].y, r0.x, r0.z
  38: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  39: mul r0.xyz, r1.yyyy, cb4[1].xyzx
  40: mad r0.xyz, cb4[0].xyzx, r1.xxxx, r0.xyzx
  41: mad r0.xyz, cb4[2].xyzx, v0.zzzz, r0.xyzx
  42: add o2.xyz, r0.xyzx, cb4[3].xyzx
  43: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  44: mul o3.xyzw, r0.xyzw, cb6[0].xyzw
  45: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 2 math, 1 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Float _NarutoIsOverrated at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float       
// TEXCOORD                 3   xyzw        3     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.x, r0.w, v3.w, -cb0[6].x
   2: lt r0.x, r0.x, l(0.000000)
   3: discard_nz r0.x
   4: mov o0.xyzw, l(0,0,0,0)
   5: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: PIXELSNAP_ON SHADOWS_CUBE
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 4 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 5 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 6 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[6], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_constantbuffer CB5[21], immediateIndexed
      dcl_constantbuffer CB6[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_temps 4
   0: dp3 r0.x, v2.xyzx, cb4[4].xyzx
   1: dp3 r0.y, v2.xyzx, cb4[5].xyzx
   2: dp3 r0.z, v2.xyzx, cb4[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xy, v0.xyxx, cb6[1].xyxx
   7: mul r1.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   8: mul r1.xy, r1.zwzz, r1.xyxx
   9: round_ne r1.xy, r1.xyxx
  10: div r1.xy, r1.xyxx, r1.zwzz
  11: mul r2.xyzw, r1.yyyy, cb4[1].xyzw
  12: mad r2.xyzw, cb4[0].xyzw, r1.xxxx, r2.xyzw
  13: mad r2.xyzw, cb4[2].xyzw, v0.zzzz, r2.xyzw
  14: add r2.xyzw, r2.xyzw, cb4[3].xyzw
  15: mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  16: dp3 r0.w, r3.xyzx, r3.xyzx
  17: rsq r0.w, r0.w
  18: mul r3.xyz, r0.wwww, r3.xyzx
  19: dp3 r0.w, r0.xyzx, r3.xyzx
  20: mad r0.w, -r0.w, r0.w, l(1.000000)
  21: sqrt r0.w, r0.w
  22: mul r0.w, r0.w, cb3[5].z
  23: mad r0.xyz, -r0.xyzx, r0.wwww, r2.xyzx
  24: ne r0.w, cb3[5].z, l(0.000000)
  25: movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
  26: mul r3.xyzw, r0.yyyy, cb5[18].xyzw
  27: mad r3.xyzw, cb5[17].xyzw, r0.xxxx, r3.xyzw
  28: mad r0.xyzw, cb5[19].xyzw, r0.zzzz, r3.xyzw
  29: mad r0.xyzw, cb5[20].xyzw, r2.wwww, r0.xyzw
  30: min r1.z, r0.w, r0.z
  31: add r1.z, -r0.z, r1.z
  32: mad o0.z, cb3[5].y, r1.z, r0.z
  33: mov o0.xyw, r0.xyxw
  34: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  35: mul r0.xyz, r1.yyyy, cb4[1].xyzx
  36: mad r0.xyz, cb4[0].xyzx, r1.xxxx, r0.xyzx
  37: mad r0.xyz, cb4[2].xyzx, v0.zzzz, r0.xyzx
  38: add o2.xyz, r0.xyzx, cb4[3].xyzx
  39: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  40: mul o3.xyzw, r0.xyzw, cb6[0].xyzw
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 2 math, 1 temp registers, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Float _NarutoIsOverrated at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float       
// TEXCOORD                 3   xyzw        3     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.x, r0.w, v3.w, -cb0[6].x
   2: lt r0.x, r0.x, l(0.000000)
   3: discard_nz r0.x
   4: mov o0.xyzw, l(0,0,0,0)
   5: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA SHADOWS_DEPTH
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[6], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_temps 4
   0: dp3 r0.x, v2.xyzx, cb3[4].xyzx
   1: dp3 r0.y, v2.xyzx, cb3[5].xyzx
   2: dp3 r0.z, v2.xyzx, cb3[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xy, v0.xyxx, cb5[1].xyxx
   7: mul r2.xyzw, r1.yyyy, cb3[1].xyzw
   8: mad r2.xyzw, cb3[0].xyzw, r1.xxxx, r2.xyzw
   9: mad r2.xyzw, cb3[2].xyzw, v0.zzzz, r2.xyzw
  10: add r2.xyzw, r2.xyzw, cb3[3].xyzw
  11: mad r3.xyz, -r2.xyzx, cb1[0].wwww, cb1[0].xyzx
  12: dp3 r0.w, r3.xyzx, r3.xyzx
  13: rsq r0.w, r0.w
  14: mul r3.xyz, r0.wwww, r3.xyzx
  15: dp3 r0.w, r0.xyzx, r3.xyzx
  16: mad r0.w, -r0.w, r0.w, l(1.000000)
  17: sqrt r0.w, r0.w
  18: mul r0.w, r0.w, cb2[5].z
  19: mad r0.xyz, -r0.xyzx, r0.wwww, r2.xyzx
  20: ne r0.w, cb2[5].z, l(0.000000)
  21: movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
  22: mul r3.xyzw, r0.yyyy, cb4[18].xyzw
  23: mad r3.xyzw, cb4[17].xyzw, r0.xxxx, r3.xyzw
  24: mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r3.xyzw
  25: mad r0.xyzw, cb4[20].xyzw, r2.wwww, r0.xyzw
  26: div r1.z, cb2[5].x, r0.w
  27: min r1.z, r1.z, l(0.000000)
  28: max r1.z, r1.z, l(-1.000000)
  29: add r0.z, r0.z, r1.z
  30: min r1.z, r0.w, r0.z
  31: mov o0.xyw, r0.xyxw
  32: add r0.x, -r0.z, r1.z
  33: mad o0.z, cb2[5].y, r0.x, r0.z
  34: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  35: mul r0.xyz, r1.yyyy, cb3[1].xyzx
  36: mad r0.xyz, cb3[0].xyzx, r1.xxxx, r0.xyzx
  37: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  38: add o2.xyz, r0.xyzx, cb3[3].xyzx
  39: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  40: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 4 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float       
// TEXCOORD                 3   xyzw        3     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r0.x, cb1[1].z, r0.x, r1.w
   4: mad r0.x, r0.x, v3.w, -cb0[6].x
   5: lt r0.x, r0.x, l(0.000000)
   6: discard_nz r0.x
   7: mov o0.xyzw, l(0,0,0,0)
   8: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA SHADOWS_CUBE
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 5 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[6], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_temps 4
   0: dp3 r0.x, v2.xyzx, cb3[4].xyzx
   1: dp3 r0.y, v2.xyzx, cb3[5].xyzx
   2: dp3 r0.z, v2.xyzx, cb3[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xy, v0.xyxx, cb5[1].xyxx
   7: mul r2.xyzw, r1.yyyy, cb3[1].xyzw
   8: mad r2.xyzw, cb3[0].xyzw, r1.xxxx, r2.xyzw
   9: mad r2.xyzw, cb3[2].xyzw, v0.zzzz, r2.xyzw
  10: add r2.xyzw, r2.xyzw, cb3[3].xyzw
  11: mad r3.xyz, -r2.xyzx, cb1[0].wwww, cb1[0].xyzx
  12: dp3 r0.w, r3.xyzx, r3.xyzx
  13: rsq r0.w, r0.w
  14: mul r3.xyz, r0.wwww, r3.xyzx
  15: dp3 r0.w, r0.xyzx, r3.xyzx
  16: mad r0.w, -r0.w, r0.w, l(1.000000)
  17: sqrt r0.w, r0.w
  18: mul r0.w, r0.w, cb2[5].z
  19: mad r0.xyz, -r0.xyzx, r0.wwww, r2.xyzx
  20: ne r0.w, cb2[5].z, l(0.000000)
  21: movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
  22: mul r3.xyzw, r0.yyyy, cb4[18].xyzw
  23: mad r3.xyzw, cb4[17].xyzw, r0.xxxx, r3.xyzw
  24: mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r3.xyzw
  25: mad r0.xyzw, cb4[20].xyzw, r2.wwww, r0.xyzw
  26: min r1.z, r0.w, r0.z
  27: add r1.z, -r0.z, r1.z
  28: mad o0.z, cb2[5].y, r1.z, r0.z
  29: mov o0.xyw, r0.xyxw
  30: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  31: mul r0.xyz, r1.yyyy, cb3[1].xyzx
  32: mad r0.xyz, cb3[0].xyzx, r1.xxxx, r0.xyzx
  33: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  34: add o2.xyz, r0.xyzx, cb3[3].xyzx
  35: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  36: mul o3.xyzw, r0.xyzw, cb5[0].xyzw
  37: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 4 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float       
// TEXCOORD                 3   xyzw        3     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r0.x, cb1[1].z, r0.x, r1.w
   4: mad r0.x, r0.x, v3.w, -cb0[6].x
   5: lt r0.x, r0.x, l(0.000000)
   6: discard_nz r0.x
   7: mov o0.xyzw, l(0,0,0,0)
   8: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA PIXELSNAP_ON SHADOWS_DEPTH
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 43 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 4 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 5 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 6 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[6], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_constantbuffer CB5[21], immediateIndexed
      dcl_constantbuffer CB6[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_temps 4
   0: dp3 r0.x, v2.xyzx, cb4[4].xyzx
   1: dp3 r0.y, v2.xyzx, cb4[5].xyzx
   2: dp3 r0.z, v2.xyzx, cb4[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xy, v0.xyxx, cb6[1].xyxx
   7: mul r1.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   8: mul r1.xy, r1.zwzz, r1.xyxx
   9: round_ne r1.xy, r1.xyxx
  10: div r1.xy, r1.xyxx, r1.zwzz
  11: mul r2.xyzw, r1.yyyy, cb4[1].xyzw
  12: mad r2.xyzw, cb4[0].xyzw, r1.xxxx, r2.xyzw
  13: mad r2.xyzw, cb4[2].xyzw, v0.zzzz, r2.xyzw
  14: add r2.xyzw, r2.xyzw, cb4[3].xyzw
  15: mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  16: dp3 r0.w, r3.xyzx, r3.xyzx
  17: rsq r0.w, r0.w
  18: mul r3.xyz, r0.wwww, r3.xyzx
  19: dp3 r0.w, r0.xyzx, r3.xyzx
  20: mad r0.w, -r0.w, r0.w, l(1.000000)
  21: sqrt r0.w, r0.w
  22: mul r0.w, r0.w, cb3[5].z
  23: mad r0.xyz, -r0.xyzx, r0.wwww, r2.xyzx
  24: ne r0.w, cb3[5].z, l(0.000000)
  25: movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
  26: mul r3.xyzw, r0.yyyy, cb5[18].xyzw
  27: mad r3.xyzw, cb5[17].xyzw, r0.xxxx, r3.xyzw
  28: mad r0.xyzw, cb5[19].xyzw, r0.zzzz, r3.xyzw
  29: mad r0.xyzw, cb5[20].xyzw, r2.wwww, r0.xyzw
  30: div r1.z, cb3[5].x, r0.w
  31: min r1.z, r1.z, l(0.000000)
  32: max r1.z, r1.z, l(-1.000000)
  33: add r0.z, r0.z, r1.z
  34: min r1.z, r0.w, r0.z
  35: mov o0.xyw, r0.xyxw
  36: add r0.x, -r0.z, r1.z
  37: mad o0.z, cb3[5].y, r0.x, r0.z
  38: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  39: mul r0.xyz, r1.yyyy, cb4[1].xyzx
  40: mad r0.xyz, cb4[0].xyzx, r1.xxxx, r0.xyzx
  41: mad r0.xyz, cb4[2].xyzx, v0.zzzz, r0.xyzx
  42: add o2.xyz, r0.xyzx, cb4[3].xyzx
  43: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  44: mul o3.xyzw, r0.xyzw, cb6[0].xyzw
  45: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 4 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float       
// TEXCOORD                 3   xyzw        3     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r0.x, cb1[1].z, r0.x, r1.w
   4: mad r0.x, r0.x, v3.w, -cb0[6].x
   5: lt r0.x, r0.x, l(0.000000)
   6: discard_nz r0.x
   7: mov o0.xyzw, l(0,0,0,0)
   8: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords: ETC1_EXTERNAL_ALPHA PIXELSNAP_ON SHADOWS_CUBE
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "Color"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ScreenParams at 96
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 4 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 5 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 6 {
  Vector4 _RendererColor at 0
  Vector2 _Flip at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[6], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_constantbuffer CB5[21], immediateIndexed
      dcl_constantbuffer CB6[2], immediateIndexed
      dcl_input v0.xyz
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_input v7.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_temps 4
   0: dp3 r0.x, v2.xyzx, cb4[4].xyzx
   1: dp3 r0.y, v2.xyzx, cb4[5].xyzx
   2: dp3 r0.z, v2.xyzx, cb4[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xy, v0.xyxx, cb6[1].xyxx
   7: mul r1.zw, cb1[6].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
   8: mul r1.xy, r1.zwzz, r1.xyxx
   9: round_ne r1.xy, r1.xyxx
  10: div r1.xy, r1.xyxx, r1.zwzz
  11: mul r2.xyzw, r1.yyyy, cb4[1].xyzw
  12: mad r2.xyzw, cb4[0].xyzw, r1.xxxx, r2.xyzw
  13: mad r2.xyzw, cb4[2].xyzw, v0.zzzz, r2.xyzw
  14: add r2.xyzw, r2.xyzw, cb4[3].xyzw
  15: mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  16: dp3 r0.w, r3.xyzx, r3.xyzx
  17: rsq r0.w, r0.w
  18: mul r3.xyz, r0.wwww, r3.xyzx
  19: dp3 r0.w, r0.xyzx, r3.xyzx
  20: mad r0.w, -r0.w, r0.w, l(1.000000)
  21: sqrt r0.w, r0.w
  22: mul r0.w, r0.w, cb3[5].z
  23: mad r0.xyz, -r0.xyzx, r0.wwww, r2.xyzx
  24: ne r0.w, cb3[5].z, l(0.000000)
  25: movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
  26: mul r3.xyzw, r0.yyyy, cb5[18].xyzw
  27: mad r3.xyzw, cb5[17].xyzw, r0.xxxx, r3.xyzw
  28: mad r0.xyzw, cb5[19].xyzw, r0.zzzz, r3.xyzw
  29: mad r0.xyzw, cb5[20].xyzw, r2.wwww, r0.xyzw
  30: min r1.z, r0.w, r0.z
  31: add r1.z, -r0.z, r1.z
  32: mad o0.z, cb3[5].y, r1.z, r0.z
  33: mov o0.xyw, r0.xyxw
  34: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  35: mul r0.xyz, r1.yyyy, cb4[1].xyzx
  36: mad r0.xyz, cb4[0].xyzx, r1.xxxx, r0.xyzx
  37: mad r0.xyz, cb4[2].xyzx, v0.zzzz, r0.xyzx
  38: add o2.xyz, r0.xyzx, cb4[3].xyzx
  39: mul r0.xyzw, v7.xyzw, cb0[4].xyzw
  40: mul o3.xyzw, r0.xyzw, cb6[0].xyzw
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 4 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_AlphaTex" to slot 1

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Float _NarutoIsOverrated at 96
}
Constant Buffer "UnityPerDrawSprite" (32 bytes) on slot 1 {
  Float _EnableExternalAlpha at 24
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float       
// TEXCOORD                 3   xyzw        3     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   2: add r0.x, r0.x, -r1.w
   3: mad r0.x, cb1[1].z, r0.x, r1.w
   4: mad r0.x, r0.x, v3.w, -cb0[6].x
   5: lt r0.x, r0.x, l(0.000000)
   6: discard_nz r0.x
   7: mov o0.xyzw, l(0,0,0,0)
   8: ret 
// Approximately 0 instruction slots used


 }
}
Fallback "Transparent/VertexLit"
}